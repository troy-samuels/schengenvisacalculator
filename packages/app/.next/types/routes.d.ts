// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/content-generator" | "/blog" | "/blog/[slug]" | "/dashboard" | "/ees" | "/ees/countries" | "/ees/countries/france" | "/ees/countries/germany" | "/ees/countries/spain" | "/ees/digital-nomads" | "/ees/preparation" | "/ees/preparation-kit" | "/ees/vs-etias" | "/payment-cancelled" | "/payment-success" | "/save-progress"
type AppRouteHandlerRoutes = "/api/ai-assistant/chat" | "/api/ai-assistant/recommendations" | "/api/intelligence/openai" | "/api/intelligence/openrouter" | "/api/intelligence/perplexity" | "/api/stripe/create-checkout-session" | "/api/stripe/verify-session" | "/api/stripe/webhook" | "/api/subscription/status"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = "/app/[[...path]]"
type RewriteRoutes = "/sw.js"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/content-generator": {}
  "/api/ai-assistant/chat": {}
  "/api/ai-assistant/recommendations": {}
  "/api/intelligence/openai": {}
  "/api/intelligence/openrouter": {}
  "/api/intelligence/perplexity": {}
  "/api/stripe/create-checkout-session": {}
  "/api/stripe/verify-session": {}
  "/api/stripe/webhook": {}
  "/api/subscription/status": {}
  "/app/[[...path]]": { "path"?: string[]; }
  "/blog": {}
  "/blog/[slug]": { "slug": string; }
  "/dashboard": {}
  "/ees": {}
  "/ees/countries": {}
  "/ees/countries/france": {}
  "/ees/countries/germany": {}
  "/ees/countries/spain": {}
  "/ees/digital-nomads": {}
  "/ees/preparation": {}
  "/ees/preparation-kit": {}
  "/ees/vs-etias": {}
  "/payment-cancelled": {}
  "/payment-success": {}
  "/save-progress": {}
  "/sw.js": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
