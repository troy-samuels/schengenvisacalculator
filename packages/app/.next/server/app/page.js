/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/module.compiled.js?ca56\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/../../node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/../../node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/../../node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/app-render/strip-flight-headers */ \"(rsc)/../../node_modules/next/dist/server/app-render/strip-flight-headers.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/../../node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/../../node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/../../node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/../../node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/../../node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/../../node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/../../node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/../../node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/../../node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/../../node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/../../node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/../../node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/../../node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/../../node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/../../node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/../../node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\nconst page5 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\"];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig, interceptionRoutePatterns } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_14__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = routeModule.match(pathname, prerenderManifest);\n    const isPrerendered = !!prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_ROUTER_PREFETCH_HEADER] === '1' // exclude runtime prefetches, which use '2'\n    ;\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_15__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_9__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_12__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (!routeModule.isDev && !isDraftMode && isSSG && isRSCRequest && !isDynamicRSCRequest) {\n        (0,next_dist_server_app_render_strip_flight_headers__WEBPACK_IMPORTED_MODULE_7__.stripFlightHeaders)(req.headers);\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_26__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_25___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_11__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_13__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const varyHeader = routeModule.getVaryHeader(resolvedPathname, interceptionRoutePatterns);\n        res.setHeader('Vary', varyHeader);\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_8__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.cacheComponents && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir:  true ? (__webpack_require__(/*! path */ \"path\").join)(/* turbopackIgnore: true */ process.cwd(), routeModule.relativeProjectDir) : 0,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        clientParamParsing: Boolean(nextConfig.experimental.clientParamParsing),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a HTML bot request, we want to serve a blocking render and\n            // not the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_17__.isBot)(userAgent)) {\n                if (!isRoutePPREnabled || isHtmlBot) {\n                    fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n                }\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_19__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    const cacheKey = typeof (prerenderInfo == null ? void 0 : prerenderInfo.fallback) === 'string' ? prerenderInfo.fallback : isProduction ? normalizedSrcPage : null;\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_10__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(matchedSegment, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].EMPTY,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_21__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_27__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_20__[\"default\"].fromStatic(cachedData.rscData, next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_16__.RSC_CONTENT_TYPE_HEADER),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode || isRSCRequest) {\n                // If we're in test mode, we should add a sentinel chunk to the response\n                // that's between the static and dynamic parts so we can compare the\n                // chunks and add assertions.\n                if (false) {}\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.push(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_22__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // If we're in test mode, we should add a sentinel chunk to the response\n            // that's between the static and dynamic parts so we can compare the\n            // chunks and add assertions.\n            if (false) {}\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.push(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_18__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_23__.sendRenderResult)({\n                req,\n                res,\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_24__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n// TODO: omit this from production builds, only test builds should include it\n/**\n * Creates a readable stream that emits a PPR boundary sentinel.\n *\n * @returns A readable stream that emits a PPR boundary sentinel.\n */ function createPPRBoundarySentinel() {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(new TextEncoder().encode('<!-- PPR_BOUNDARY_SENTINEL -->'));\n            controller.close();\n        }\n    });\n}\n\n//# sourceMappingURL=app-page.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/../../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/client-page.js */ \"(rsc)/../../node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/../../node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/../../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/../../node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/../../node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/../../node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/lib/framework/boundary-components.js */ \"(rsc)/../../node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/../../node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/../../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZidWlsdGluJTJGZ2xvYmFsLWVycm9yLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1zZWdtZW50LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmh0dHAtYWNjZXNzLWZhbGxiYWNrJTJGZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbGF5b3V0LXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZsaWIlMkZmcmFtZXdvcmslMkZib3VuZGFyeS1jb21wb25lbnRzLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDhQQUF3SztBQUN4SztBQUNBLDRPQUErSjtBQUMvSjtBQUNBLGtQQUFrSztBQUNsSztBQUNBLDRSQUF1TDtBQUN2TDtBQUNBLGdQQUFpSztBQUNqSztBQUNBLG9RQUEySztBQUMzSztBQUNBLDhRQUFnTDtBQUNoTDtBQUNBLG9QQUFtSztBQUNuSztBQUNBLGdQQUFpSztBQUNqSztBQUNBLG9SQUFtTCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYnVpbHRpbi9nbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvZnJhbWV3b3JrL2JvdW5kYXJ5LWNvbXBvbmVudHMuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZW5lcmF0ZS9pY29uLW1hcmsuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ../../node_modules/next-themes/dist/index.mjs */ \"(rsc)/../../node_modules/next-themes/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0LXRoZW1lcyUyRmRpc3QlMkZpbmRleC5tanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUaGVtZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJzcmMlMkZhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1pbnRlciU1QyUyMiUyQyU1QyUyMmRpc3BsYXklNUMlMjIlM0ElNUMlMjJzd2FwJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyaW50ZXIlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZnb29nbGUlMkZ0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMnNyYyUyRmFwcCUyRmxheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJHZWlzdCU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWdlaXN0LXNhbnMlNUMlMjIlMkMlNUMlMjJkaXNwbGF5JTVDJTIyJTNBJTVDJTIyc3dhcCU1QyUyMiU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMmdlaXN0U2FucyU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZm9udCUyRmdvb2dsZSUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyc3JjJTJGYXBwJTJGbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMkdlaXN0X01vbm8lNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1tb25vJTVDJTIyJTJDJTVDJTIyZGlzcGxheSU1QyUyMiUzQSU1QyUyMnN3YXAlNUMlMjIlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJnZWlzdE1vbm8lNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGcGFja2FnZXMlMkZhcHAlMkZzcmMlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsc01BQWtMIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUaGVtZVByb3ZpZGVyXCJdICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0LXRoZW1lcy9kaXN0L2luZGV4Lm1qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZwYWNrYWdlcyUyRmFwcCUyRnNyYyUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxnSkFBcUkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9wYWNrYWdlcy9hcHAvc3JjL2FwcC9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"66d0aa5264ad\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3IvcGFja2FnZXMvYXBwL3NyYy9hcHAvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI2NmQwYWE1MjY0YWRcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata),\n/* harmony export */   viewport: () => (/* binding */ viewport)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/../../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_display_swap_variableName_inter___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"],\"variable\":\"--font-inter\",\"display\":\"swap\"}],\"variableName\":\"inter\"} */ \"(rsc)/../../node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"variable\\\":\\\"--font-inter\\\",\\\"display\\\":\\\"swap\\\"}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_display_swap_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_display_swap_variableName_inter___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Geist_arguments_subsets_latin_variable_font_geist_sans_display_swap_variableName_geistSans___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Geist\",\"arguments\":[{\"subsets\":[\"latin\"],\"variable\":\"--font-geist-sans\",\"display\":\"swap\"}],\"variableName\":\"geistSans\"} */ \"(rsc)/../../node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Geist\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"display\\\":\\\"swap\\\"}],\\\"variableName\\\":\\\"geistSans\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Geist_arguments_subsets_latin_variable_font_geist_sans_display_swap_variableName_geistSans___WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Geist_arguments_subsets_latin_variable_font_geist_sans_display_swap_variableName_geistSans___WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Geist_Mono_arguments_subsets_latin_variable_font_geist_mono_display_swap_variableName_geistMono___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Geist_Mono\",\"arguments\":[{\"subsets\":[\"latin\"],\"variable\":\"--font-geist-mono\",\"display\":\"swap\"}],\"variableName\":\"geistMono\"} */ \"(rsc)/../../node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Geist_Mono\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"display\\\":\\\"swap\\\"}],\\\"variableName\\\":\\\"geistMono\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Geist_Mono_arguments_subsets_latin_variable_font_geist_mono_display_swap_variableName_geistMono___WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Geist_Mono_arguments_subsets_latin_variable_font_geist_mono_display_swap_variableName_geistMono___WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-themes */ \"(rsc)/../../node_modules/next-themes/dist/index.mjs\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\n\n\n\nconst metadata = {\n    title: {\n        default: 'Schengen Visa Calculator | 90/180 Rule Compliance Tool',\n        template: '%s | Schengen Calculator'\n    },\n    description: 'Professional EU Schengen visa calculator for the 90/180-day rule. Track your trips, ensure compliance, and plan travel with our enterprise-grade platform.',\n    keywords: [\n        'schengen visa calculator',\n        '90 180 day rule',\n        'eu travel',\n        'visa compliance',\n        'travel planning',\n        'europe visa',\n        'schengen area',\n        'trip tracker'\n    ],\n    authors: [\n        {\n            name: 'Schengen Calculator Team'\n        }\n    ],\n    creator: 'Schengen Calculator',\n    publisher: 'Schengen Calculator',\n    formatDetection: {\n        email: false,\n        address: false,\n        telephone: false\n    },\n    metadataBase: new URL(process.env.NEXT_PUBLIC_APP_URL || 'https://schengen-calculator.com'),\n    alternates: {\n        canonical: '/'\n    },\n    openGraph: {\n        type: 'website',\n        locale: 'en_US',\n        url: '/',\n        title: 'Schengen Visa Calculator | 90/180 Rule Compliance Tool',\n        description: 'Professional EU Schengen visa calculator for the 90/180-day rule. Track your trips, ensure compliance, and plan travel.',\n        siteName: 'Schengen Calculator',\n        images: [\n            {\n                url: '/og-image.png',\n                width: 1200,\n                height: 630,\n                alt: 'Schengen Visa Calculator'\n            }\n        ]\n    },\n    twitter: {\n        card: 'summary_large_image',\n        title: 'Schengen Visa Calculator',\n        description: 'Professional EU Schengen visa calculator for the 90/180-day rule.',\n        images: [\n            '/og-image.png'\n        ],\n        creator: '@schengen_calc'\n    },\n    robots: {\n        index: true,\n        follow: true,\n        googleBot: {\n            index: true,\n            follow: true,\n            'max-video-preview': -1,\n            'max-image-preview': 'large',\n            'max-snippet': -1\n        }\n    },\n    verification: {\n        google: process.env.NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION,\n        yandex: process.env.NEXT_PUBLIC_YANDEX_VERIFICATION,\n        other: {\n            'msvalidate.01': process.env.NEXT_PUBLIC_BING_SITE_VERIFICATION || ''\n        }\n    },\n    manifest: '/manifest.json',\n    icons: {\n        icon: [\n            {\n                url: '/favicon-16x16.png',\n                sizes: '16x16',\n                type: 'image/png'\n            },\n            {\n                url: '/favicon-32x32.png',\n                sizes: '32x32',\n                type: 'image/png'\n            }\n        ],\n        shortcut: '/favicon.ico',\n        apple: [\n            {\n                url: '/apple-touch-icon.png',\n                sizes: '180x180',\n                type: 'image/png'\n            }\n        ]\n    }\n};\nconst viewport = {\n    width: 'device-width',\n    initialScale: 1,\n    maximumScale: 5,\n    userScalable: true,\n    themeColor: [\n        {\n            media: '(prefers-color-scheme: light)',\n            color: '#ffffff'\n        },\n        {\n            media: '(prefers-color-scheme: dark)',\n            color: '#0f172a'\n        }\n    ]\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        suppressHydrationWarning: true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.googleapis.com\"\n                    }, void 0, false, {\n                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                        lineNumber: 125,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"preconnect\",\n                        href: \"https://fonts.gstatic.com\",\n                        crossOrigin: \"anonymous\"\n                    }, void 0, false, {\n                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                        lineNumber: 126,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                lineNumber: 124,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: `${(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_display_swap_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default().variable)} ${(next_font_google_target_css_path_src_app_layout_tsx_import_Geist_arguments_subsets_latin_variable_font_geist_sans_display_swap_variableName_geistSans___WEBPACK_IMPORTED_MODULE_4___default().variable)} ${(next_font_google_target_css_path_src_app_layout_tsx_import_Geist_Mono_arguments_subsets_latin_variable_font_geist_mono_display_swap_variableName_geistMono___WEBPACK_IMPORTED_MODULE_5___default().variable)} min-h-screen bg-background font-sans antialiased`,\n                suppressHydrationWarning: true,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\n                    attribute: \"class\",\n                    defaultTheme: \"system\",\n                    enableSystem: true,\n                    disableTransitionOnChange: true,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative flex min-h-screen flex-col\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                            className: \"flex-1\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                            lineNumber: 139,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                        lineNumber: 138,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                    lineNumber: 132,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n                lineNumber: 128,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/layout.tsx\",\n        lineNumber: 123,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/../../node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n// This file is generated by the Webpack next-flight-loader.\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBIiwic291cmNlcyI6WyJfTl9FLy4vc3JjL2FwcC9wYWdlLnRzeC9fX25leHRqcy1pbnRlcm5hbC1wcm94eS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSB0aGUgV2VicGFjayBuZXh0LWZsaWdodC1sb2FkZXIuXG5pbXBvcnQgeyByZWdpc3RlckNsaWVudFJlZmVyZW5jZSB9IGZyb20gXCJyZWFjdC1zZXJ2ZXItZG9tLXdlYnBhY2svc2VydmVyXCI7XG5leHBvcnQgZGVmYXVsdCByZWdpc3RlckNsaWVudFJlZmVyZW5jZShcbmZ1bmN0aW9uKCkgeyB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gY2FsbCB0aGUgZGVmYXVsdCBleHBvcnQgb2YgXFxcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9wYWNrYWdlcy9hcHAvc3JjL2FwcC9wYWdlLnRzeFxcXCIgZnJvbSB0aGUgc2VydmVyLCBidXQgaXQncyBvbiB0aGUgY2xpZW50LiBJdCdzIG5vdCBwb3NzaWJsZSB0byBpbnZva2UgYSBjbGllbnQgZnVuY3Rpb24gZnJvbSB0aGUgc2VydmVyLCBpdCBjYW4gb25seSBiZSByZW5kZXJlZCBhcyBhIENvbXBvbmVudCBvciBwYXNzZWQgdG8gcHJvcHMgb2YgYSBDbGllbnQgQ29tcG9uZW50LlwiKTsgfSxcblwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL3BhY2thZ2VzL2FwcC9zcmMvYXBwL3BhZ2UudHN4XCIsXG5cImRlZmF1bHRcIixcbik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/../../node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/client-page.js */ \"(ssr)/../../node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/../../node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/../../node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/../../node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/../../node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/../../node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/lib/framework/boundary-components.js */ \"(ssr)/../../node_modules/next/dist/lib/framework/boundary-components.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ../../node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/../../node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/../../node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZidWlsdGluJTJGZ2xvYmFsLWVycm9yLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1zZWdtZW50LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmh0dHAtYWNjZXNzLWZhbGxiYWNrJTJGZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbGF5b3V0LXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZsaWIlMkZmcmFtZXdvcmslMkZib3VuZGFyeS1jb21wb25lbnRzLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZnZW5lcmF0ZSUyRmljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRm5leHQtZGV2dG9vbHMlMkZ1c2Vyc3BhY2UlMkZhcHAlMkZzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDhQQUF3SztBQUN4SztBQUNBLDRPQUErSjtBQUMvSjtBQUNBLGtQQUFrSztBQUNsSztBQUNBLDRSQUF1TDtBQUN2TDtBQUNBLGdQQUFpSztBQUNqSztBQUNBLG9RQUEySztBQUMzSztBQUNBLDhRQUFnTDtBQUNoTDtBQUNBLG9QQUFtSztBQUNuSztBQUNBLDBPQUFpSztBQUNqSztBQUNBLG9SQUFtTCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYnVpbHRpbi9nbG9iYWwtZXJyb3IuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdHJveXNhbXVlbHMvU0NIRU5HRU4gVklTQSBDQUxDVUxBVE9SL3NjaGVuZ2VudmlzYWNhbGN1bGF0b3Ivbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvZnJhbWV3b3JrL2JvdW5kYXJ5LWNvbXBvbmVudHMuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZW5lcmF0ZS9pY29uLW1hcmsuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L25leHQtZGV2dG9vbHMvdXNlcnNwYWNlL2FwcC9zZWdtZW50LWV4cGxvcmVyLW5vZGUuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fbuiltin%2Fglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fframework%2Fboundary-components.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fgenerate%2Ficon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Fdist%2Fnext-devtools%2Fuserspace%2Fapp%2Fsegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ../../node_modules/next-themes/dist/index.mjs */ \"(ssr)/../../node_modules/next-themes/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0LXRoZW1lcyUyRmRpc3QlMkZpbmRleC5tanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJUaGVtZVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdHJveXNhbXVlbHMlMkZTQ0hFTkdFTiUyMFZJU0ElMjBDQUxDVUxBVE9SJTJGc2NoZW5nZW52aXNhY2FsY3VsYXRvciUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJzcmMlMkZhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1pbnRlciU1QyUyMiUyQyU1QyUyMmRpc3BsYXklNUMlMjIlM0ElNUMlMjJzd2FwJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyaW50ZXIlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZnb29nbGUlMkZ0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMnNyYyUyRmFwcCUyRmxheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJHZWlzdCU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWdlaXN0LXNhbnMlNUMlMjIlMkMlNUMlMjJkaXNwbGF5JTVDJTIyJTNBJTVDJTIyc3dhcCU1QyUyMiU3RCU1RCUyQyU1QyUyMnZhcmlhYmxlTmFtZSU1QyUyMiUzQSU1QyUyMmdlaXN0U2FucyU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZm9udCUyRmdvb2dsZSUyRnRhcmdldC5jc3MlM0YlN0IlNUMlMjJwYXRoJTVDJTIyJTNBJTVDJTIyc3JjJTJGYXBwJTJGbGF5b3V0LnRzeCU1QyUyMiUyQyU1QyUyMmltcG9ydCU1QyUyMiUzQSU1QyUyMkdlaXN0X01vbm8lNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlMkMlNUMlMjJ2YXJpYWJsZSU1QyUyMiUzQSU1QyUyMi0tZm9udC1nZWlzdC1tb25vJTVDJTIyJTJDJTVDJTIyZGlzcGxheSU1QyUyMiUzQSU1QyUyMnN3YXAlNUMlMjIlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJnZWlzdE1vbm8lNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0cm95c2FtdWVscyUyRlNDSEVOR0VOJTIwVklTQSUyMENBTENVTEFUT1IlMkZzY2hlbmdlbnZpc2FjYWxjdWxhdG9yJTJGcGFja2FnZXMlMkZhcHAlMkZzcmMlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsc01BQWtMIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJUaGVtZVByb3ZpZGVyXCJdICovIFwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL25vZGVfbW9kdWxlcy9uZXh0LXRoZW1lcy9kaXN0L2luZGV4Lm1qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext-themes%2Fdist%2Findex.mjs%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22display%5C%22%3A%5C%22swap%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(ssr)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRyb3lzYW11ZWxzJTJGU0NIRU5HRU4lMjBWSVNBJTIwQ0FMQ1VMQVRPUiUyRnNjaGVuZ2VudmlzYWNhbGN1bGF0b3IlMkZwYWNrYWdlcyUyRmFwcCUyRnNyYyUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxnSkFBcUkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9wYWNrYWdlcy9hcHAvc3JjL2FwcC9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../calculator/dist/index.esm.js":
/*!***************************************!*\
  !*** ../calculator/dist/index.esm.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DateOverlapValidator: () => (/* binding */ DateOverlapValidator),\n/* harmony export */   RobustSchengenCalculator: () => (/* binding */ RobustSchengenCalculator),\n/* harmony export */   SCHENGEN_COUNTRIES: () => (/* binding */ SCHENGEN_COUNTRIES),\n/* harmony export */   SCHENGEN_COUNTRIES_COUNT: () => (/* binding */ SCHENGEN_COUNTRIES_COUNT),\n/* harmony export */   getCountriesForSelect: () => (/* binding */ getCountriesForSelect),\n/* harmony export */   getCountryByCode: () => (/* binding */ getCountryByCode),\n/* harmony export */   getCountryByName: () => (/* binding */ getCountryByName),\n/* harmony export */   getEUMemberCountries: () => (/* binding */ getEUMemberCountries),\n/* harmony export */   getNonEUSchengenCountries: () => (/* binding */ getNonEUSchengenCountries)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/isValid.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/subDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/addDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/format.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/startOfDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/differenceInDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/isLeapYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/endOfDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,areIntervalsOverlapping,differenceInDays,endOfDay,format,isLeapYear,isValid,startOfDay,subDays!=!date-fns */ \"(ssr)/../calculator/node_modules/date-fns/areIntervalsOverlapping.js\");\n\n/**\n * Robust Schengen Calculator implementing exact 180-day rolling window rules\n * \n * Key Schengen Rules:\n * 1. Maximum 90 days in any 180-day period\n * 2. The 180-day period is ROLLING - calculated from any given date backward\n * 3. Entry and exit days both count as stay days\n * 4. Days must be calculated for EVERY day, not just trip endpoints\n */ class RobustSchengenCalculator {\n    /**\n   * Calculate compliance using exact rolling window algorithm\n   * This checks compliance for EVERY day in the period, not just trip endpoints\n   * Enhanced with edge case handling for leap years, timezones, and boundary conditions\n   */ static calculateExactCompliance(trips, referenceDate = new Date()) {\n        try {\n            // Enhanced input validation\n            if (!Array.isArray(trips)) {\n                throw new Error('Trips must be an array');\n            }\n            if (!referenceDate || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(referenceDate)) {\n                throw new Error('Reference date must be a valid Date object');\n            }\n            // Validate reference date is not in extreme future/past\n            const now = new Date();\n            const tenYearsAgo = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(now, 365 * 10);\n            const fiveYearsFromNow = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(now, 365 * 5);\n            if (referenceDate < tenYearsAgo || referenceDate > fiveYearsFromNow) {\n                console.warn(`Reference date ${(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(referenceDate, 'yyyy-MM-dd')} is outside reasonable range`);\n            }\n            // Normalize reference date to start of day (UTC-agnostic)\n            const normalizedRefDate = this.normalizeToStartOfDay(referenceDate);\n            const periodStart = this.calculatePeriodStart(normalizedRefDate);\n            // Validate and normalize all trips\n            const validTrips = this.validateAndNormalizeTrips(trips);\n            // Handle empty trips case\n            if (validTrips.length === 0) {\n                return {\n                    totalDaysUsed: 0,\n                    daysRemaining: this.MAX_DAYS_IN_PERIOD,\n                    isCompliant: true,\n                    overstayDays: 0,\n                    referenceDate: normalizedRefDate,\n                    periodStart,\n                    periodEnd: normalizedRefDate,\n                    detailedBreakdown: []\n                };\n            }\n            // Create a map of all days with stays\n            const dailyStays = this.createDailyStayMap(validTrips, periodStart, normalizedRefDate);\n            // Calculate rolling compliance for each day\n            const rollingChecks = this.calculateRollingComplianceForAllDays(dailyStays, periodStart, normalizedRefDate);\n            // Validate rolling checks\n            if (rollingChecks.length === 0) {\n                throw new Error('Failed to generate rolling compliance checks');\n            }\n            // Find the maximum violation and current status\n            const maxViolation = Math.max(...rollingChecks.map((check)=>check.overstayDays));\n            const currentCompliance = rollingChecks[rollingChecks.length - 1];\n            if (!currentCompliance) {\n                throw new Error('Failed to get current compliance status');\n            }\n            // Generate detailed breakdown\n            const detailedBreakdown = this.generateDetailedBreakdown(dailyStays, rollingChecks, periodStart, normalizedRefDate);\n            const result = {\n                totalDaysUsed: currentCompliance.daysInWindow,\n                daysRemaining: Math.max(0, this.MAX_DAYS_IN_PERIOD - currentCompliance.daysInWindow),\n                isCompliant: maxViolation === 0,\n                overstayDays: maxViolation,\n                referenceDate: normalizedRefDate,\n                periodStart,\n                periodEnd: normalizedRefDate,\n                detailedBreakdown\n            };\n            // Final validation of result\n            if (result.totalDaysUsed < 0 || result.daysRemaining < 0) {\n                console.error('Invalid calculation result:', result);\n                throw new Error('Calculation produced invalid negative values');\n            }\n            return result;\n        } catch (error) {\n            console.error('Error in calculateExactCompliance:', error);\n            // Return safe fallback\n            const normalizedRefDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(referenceDate);\n            return {\n                totalDaysUsed: 0,\n                daysRemaining: this.MAX_DAYS_IN_PERIOD,\n                isCompliant: true,\n                overstayDays: 0,\n                referenceDate: normalizedRefDate,\n                periodStart: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(normalizedRefDate, this.ROLLING_PERIOD_DAYS - 1),\n                periodEnd: normalizedRefDate,\n                detailedBreakdown: []\n            };\n        }\n    }\n    /**\n   * Calculate the exact number of days used in any 180-day window ending on a specific date\n   */ static calculateDaysInWindow(trips, endDate) {\n        if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(endDate)) {\n            throw new Error('End date must be valid');\n        }\n        const normalizedEndDate = this.normalizeToStartOfDay(endDate);\n        const windowStart = this.calculatePeriodStart(normalizedEndDate);\n        let totalDays = 0;\n        for (const trip of trips){\n            if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.startDate) || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.endDate)) {\n                console.warn(`Skipping trip ${trip.id} with invalid dates`);\n                continue;\n            }\n            const tripStart = this.normalizeToStartOfDay(trip.startDate);\n            const tripEnd = this.normalizeToStartOfDay(trip.endDate);\n            // Calculate overlap with the window (inclusive of both start and end)\n            const overlapStart = tripStart > windowStart ? tripStart : windowStart;\n            const overlapEnd = tripEnd < normalizedEndDate ? tripEnd : normalizedEndDate;\n            if (overlapStart <= overlapEnd) {\n                // Both start and end days count, so we add 1\n                const daysInOverlap = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(overlapEnd, overlapStart) + 1;\n                // Validate the calculated days\n                if (daysInOverlap < 0) {\n                    console.error(`Negative days calculated for trip ${trip.id}`);\n                    continue;\n                }\n                totalDays += daysInOverlap;\n            }\n        }\n        return totalDays;\n    }\n    /**\n   * Check if a planned trip would violate the 90/180 rule\n   */ static validatePlannedTrip(existingTrips, plannedTrip) {\n        const allTrips = [\n            ...existingTrips,\n            plannedTrip\n        ];\n        // Check compliance for every day of the planned trip\n        let currentDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(plannedTrip.startDate);\n        const endDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(plannedTrip.endDate);\n        let maxViolation = 0;\n        let violationDate = null;\n        while(currentDate <= endDate){\n            const daysInWindow = this.calculateDaysInWindow(allTrips, currentDate);\n            const overstay = Math.max(0, daysInWindow - this.MAX_DAYS_IN_PERIOD);\n            if (overstay > maxViolation) {\n                maxViolation = overstay;\n                violationDate = new Date(currentDate);\n            }\n            currentDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(currentDate, 1);\n        }\n        return {\n            isValid: maxViolation === 0,\n            violationDays: maxViolation,\n            violationDate\n        };\n    }\n    /**\n   * Find the latest date when a trip of specified length could start without violation\n   */ static findLatestValidStartDate(existingTrips, tripLength, earliestStart, latestStart) {\n        let testDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(latestStart);\n        const minDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(earliestStart);\n        while(testDate >= minDate){\n            const testTrip = {\n                id: 'test',\n                country: 'TEST',\n                startDate: testDate,\n                endDate: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(testDate, tripLength - 1),\n                days: tripLength\n            };\n            const validation = this.validatePlannedTrip(existingTrips, testTrip);\n            if (validation.isValid) {\n                return testDate;\n            }\n            testDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(testDate, 1);\n        }\n        return null;\n    }\n    /**\n   * Calculate maximum consecutive days available from a start date\n   */ static calculateMaxConsecutiveDays(existingTrips, startDate) {\n        let maxDays = 0;\n        let testLength = 1;\n        const maxTestLength = 100 // Safety limit\n        ;\n        while(testLength <= maxTestLength){\n            const testTrip = {\n                id: 'test',\n                country: 'TEST',\n                startDate: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(startDate),\n                endDate: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)((0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(startDate), testLength - 1),\n                days: testLength\n            };\n            const validation = this.validatePlannedTrip(existingTrips, testTrip);\n            if (validation.isValid) {\n                maxDays = testLength;\n                testLength++;\n            } else {\n                break;\n            }\n        }\n        return Math.min(maxDays, this.MAX_DAYS_IN_PERIOD);\n    }\n    /**\n   * Comprehensive trip validation\n   */ static validateTrips(trips) {\n        const errors = [];\n        const warnings = [];\n        const seenIds = new Set();\n        trips.forEach((trip, index)=>{\n            // Check for duplicate IDs\n            if (seenIds.has(trip.id)) {\n                errors.push({\n                    field: 'id',\n                    message: `Duplicate trip ID: ${trip.id}`,\n                    severity: 'ERROR',\n                    tripId: trip.id\n                });\n            }\n            seenIds.add(trip.id);\n            // Required fields\n            if (!trip.id || trip.id.trim() === '') {\n                errors.push({\n                    field: 'id',\n                    message: `Trip at index ${index} is missing an ID`,\n                    severity: 'ERROR'\n                });\n            }\n            if (!trip.country || trip.country.trim() === '') {\n                errors.push({\n                    field: 'country',\n                    message: 'Country is required',\n                    severity: 'ERROR',\n                    tripId: trip.id\n                });\n            }\n            if (!trip.startDate) {\n                errors.push({\n                    field: 'startDate',\n                    message: 'Start date is required',\n                    severity: 'ERROR',\n                    tripId: trip.id\n                });\n            }\n            if (!trip.endDate) {\n                errors.push({\n                    field: 'endDate',\n                    message: 'End date is required',\n                    severity: 'ERROR',\n                    tripId: trip.id\n                });\n            }\n            // Date validation\n            if (trip.startDate && trip.endDate) {\n                if (trip.startDate > trip.endDate) {\n                    errors.push({\n                        field: 'dates',\n                        message: 'Start date must be before or equal to end date',\n                        severity: 'ERROR',\n                        tripId: trip.id\n                    });\n                }\n                const duration = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(trip.endDate, trip.startDate) + 1;\n                if (duration > this.MAX_DAYS_IN_PERIOD) {\n                    errors.push({\n                        field: 'duration',\n                        message: `Trip duration (${duration} days) exceeds maximum allowed consecutive stay (${this.MAX_DAYS_IN_PERIOD} days)`,\n                        severity: 'ERROR',\n                        tripId: trip.id\n                    });\n                }\n                if (duration < 1) {\n                    errors.push({\n                        field: 'duration',\n                        message: 'Trip must be at least 1 day long',\n                        severity: 'ERROR',\n                        tripId: trip.id\n                    });\n                }\n                // Check for unreasonable dates\n                const now = new Date();\n                const tenYearsAgo = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(now, 365 * 10);\n                const fiveYearsFromNow = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(now, 365 * 5);\n                if (trip.startDate < tenYearsAgo) {\n                    warnings.push({\n                        field: 'startDate',\n                        message: 'Start date seems unreasonably far in the past',\n                        severity: 'WARNING',\n                        tripId: trip.id\n                    });\n                }\n                if (trip.endDate > fiveYearsFromNow) {\n                    warnings.push({\n                        field: 'endDate',\n                        message: 'End date seems unreasonably far in the future',\n                        severity: 'WARNING',\n                        tripId: trip.id\n                    });\n                }\n                // Check for consistency with days field\n                if (trip.days && Math.abs(trip.days - duration) > 0) {\n                    warnings.push({\n                        field: 'days',\n                        message: `Days field (${trip.days}) doesn't match calculated duration (${duration})`,\n                        severity: 'WARNING',\n                        tripId: trip.id\n                    });\n                }\n            }\n        });\n        // Check for overlapping trips (same dates)\n        for(let i = 0; i < trips.length; i++){\n            for(let j = i + 1; j < trips.length; j++){\n                const trip1 = trips[i];\n                const trip2 = trips[j];\n                if (!trip1.startDate || !trip1.endDate || !trip2.startDate || !trip2.endDate) continue;\n                // Check if trips overlap\n                const overlap = !(trip1.endDate < trip2.startDate || trip2.endDate < trip1.startDate);\n                if (overlap) {\n                    warnings.push({\n                        field: 'dates',\n                        message: `Trip ${trip1.id} overlaps with trip ${trip2.id}. This may be intentional for same-day travel between countries.`,\n                        severity: 'WARNING',\n                        tripId: trip1.id\n                    });\n                }\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors,\n            warnings\n        };\n    }\n    /**\n   * Get next date when days will \"roll off\" the window\n   */ static getNextResetDate(trips, referenceDate = new Date()) {\n        const normalizedRefDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(referenceDate);\n        const currentWindow = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(normalizedRefDate, this.ROLLING_PERIOD_DAYS - 1);\n        // Find the earliest trip day that affects the current window\n        let earliestRelevantDate = null;\n        for (const trip of trips){\n            let checkDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.startDate);\n            const endDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.endDate);\n            while(checkDate <= endDate){\n                if (checkDate >= currentWindow && checkDate <= normalizedRefDate) {\n                    if (!earliestRelevantDate || checkDate < earliestRelevantDate) {\n                        earliestRelevantDate = checkDate;\n                    }\n                }\n                checkDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(checkDate, 1);\n            }\n        }\n        if (!earliestRelevantDate) return null;\n        // The reset date is 180 days after the earliest relevant date\n        return (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(earliestRelevantDate, this.ROLLING_PERIOD_DAYS);\n    }\n    /**\n   * Debug function to visualize rolling window calculations\n   */ static debugRollingWindow(trips, referenceDate) {\n        const result = this.calculateExactCompliance(trips, referenceDate);\n        return {\n            summary: {\n                totalDaysUsed: result.totalDaysUsed,\n                daysRemaining: result.daysRemaining,\n                isCompliant: result.isCompliant,\n                overstayDays: result.overstayDays,\n                periodStart: result.periodStart,\n                periodEnd: result.periodEnd\n            },\n            tripsInPeriod: trips.filter((trip)=>trip.endDate >= result.periodStart && trip.startDate <= result.periodEnd),\n            dailyBreakdown: result.detailedBreakdown.filter((day)=>day.daysUsedOnDate > 0),\n            violations: result.detailedBreakdown.filter((day)=>day.isViolation),\n            nextResetDate: this.getNextResetDate(trips, referenceDate)\n        };\n    }\n    /**\n   * Validate and normalize trip data with error handling\n   */ static validateAndNormalizeTrips(trips) {\n        // Run validation but proceed with filtering\n        const validationResult = this.validateTrips(trips);\n        const criticalErrors = validationResult.errors;\n        if (criticalErrors.length > 0) {\n            console.warn('Critical validation errors found:', criticalErrors);\n        }\n        return trips.filter((trip)=>{\n            // Only include trips that pass basic validation\n            if (!trip.startDate || !trip.endDate || !trip.country) return false;\n            // Enhanced date validation\n            if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.startDate) || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.endDate)) {\n                console.warn(`Trip ${trip.id} has invalid dates`);\n                return false;\n            }\n            if (trip.startDate > trip.endDate) return false;\n            // Filter out trips with excessive duration\n            const duration = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(trip.endDate, trip.startDate) + 1;\n            if (duration > this.MAX_DAYS_IN_PERIOD) return false;\n            // Filter out trips with unreasonable dates\n            const now = new Date();\n            const veryOld = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(now, 365 * 20) // 20 years ago\n            ;\n            const veryFuture = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(now, 365 * 10) // 10 years in future\n            ;\n            if (trip.endDate < veryOld || trip.startDate > veryFuture) {\n                console.warn(`Trip ${trip.id} has unreasonable dates`);\n                return false;\n            }\n            return true;\n        }).map((trip)=>{\n            try {\n                const normalizedTrip = {\n                    ...trip,\n                    startDate: this.normalizeToStartOfDay(trip.startDate),\n                    endDate: this.normalizeToStartOfDay(trip.endDate),\n                    days: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(trip.endDate, trip.startDate) + 1\n                };\n                // Validate normalized dates\n                if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(normalizedTrip.startDate) || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(normalizedTrip.endDate)) {\n                    console.error(`Invalid dates after normalization for trip ${trip.id}`);\n                    return null;\n                }\n                // Check for leap year edge cases in trip duration\n                const hasLeapDay = this.tripCrossesLeapDay(normalizedTrip.startDate, normalizedTrip.endDate);\n                if (hasLeapDay) {\n                    console.debug(`Trip ${trip.id} crosses leap day`);\n                }\n                return normalizedTrip;\n            } catch (error) {\n                console.error(`Error normalizing trip ${trip.id}:`, error);\n                return null;\n            }\n        }).filter((trip)=>trip !== null).sort((a, b)=>a.startDate.getTime() - b.startDate.getTime());\n    }\n    /**\n   * Create a map of daily stays for efficient lookup\n   */ static createDailyStayMap(trips, periodStart, periodEnd) {\n        const dailyStays = new Map();\n        for (const trip of trips){\n            // Only consider trips that overlap with our period\n            if (trip.endDate < periodStart || trip.startDate > periodEnd) continue;\n            // Calculate the actual overlap\n            const overlapStart = trip.startDate > periodStart ? trip.startDate : periodStart;\n            const overlapEnd = trip.endDate < periodEnd ? trip.endDate : periodEnd;\n            // Add each day of the trip\n            let currentDate = new Date(overlapStart);\n            while(currentDate <= overlapEnd){\n                const dateKey = currentDate.toISOString().split('T')[0];\n                if (!dailyStays.has(dateKey)) {\n                    dailyStays.set(dateKey, []);\n                }\n                dailyStays.get(dateKey).push(trip.id);\n                currentDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(currentDate, 1);\n            }\n        }\n        return dailyStays;\n    }\n    /**\n   * Calculate rolling compliance check for every day in the period\n   */ static calculateRollingComplianceForAllDays(dailyStays, periodStart, periodEnd) {\n        const checks = [];\n        let currentDate = new Date(periodStart);\n        while(currentDate <= periodEnd){\n            const windowStart = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(currentDate, this.ROLLING_PERIOD_DAYS - 1);\n            const windowEnd = new Date(currentDate);\n            // Count days in this 180-day window\n            let daysInWindow = 0;\n            let checkDate = new Date(windowStart);\n            while(checkDate <= windowEnd){\n                const dateKey = checkDate.toISOString().split('T')[0];\n                if (dailyStays.has(dateKey)) {\n                    daysInWindow++;\n                }\n                checkDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(checkDate, 1);\n            }\n            const overstayDays = Math.max(0, daysInWindow - this.MAX_DAYS_IN_PERIOD);\n            checks.push({\n                date: new Date(currentDate),\n                windowStart: new Date(windowStart),\n                windowEnd: new Date(windowEnd),\n                daysInWindow,\n                isCompliant: overstayDays === 0,\n                overstayDays\n            });\n            currentDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(currentDate, 1);\n        }\n        return checks;\n    }\n    /**\n   * Generate detailed day-by-day breakdown\n   */ static generateDetailedBreakdown(dailyStays, rollingChecks, periodStart, periodEnd) {\n        const breakdown = [];\n        let currentDate = new Date(periodStart);\n        let checkIndex = 0;\n        while(currentDate <= periodEnd){\n            const dateKey = currentDate.toISOString().split('T')[0];\n            const staysOnDate = dailyStays.get(dateKey) || [];\n            const daysUsedOnDate = staysOnDate.length > 0 ? 1 : 0;\n            const rollingCheck = rollingChecks[checkIndex];\n            breakdown.push({\n                date: new Date(currentDate),\n                daysUsedOnDate,\n                cumulativeDaysInWindow: rollingCheck.daysInWindow,\n                isViolation: !rollingCheck.isCompliant,\n                contributingTrips: staysOnDate\n            });\n            currentDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__.addDays)(currentDate, 1);\n            checkIndex++;\n        }\n        return breakdown;\n    }\n    /**\n   * Enhanced date normalization with timezone-agnostic handling\n   */ static normalizeToStartOfDay(date) {\n        // Use startOfDay but ensure we're working with local time consistently\n        const normalized = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(date);\n        // Additional validation for edge cases\n        if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(normalized)) {\n            throw new Error(`Failed to normalize date: ${date}`);\n        }\n        return normalized;\n    }\n    /**\n   * Calculate period start with leap year awareness\n   */ static calculatePeriodStart(referenceDate) {\n        // Standard 180-day window calculation\n        const periodStart = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__.subDays)(referenceDate, this.ROLLING_PERIOD_DAYS - 1);\n        // Validate the calculated period start\n        if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(periodStart)) {\n            throw new Error(`Invalid period start calculated from reference date: ${(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(referenceDate, 'yyyy-MM-dd')}`);\n        }\n        // Check if we're crossing leap year boundaries and log for awareness\n        const refYear = referenceDate.getFullYear();\n        const startYear = periodStart.getFullYear();\n        if (refYear !== startYear) {\n            const crossesLeapYear = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__.isLeapYear)(refYear) || (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__.isLeapYear)(startYear);\n            if (crossesLeapYear) {\n                console.debug(`180-day window crosses leap year boundary: ${startYear}-${refYear}`);\n            }\n        }\n        return periodStart;\n    }\n    /**\n   * Check if a trip crosses February 29th in a leap year\n   */ static tripCrossesLeapDay(startDate, endDate) {\n        const startYear = startDate.getFullYear();\n        const endYear = endDate.getFullYear();\n        // Check each year the trip spans\n        for(let year = startYear; year <= endYear; year++){\n            if ((0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__.isLeapYear)(year)) {\n                const leapDay = new Date(year, 1, 29) // February 29th\n                ;\n                if (leapDay >= startDate && leapDay <= endDate) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\nRobustSchengenCalculator.MAX_DAYS_IN_PERIOD = 90;\nRobustSchengenCalculator.ROLLING_PERIOD_DAYS = 180;\n/**\n * Date Overlap Validator - Prevents selection of already occupied dates\n * \n * Core Features:\n * 1. Detects date conflicts between new and existing trips\n * 2. Provides visual indicators for occupied dates (grey + strikethrough)\n * 3. Returns specific conflict details for user feedback\n * 4. Handles edge cases: same-day travel, border transitions\n * 5. Mobile-optimized with larger touch targets\n */ class DateOverlapValidator {\n    /**\n   * Validate if a date range conflicts with existing trips\n   */ validateDateSpan(newRange, existingTrips) {\n        // Input validation\n        if (!this.isValidDateRange(newRange)) {\n            return {\n                isValid: false,\n                conflicts: [],\n                message: 'Invalid date range provided',\n                occupiedDates: []\n            };\n        }\n        // Normalize dates to start/end of day for consistent comparison\n        const normalizedNewRange = {\n            start: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(newRange.start),\n            end: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__.endOfDay)(newRange.end)\n        };\n        const conflicts = [];\n        const occupiedDates = [];\n        // Check each existing trip for conflicts\n        for (const trip of existingTrips){\n            if (!this.isValidTrip(trip)) continue;\n            const tripRange = {\n                start: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.startDate),\n                end: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__.endOfDay)(trip.endDate)\n            };\n            // Check for overlap\n            const hasOverlap = this.rangesOverlap(normalizedNewRange, tripRange);\n            if (hasOverlap) {\n                const conflictDetail = this.calculateConflictDetail(normalizedNewRange, tripRange, trip);\n                // Apply configuration rules\n                if (this.shouldReportConflict(conflictDetail, normalizedNewRange, tripRange)) {\n                    conflicts.push(conflictDetail);\n                }\n                // Add occupied dates for visual indicators\n                this.addOccupiedDatesFromTrip(trip, occupiedDates);\n            }\n        }\n        // Get all occupied dates for calendar marking (regardless of conflicts)\n        const allOccupiedDates = this.getAllOccupiedDates(existingTrips);\n        return {\n            isValid: conflicts.length === 0,\n            conflicts,\n            message: this.generateValidationMessage(conflicts),\n            occupiedDates: allOccupiedDates\n        };\n    }\n    /**\n   * Get all occupied dates from existing trips for calendar display\n   */ getAllOccupiedDates(trips) {\n        const occupiedDates = [];\n        for (const trip of trips){\n            if (!this.isValidTrip(trip)) continue;\n            this.addOccupiedDatesFromTrip(trip, occupiedDates);\n        }\n        // Remove duplicates and sort\n        return [\n            ...new Set(occupiedDates.map((d)=>d.getTime()))\n        ].map((time)=>new Date(time)).sort((a, b)=>a.getTime() - b.getTime());\n    }\n    /**\n   * Check if a specific date is occupied by existing trips\n   */ isDateOccupied(date, existingTrips) {\n        const normalizedDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(date);\n        return existingTrips.some((trip)=>{\n            if (!this.isValidTrip(trip)) return false;\n            const tripStart = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.startDate);\n            const tripEnd = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.endDate);\n            return normalizedDate >= tripStart && normalizedDate <= tripEnd;\n        });\n    }\n    /**\n   * Get trips that occupy a specific date\n   */ getTripsOnDate(date, existingTrips) {\n        const normalizedDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(date);\n        return existingTrips.filter((trip)=>{\n            if (!this.isValidTrip(trip)) return false;\n            const tripStart = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.startDate);\n            const tripEnd = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.endDate);\n            return normalizedDate >= tripStart && normalizedDate <= tripEnd;\n        });\n    }\n    /**\n   * Find next available date range of specified length\n   */ findNextAvailableDateSpan(preferredStart, lengthInDays, existingTrips, searchLimit = 365) {\n        let testDate = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(preferredStart);\n        const maxSearchDate = new Date(testDate.getTime() + searchLimit * 24 * 60 * 60 * 1000);\n        while(testDate <= maxSearchDate){\n            const testRange = {\n                start: testDate,\n                end: new Date(testDate.getTime() + (lengthInDays - 1) * 24 * 60 * 60 * 1000)\n            };\n            const validation = this.validateDateSpan(testRange, existingTrips);\n            if (validation.isValid) {\n                return testRange;\n            }\n            // Move to next day\n            testDate = new Date(testDate.getTime() + 24 * 60 * 60 * 1000);\n        }\n        return null;\n    }\n    /**\n   * Suggest alternative dates when conflicts exist\n   */ suggestAlternativeDates(conflictedRange, lengthInDays, existingTrips) {\n        const suggestions = [];\n        const duration = lengthInDays || (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(conflictedRange.end, conflictedRange.start) + 1;\n        // Try earlier dates\n        const earlierDate = new Date(conflictedRange.start.getTime() - 30 * 24 * 60 * 60 * 1000);\n        const earlierRange = this.findNextAvailableDateSpan(earlierDate, duration, existingTrips, 60);\n        if (earlierRange && earlierRange.start < conflictedRange.start) {\n            suggestions.push(earlierRange);\n        }\n        // Try later dates\n        const laterDate = new Date(conflictedRange.end.getTime() + 24 * 60 * 60 * 1000);\n        const laterRange = this.findNextAvailableDateSpan(laterDate, duration, existingTrips, 60);\n        if (laterRange) {\n            suggestions.push(laterRange);\n        }\n        return suggestions.slice(0, 3) // Return max 3 suggestions\n        ;\n    }\n    /**\n   * Batch validation for multiple date ranges\n   */ validateMultipleDateSpans(newRanges, existingTrips) {\n        const results = {};\n        // Create a combined list of existing trips plus validated new trips\n        let combinedTrips = [\n            ...existingTrips\n        ];\n        newRanges.forEach((range, index)=>{\n            // Validate against existing trips and previously validated new trips\n            const result = this.validateDateSpan(range, combinedTrips);\n            results[index] = result;\n            // If valid, add to combined trips for next validations\n            if (result.isValid) {\n                combinedTrips.push({\n                    id: `temp-${index}`,\n                    country: 'TEMP',\n                    startDate: range.start,\n                    endDate: range.end,\n                    days: (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(range.end, range.start) + 1\n                });\n            }\n        });\n        return results;\n    }\n    /**\n   * Private: Check if two date ranges overlap\n   */ rangesOverlap(range1, range2) {\n        return (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__.areIntervalsOverlapping)({\n            start: range1.start,\n            end: range1.end\n        }, {\n            start: range2.start,\n            end: range2.end\n        });\n    }\n    /**\n   * Private: Calculate detailed conflict information\n   */ calculateConflictDetail(newRange, tripRange, trip) {\n        // Calculate the actual overlap period\n        const conflictStart = newRange.start > tripRange.start ? newRange.start : tripRange.start;\n        const conflictEnd = newRange.end < tripRange.end ? newRange.end : tripRange.end;\n        const overlapDays = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__.differenceInDays)(conflictEnd, conflictStart) + 1;\n        return {\n            tripId: trip.id,\n            tripCountry: trip.country,\n            conflictStart,\n            conflictEnd,\n            overlapDays: Math.max(0, overlapDays)\n        };\n    }\n    /**\n   * Private: Determine if conflict should be reported based on configuration\n   */ shouldReportConflict(conflict, newRange, tripRange) {\n        // In strict mode, report all conflicts\n        if (this.config.strictMode) return true;\n        // Same-day travel exception\n        if (this.config.allowSameDayTravel) {\n            const isSameDayTransition = newRange.start.getTime() === tripRange.end.getTime() || newRange.end.getTime() === tripRange.start.getTime();\n            if (isSameDayTransition) return false;\n        }\n        // Border transition exception\n        if (this.config.allowBorderTransitions && conflict.overlapDays <= 1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n   * Private: Add occupied dates from a trip to the occupied dates array\n   */ addOccupiedDatesFromTrip(trip, occupiedDates) {\n        const start = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.startDate);\n        const end = (0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay)(trip.endDate);\n        let currentDate = new Date(start);\n        while(currentDate <= end){\n            occupiedDates.push(new Date(currentDate));\n            currentDate = new Date(currentDate.getTime() + 24 * 60 * 60 * 1000);\n        }\n    }\n    /**\n   * Private: Generate human-readable validation message\n   */ generateValidationMessage(conflicts) {\n        if (conflicts.length === 0) {\n            return 'Dates are available';\n        }\n        if (conflicts.length === 1) {\n            const conflict = conflicts[0];\n            return `Dates overlap with existing trip to ${conflict.tripCountry} (${conflict.overlapDays} day${conflict.overlapDays !== 1 ? 's' : ''})`;\n        }\n        return `Dates conflict with ${conflicts.length} existing trips`;\n    }\n    /**\n   * Private: Validate date range input\n   */ isValidDateRange(range) {\n        if (!range || !range.start || !range.end) return false;\n        if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(range.start) || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(range.end)) return false;\n        if (range.start > range.end) return false;\n        return true;\n    }\n    /**\n   * Private: Validate trip data\n   */ isValidTrip(trip) {\n        if (!trip || !trip.startDate || !trip.endDate) return false;\n        if (!(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.startDate) || !(0,_barrel_optimize_names_addDays_areIntervalsOverlapping_differenceInDays_endOfDay_format_isLeapYear_isValid_startOfDay_subDays_date_fns__WEBPACK_IMPORTED_MODULE_0__.isValid)(trip.endDate)) return false;\n        if (trip.startDate > trip.endDate) return false;\n        return true;\n    }\n    /**\n   * Update configuration\n   */ updateConfig(newConfig) {\n        this.config = {\n            ...this.config,\n            ...newConfig\n        };\n    }\n    /**\n   * Get current configuration\n   */ getConfig() {\n        return {\n            ...this.config\n        };\n    }\n    constructor(config = {}){\n        this.config = {\n            allowSameDayTravel: true,\n            allowBorderTransitions: true,\n            strictMode: false,\n            ...config\n        };\n    }\n}\n/**\n * Schengen Area Countries Data\n * Complete list of all 27 Schengen countries with flags and metadata\n * Updated as of 2024 - includes all current member states\n */ const SCHENGEN_COUNTRIES = [\n    {\n        code: 'AT',\n        name: 'Austria',\n        flag: '🇦🇹',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Vienna',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'BE',\n        name: 'Belgium',\n        flag: '🇧🇪',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Brussels',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'BG',\n        name: 'Bulgaria',\n        flag: '🇧🇬',\n        joinedSchengen: '2024',\n        isEUMember: true,\n        capital: 'Sofia',\n        timezone: 'EET',\n        currency: 'BGN'\n    },\n    {\n        code: 'HR',\n        name: 'Croatia',\n        flag: '🇭🇷',\n        joinedSchengen: '2023',\n        isEUMember: true,\n        capital: 'Zagreb',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'CZ',\n        name: 'Czech Republic',\n        flag: '🇨🇿',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Prague',\n        timezone: 'CET',\n        currency: 'CZK'\n    },\n    {\n        code: 'DK',\n        name: 'Denmark',\n        flag: '🇩🇰',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Copenhagen',\n        timezone: 'CET',\n        currency: 'DKK'\n    },\n    {\n        code: 'EE',\n        name: 'Estonia',\n        flag: '🇪🇪',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Tallinn',\n        timezone: 'EET',\n        currency: 'EUR'\n    },\n    {\n        code: 'FI',\n        name: 'Finland',\n        flag: '🇫🇮',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Helsinki',\n        timezone: 'EET',\n        currency: 'EUR'\n    },\n    {\n        code: 'FR',\n        name: 'France',\n        flag: '🇫🇷',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Paris',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'DE',\n        name: 'Germany',\n        flag: '🇩🇪',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Berlin',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'GR',\n        name: 'Greece',\n        flag: '🇬🇷',\n        joinedSchengen: '2000',\n        isEUMember: true,\n        capital: 'Athens',\n        timezone: 'EET',\n        currency: 'EUR'\n    },\n    {\n        code: 'HU',\n        name: 'Hungary',\n        flag: '🇭🇺',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Budapest',\n        timezone: 'CET',\n        currency: 'HUF'\n    },\n    {\n        code: 'IS',\n        name: 'Iceland',\n        flag: '🇮🇸',\n        joinedSchengen: '1996',\n        isEUMember: false,\n        capital: 'Reykjavik',\n        timezone: 'GMT',\n        currency: 'ISK'\n    },\n    {\n        code: 'IT',\n        name: 'Italy',\n        flag: '🇮🇹',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Rome',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'LV',\n        name: 'Latvia',\n        flag: '🇱🇻',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Riga',\n        timezone: 'EET',\n        currency: 'EUR'\n    },\n    {\n        code: 'LI',\n        name: 'Liechtenstein',\n        flag: '🇱🇮',\n        joinedSchengen: '2011',\n        isEUMember: false,\n        capital: 'Vaduz',\n        timezone: 'CET',\n        currency: 'CHF'\n    },\n    {\n        code: 'LT',\n        name: 'Lithuania',\n        flag: '🇱🇹',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Vilnius',\n        timezone: 'EET',\n        currency: 'EUR'\n    },\n    {\n        code: 'LU',\n        name: 'Luxembourg',\n        flag: '🇱🇺',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Luxembourg',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'MT',\n        name: 'Malta',\n        flag: '🇲🇹',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Valletta',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'NL',\n        name: 'Netherlands',\n        flag: '🇳🇱',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Amsterdam',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'NO',\n        name: 'Norway',\n        flag: '🇳🇴',\n        joinedSchengen: '1996',\n        isEUMember: false,\n        capital: 'Oslo',\n        timezone: 'CET',\n        currency: 'NOK'\n    },\n    {\n        code: 'PL',\n        name: 'Poland',\n        flag: '🇵🇱',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Warsaw',\n        timezone: 'CET',\n        currency: 'PLN'\n    },\n    {\n        code: 'PT',\n        name: 'Portugal',\n        flag: '🇵🇹',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Lisbon',\n        timezone: 'WET',\n        currency: 'EUR'\n    },\n    {\n        code: 'RO',\n        name: 'Romania',\n        flag: '🇷🇴',\n        joinedSchengen: '2024',\n        isEUMember: true,\n        capital: 'Bucharest',\n        timezone: 'EET',\n        currency: 'RON'\n    },\n    {\n        code: 'SK',\n        name: 'Slovakia',\n        flag: '🇸🇰',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Bratislava',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'SI',\n        name: 'Slovenia',\n        flag: '🇸🇮',\n        joinedSchengen: '2007',\n        isEUMember: true,\n        capital: 'Ljubljana',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'ES',\n        name: 'Spain',\n        flag: '🇪🇸',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Madrid',\n        timezone: 'CET',\n        currency: 'EUR'\n    },\n    {\n        code: 'SE',\n        name: 'Sweden',\n        flag: '🇸🇪',\n        joinedSchengen: '1995',\n        isEUMember: true,\n        capital: 'Stockholm',\n        timezone: 'CET',\n        currency: 'SEK'\n    },\n    {\n        code: 'CH',\n        name: 'Switzerland',\n        flag: '🇨🇭',\n        joinedSchengen: '2008',\n        isEUMember: false,\n        capital: 'Bern',\n        timezone: 'CET',\n        currency: 'CHF'\n    }\n];\n// Utility functions for working with countries\nconst getCountryByCode = (code)=>{\n    return SCHENGEN_COUNTRIES.find((country)=>country.code === code);\n};\nconst getCountryByName = (name)=>{\n    return SCHENGEN_COUNTRIES.find((country)=>country.name.toLowerCase() === name.toLowerCase());\n};\nconst getCountriesForSelect = ()=>{\n    return SCHENGEN_COUNTRIES.map((country)=>({\n            value: country.code,\n            label: `${country.flag} ${country.name}`,\n            country\n        })).sort((a, b)=>a.country.name.localeCompare(b.country.name));\n};\nconst getEUMemberCountries = ()=>{\n    return SCHENGEN_COUNTRIES.filter((country)=>country.isEUMember);\n};\nconst getNonEUSchengenCountries = ()=>{\n    return SCHENGEN_COUNTRIES.filter((country)=>!country.isEUMember);\n};\n// Export count for validation\nconst SCHENGEN_COUNTRIES_COUNT = SCHENGEN_COUNTRIES.length;\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vY2FsY3VsYXRvci9kaXN0L2luZGV4LmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0NBUUMsR0FDTSxNQUFNQSx3QkFBQUEsQ0FBQUE7SUFJWDs7OztHQUlDLEdBQ0QsT0FBT0Msd0JBQUFBLENBQXlCQyxLQUFhLEVBQUVDLGFBQUFBLEdBQXNCLElBQUlDLE1BQU0sRUFBb0I7UUFDakcsSUFBSTs7WUFFRixJQUFJLENBQUNDLEtBQUFBLENBQU1DLE9BQU8sQ0FBQ0osS0FBQUEsQ0FBQUEsRUFBUTtnQkFDekIsTUFBTSxJQUFJSyxLQUFBQSxDQUFNO1lBQ2xCO1lBRUEsSUFBSSxDQUFDSixhQUFBQSxJQUFpQixDQUFDSywrS0FBQUEsQ0FBUUwsYUFBQUEsQ0FBQUEsRUFBZ0I7Z0JBQzdDLE1BQU0sSUFBSUksS0FBQUEsQ0FBTTtZQUNsQjs7WUFHQSxNQUFNRSxNQUFNLElBQUlMLElBQUFBLEVBQUFBO1lBQ2hCLE1BQU1NLFdBQUFBLEdBQWNDLCtLQUFBQSxDQUFRRixHQUFBQSxFQUFLLE1BQU07WUFDdkMsTUFBTUcsZ0JBQUFBLEdBQW1CQywrS0FBQUEsQ0FBUUosR0FBQUEsRUFBSyxNQUFNO1lBRTVDLElBQUlOLGFBQUFBLEdBQWdCTyxXQUFBQSxJQUFlUCxhQUFBQSxHQUFnQlMsZ0JBQUFBLEVBQWtCO2dCQUNuRUUsT0FBQUEsQ0FBUUMsSUFBSSxDQUFDLENBQUMsZUFBZSxFQUFFQyw4S0FBQUEsQ0FBT2IsYUFBQUEsRUFBZSxjQUFjLDRCQUE0QixDQUFDO1lBQ2xHOztZQUdBLE1BQU1jLGlCQUFBQSxHQUFvQixJQUFJLENBQUNDLHFCQUFxQixDQUFDZixhQUFBQSxDQUFBQTtZQUNyRCxNQUFNZ0IsV0FBQUEsR0FBYyxJQUFJLENBQUNDLG9CQUFvQixDQUFDSCxpQkFBQUEsQ0FBQUE7O1lBRzlDLE1BQU1JLFVBQUFBLEdBQWEsSUFBSSxDQUFDQyx5QkFBeUIsQ0FBQ3BCLEtBQUFBLENBQUFBOztZQUdsRCxJQUFJbUIsVUFBQUEsQ0FBV0UsTUFBTSxLQUFLLEdBQUc7Z0JBQzNCLE9BQU87b0JBQ0xDLGFBQUFBLEVBQWU7b0JBQ2ZDLGFBQUFBLEVBQWUsSUFBSSxDQUFDQyxrQkFBa0I7b0JBQ3RDQyxXQUFBQSxFQUFhO29CQUNiQyxZQUFBQSxFQUFjO29CQUNkekIsYUFBQUEsRUFBZWMsaUJBQUFBO29CQUNmRSxXQUFBQTtvQkFDQVUsU0FBQUEsRUFBV1osaUJBQUFBO29CQUNYYSxpQkFBQUEsRUFBbUI7Z0JBQ3JCO1lBQ0Y7O1lBR0EsTUFBTUMsYUFBYSxJQUFJLENBQUNDLGtCQUFrQixDQUFDWCxZQUFZRixXQUFBQSxFQUFhRixpQkFBQUEsQ0FBQUE7O1lBR3BFLE1BQU1nQixnQkFBZ0IsSUFBSSxDQUFDQyxvQ0FBb0MsQ0FDN0RILFlBQ0FaLFdBQUFBLEVBQ0FGLGlCQUFBQSxDQUFBQTs7WUFJRixJQUFJZ0IsYUFBQUEsQ0FBY1YsTUFBTSxLQUFLLEdBQUc7Z0JBQzlCLE1BQU0sSUFBSWhCLEtBQUFBLENBQU07WUFDbEI7O1lBR0EsTUFBTTRCLFlBQUFBLEdBQWVDLElBQUFBLENBQUtDLEdBQUcsSUFBSUosYUFBQUEsQ0FBY0ssR0FBRyxDQUFDQyxDQUFBQSxLQUFBQSxHQUFTQSxLQUFBQSxDQUFNWCxZQUFZO1lBQzlFLE1BQU1ZLG9CQUFvQlAsYUFBYSxDQUFDQSxhQUFBQSxDQUFjVixNQUFNLEdBQUcsRUFBRTtZQUVqRSxJQUFJLENBQUNpQixpQkFBQUEsRUFBbUI7Z0JBQ3RCLE1BQU0sSUFBSWpDLEtBQUFBLENBQU07WUFDbEI7O1lBR0EsTUFBTXVCLG9CQUFvQixJQUFJLENBQUNXLHlCQUF5QixDQUN0RFYsVUFBQUEsRUFDQUUsZUFDQWQsV0FBQUEsRUFDQUYsaUJBQUFBLENBQUFBO1lBR0YsTUFBTXlCLE1BQUFBLEdBQVM7Z0JBQ2JsQixhQUFBQSxFQUFlZ0Isa0JBQWtCRyxZQUFZO2dCQUM3Q2xCLGFBQUFBLEVBQWVXLElBQUFBLENBQUtDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ1gsa0JBQWtCLEdBQUdjLGlCQUFBQSxDQUFrQkcsWUFBWTtnQkFDbkZoQixXQUFBQSxFQUFhUSxZQUFBQSxLQUFpQjtnQkFDOUJQLFlBQUFBLEVBQWNPLFlBQUFBO2dCQUNkaEMsYUFBQUEsRUFBZWMsaUJBQUFBO2dCQUNmRSxXQUFBQTtnQkFDQVUsU0FBQUEsRUFBV1osaUJBQUFBO2dCQUNYYTtZQUNGOztZQUdBLElBQUlZLE9BQU9sQixhQUFhLEdBQUcsS0FBS2tCLE1BQUFBLENBQU9qQixhQUFhLEdBQUcsR0FBRztnQkFDeERYLE9BQUFBLENBQVE4QixLQUFLLENBQUMsK0JBQStCRixNQUFBQSxDQUFBQTtnQkFDN0MsTUFBTSxJQUFJbkMsS0FBQUEsQ0FBTTtZQUNsQjtZQUVBLE9BQU9tQyxNQUFBQTtRQUNULEVBQUUsT0FBT0UsS0FBQUEsRUFBTztZQUNkOUIsT0FBQUEsQ0FBUThCLEtBQUssQ0FBQyxzQ0FBc0NBLEtBQUFBLENBQUFBOztZQUdwRCxNQUFNM0Isb0JBQW9CNEIsa0xBQUFBLENBQVcxQyxhQUFBQSxDQUFBQTtZQUNyQyxPQUFPO2dCQUNMcUIsYUFBQUEsRUFBZTtnQkFDZkMsYUFBQUEsRUFBZSxJQUFJLENBQUNDLGtCQUFrQjtnQkFDdENDLFdBQUFBLEVBQWE7Z0JBQ2JDLFlBQUFBLEVBQWM7Z0JBQ2R6QixhQUFBQSxFQUFlYyxpQkFBQUE7Z0JBQ2ZFLFdBQUFBLEVBQWFSLCtLQUFBQSxDQUFRTSxpQkFBQUEsRUFBbUIsSUFBSSxDQUFDNkIsbUJBQW1CLEdBQUc7Z0JBQ25FakIsU0FBQUEsRUFBV1osaUJBQUFBO2dCQUNYYSxpQkFBQUEsRUFBbUI7WUFDckI7UUFDRjtJQUNGO0lBRUE7O0dBRUMsR0FDRCxPQUFPaUIscUJBQUFBLENBQXNCN0MsS0FBYSxFQUFFOEMsT0FBYSxFQUFVO1FBQ2pFLElBQUksQ0FBQ3hDLCtLQUFPQSxDQUFDd0MsT0FBQUEsQ0FBQUEsRUFBVTtZQUNyQixNQUFNLElBQUl6QyxLQUFBQSxDQUFNO1FBQ2xCO1FBRUEsTUFBTTBDLGlCQUFBQSxHQUFvQixJQUFJLENBQUMvQixxQkFBcUIsQ0FBQzhCLE9BQUFBLENBQUFBO1FBQ3JELE1BQU1FLFdBQUFBLEdBQWMsSUFBSSxDQUFDOUIsb0JBQW9CLENBQUM2QixpQkFBQUEsQ0FBQUE7UUFFOUMsSUFBSUUsU0FBQUEsR0FBWTtRQUVoQixLQUFLLE1BQU1DLFFBQVFsRCxLQUFBQSxDQUFPO1lBQ3hCLElBQUksQ0FBQ00sK0tBQU9BLENBQUM0QyxJQUFBQSxDQUFLQyxTQUFTLEtBQUssQ0FBQzdDLCtLQUFBQSxDQUFRNEMsSUFBQUEsQ0FBS0osT0FBTyxHQUFHO2dCQUN0RGxDLE9BQUFBLENBQVFDLElBQUksQ0FBQyxDQUFDLGNBQWMsRUFBRXFDLElBQUFBLENBQUtFLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztnQkFDMUQ7WUFDRjtZQUVBLE1BQU1DLFlBQVksSUFBSSxDQUFDckMscUJBQXFCLENBQUNrQyxLQUFLQyxTQUFTO1lBQzNELE1BQU1HLFVBQVUsSUFBSSxDQUFDdEMscUJBQXFCLENBQUNrQyxLQUFLSixPQUFPOztZQUd2RCxNQUFNUyxZQUFBQSxHQUFlRixTQUFBQSxHQUFZTCxXQUFBQSxHQUFjSyxTQUFBQSxHQUFZTCxXQUFBQTtZQUMzRCxNQUFNUSxVQUFBQSxHQUFhRixPQUFBQSxHQUFVUCxpQkFBQUEsR0FBb0JPLE9BQUFBLEdBQVVQLGlCQUFBQTtZQUUzRCxJQUFJUSxnQkFBZ0JDLFVBQUFBLEVBQVk7O2dCQUU5QixNQUFNQyxhQUFBQSxHQUFnQkMsd0xBQUFBLENBQWlCRixVQUFBQSxFQUFZRCxZQUFBQSxDQUFBQSxHQUFnQjs7Z0JBR25FLElBQUlFLGdCQUFnQixHQUFHO29CQUNyQjdDLE9BQUFBLENBQVE4QixLQUFLLENBQUMsQ0FBQyxrQ0FBa0MsRUFBRVEsSUFBQUEsQ0FBS0UsRUFBRSxFQUFFO29CQUM1RDtnQkFDRjtnQkFFQUgsU0FBQUEsSUFBYVEsYUFBQUE7WUFDZjtRQUNGO1FBRUEsT0FBT1IsU0FBQUE7SUFDVDtJQUVBOztHQUVDLEdBQ0QsT0FBT1UsbUJBQUFBLENBQ0xDLGFBQXFCLEVBQ3JCQyxXQUFpQixFQUNNO1FBQ3ZCLE1BQU1DLFFBQUFBLEdBQVc7ZUFBSUYsYUFBQUE7WUFBZUM7U0FBWTs7UUFHaEQsSUFBSUUsV0FBQUEsR0FBY3BCLGtMQUFBQSxDQUFXa0IsV0FBQUEsQ0FBWVYsU0FBUztRQUNsRCxNQUFNTCxPQUFBQSxHQUFVSCxrTEFBQUEsQ0FBV2tCLFdBQUFBLENBQVlmLE9BQU87UUFFOUMsSUFBSWIsWUFBQUEsR0FBZTtRQUNuQixJQUFJK0IsYUFBQUEsR0FBNkI7UUFFakMsTUFBT0QsZUFBZWpCLE9BQUFBLENBQVM7WUFDN0IsTUFBTUwsWUFBQUEsR0FBZSxJQUFJLENBQUNJLHFCQUFxQixDQUFDaUIsUUFBQUEsRUFBVUMsV0FBQUEsQ0FBQUE7WUFDMUQsTUFBTUUsUUFBQUEsR0FBVy9CLEtBQUtDLEdBQUcsQ0FBQyxHQUFHTSxZQUFBQSxHQUFlLElBQUksQ0FBQ2pCLGtCQUFrQjtZQUVuRSxJQUFJeUMsV0FBV2hDLFlBQUFBLEVBQWM7Z0JBQzNCQSxZQUFBQSxHQUFlZ0MsUUFBQUE7Z0JBQ2ZELGFBQUFBLEdBQWdCLElBQUk5RCxJQUFBQSxDQUFLNkQsV0FBQUEsQ0FBQUE7WUFDM0I7WUFFQUEsV0FBQUEsR0FBY3BELCtLQUFPQSxDQUFDb0QsV0FBQUEsRUFBYTtRQUNyQztRQUVBLE9BQU87WUFDTHpELE9BQUFBLEVBQVMyQixZQUFBQSxLQUFpQjtZQUMxQmlDLGFBQUFBLEVBQWVqQyxZQUFBQTtZQUNmK0I7UUFDRjtJQUNGO0lBRUE7O01BR0EsT0FBT0cseUJBQ0xQLGFBQXFCLEVBQ3JCUSxVQUFrQixFQUNsQkMsYUFBbUIsRUFDbkJDLFdBQWlCLEVBQ0o7UUFDYixJQUFJQyxXQUFXNUIsa0xBQUFBLENBQVcyQixXQUFBQSxDQUFBQTtRQUMxQixNQUFNRSxVQUFVN0Isa0xBQUFBLENBQVcwQixhQUFBQSxDQUFBQTtRQUUzQixNQUFPRSxZQUFZQyxPQUFBQSxDQUFTO1lBQzFCLE1BQU1DLFFBQUFBLEdBQWlCO2dCQUNyQnJCLEVBQUFBLEVBQUk7Z0JBQ0pzQixPQUFBQSxFQUFTO2dCQUNUdkIsU0FBQUEsRUFBV29CLFFBQUFBO2dCQUNYekIsT0FBQUEsRUFBU25DLCtLQUFBQSxDQUFRNEQsVUFBVUgsVUFBQUEsR0FBYTtnQkFDeENPLElBQUFBLEVBQU1QO1lBQ1I7WUFFQSxNQUFNUSxVQUFBQSxHQUFhLElBQUksQ0FBQ2pCLG1CQUFtQixDQUFDQyxhQUFBQSxFQUFlYSxRQUFBQSxDQUFBQTtZQUMzRCxJQUFJRyxVQUFBQSxDQUFXdEUsT0FBTyxFQUFFO2dCQUN0QixPQUFPaUUsUUFBQUE7WUFDVDtZQUVBQSxRQUFBQSxHQUFXOUQsK0tBQU9BLENBQUM4RCxRQUFBQSxFQUFVO1FBQy9CO1FBRUEsT0FBTztJQUNUO0lBRUE7O0dBRUMsR0FDRCxPQUFPTSwyQkFBQUEsQ0FBNEJqQixhQUFxQixFQUFFVCxTQUFlLEVBQVU7UUFDakYsSUFBSTJCLE9BQUFBLEdBQVU7UUFDZCxJQUFJQyxVQUFBQSxHQUFhO1FBQ2pCLE1BQU1DLGFBQUFBLEdBQWdCOztRQUV0QixNQUFPRCxjQUFjQyxhQUFBQSxDQUFlO1lBQ2xDLE1BQU1QLFFBQUFBLEdBQWlCO2dCQUNyQnJCLEVBQUFBLEVBQUk7Z0JBQ0pzQixPQUFBQSxFQUFTO2dCQUNUdkIsU0FBQUEsRUFBV1Isa0xBQUFBLENBQVdRLFNBQUFBLENBQUFBO2dCQUN0QkwsT0FBQUEsRUFBU25DLCtLQUFBQSxDQUFRZ0Msa0xBQUFBLENBQVdRLFNBQUFBLENBQUFBLEVBQVk0QixVQUFBQSxHQUFhO2dCQUNyREosSUFBQUEsRUFBTUk7WUFDUjtZQUVBLE1BQU1ILFVBQUFBLEdBQWEsSUFBSSxDQUFDakIsbUJBQW1CLENBQUNDLGFBQUFBLEVBQWVhLFFBQUFBLENBQUFBO1lBQzNELElBQUlHLFVBQUFBLENBQVd0RSxPQUFPLEVBQUU7Z0JBQ3RCd0UsT0FBQUEsR0FBVUMsVUFBQUE7Z0JBQ1ZBLFVBQUFBLEVBQUFBO1lBQ0YsT0FBTztnQkFDTDtZQUNGO1FBQ0Y7UUFFQSxPQUFPN0MsS0FBSytDLEdBQUcsQ0FBQ0gsT0FBQUEsRUFBUyxJQUFJLENBQUN0RCxrQkFBa0I7SUFDbEQ7SUFFQTs7TUFHQSxPQUFPMEQsYUFBQUEsQ0FBY2xGLEtBQWEsRUFBd0I7UUFDeEQsTUFBTW1GLFNBQTRCLEVBQUU7UUFDcEMsTUFBTUMsV0FBOEIsRUFBRTtRQUN0QyxNQUFNQyxVQUFVLElBQUlDLEdBQUFBLEVBQUFBO1FBRXBCdEYsS0FBQUEsQ0FBTXVGLE9BQU8sQ0FBQyxDQUFDckMsSUFBQUEsRUFBTXNDLEtBQUFBLEdBQUFBOztZQUVuQixJQUFJSCxPQUFBQSxDQUFRSSxHQUFHLENBQUN2QyxJQUFBQSxDQUFLRSxFQUFFLEdBQUc7Z0JBQ3hCK0IsTUFBQUEsQ0FBT08sSUFBSSxDQUFDO29CQUNWQyxLQUFBQSxFQUFPO29CQUNQQyxPQUFBQSxFQUFTLENBQUMsbUJBQW1CLEVBQUUxQyxJQUFBQSxDQUFLRSxFQUFFLEVBQUU7b0JBQ3hDeUMsUUFBQUEsRUFBVTtvQkFDVkMsTUFBQUEsRUFBUTVDLEtBQUtFLEVBQUFBO2dCQUNmO1lBQ0Y7WUFDQWlDLE9BQUFBLENBQVFVLEdBQUcsQ0FBQzdDLElBQUFBLENBQUtFLEVBQUU7O1lBR25CLElBQUksQ0FBQ0YsS0FBS0UsRUFBRSxJQUFJRixLQUFLRSxFQUFFLENBQUM0QyxJQUFJLE9BQU8sSUFBSTtnQkFDckNiLE1BQUFBLENBQU9PLElBQUksQ0FBQztvQkFDVkMsS0FBQUEsRUFBTztvQkFDUEMsT0FBQUEsRUFBUyxDQUFDLGNBQWMsRUFBRUosS0FBQUEsQ0FBTSxpQkFBaUIsQ0FBQztvQkFDbERLLFFBQUFBLEVBQVU7Z0JBQ1o7WUFDRjtZQUVBLElBQUksQ0FBQzNDLEtBQUt3QixPQUFPLElBQUl4QixLQUFLd0IsT0FBTyxDQUFDc0IsSUFBSSxPQUFPLElBQUk7Z0JBQy9DYixNQUFBQSxDQUFPTyxJQUFJLENBQUM7b0JBQ1ZDLEtBQUFBLEVBQU87b0JBQ1BDLE9BQUFBLEVBQVM7b0JBQ1RDLFFBQUFBLEVBQVU7b0JBQ1ZDLE1BQUFBLEVBQVE1QyxLQUFLRSxFQUFBQTtnQkFDZjtZQUNGO1lBRUEsSUFBSSxDQUFDRixJQUFBQSxDQUFLQyxTQUFTLEVBQUU7Z0JBQ25CZ0MsTUFBQUEsQ0FBT08sSUFBSSxDQUFDO29CQUNWQyxLQUFBQSxFQUFPO29CQUNQQyxPQUFBQSxFQUFTO29CQUNUQyxRQUFBQSxFQUFVO29CQUNWQyxNQUFBQSxFQUFRNUMsS0FBS0UsRUFBQUE7Z0JBQ2Y7WUFDRjtZQUVBLElBQUksQ0FBQ0YsSUFBQUEsQ0FBS0osT0FBTyxFQUFFO2dCQUNqQnFDLE1BQUFBLENBQU9PLElBQUksQ0FBQztvQkFDVkMsS0FBQUEsRUFBTztvQkFDUEMsT0FBQUEsRUFBUztvQkFDVEMsUUFBQUEsRUFBVTtvQkFDVkMsTUFBQUEsRUFBUTVDLEtBQUtFLEVBQUFBO2dCQUNmO1lBQ0Y7O1lBR0EsSUFBSUYsSUFBQUEsQ0FBS0MsU0FBUyxJQUFJRCxJQUFBQSxDQUFLSixPQUFPLEVBQUU7Z0JBQ2xDLElBQUlJLElBQUFBLENBQUtDLFNBQVMsR0FBR0QsSUFBQUEsQ0FBS0osT0FBTyxFQUFFO29CQUNqQ3FDLE1BQUFBLENBQU9PLElBQUksQ0FBQzt3QkFDVkMsS0FBQUEsRUFBTzt3QkFDUEMsT0FBQUEsRUFBUzt3QkFDVEMsUUFBQUEsRUFBVTt3QkFDVkMsTUFBQUEsRUFBUTVDLEtBQUtFLEVBQUFBO29CQUNmO2dCQUNGO2dCQUVBLE1BQU02QyxXQUFXdkMsd0xBQUFBLENBQWlCUixJQUFBQSxDQUFLSixPQUFPLEVBQUVJLElBQUFBLENBQUtDLFNBQVMsSUFBSTtnQkFFbEUsSUFBSThDLFFBQUFBLEdBQVcsSUFBSSxDQUFDekUsa0JBQWtCLEVBQUU7b0JBQ3RDMkQsTUFBQUEsQ0FBT08sSUFBSSxDQUFDO3dCQUNWQyxLQUFBQSxFQUFPO3dCQUNQQyxPQUFBQSxFQUFTLENBQUMsZUFBZSxFQUFFSyxRQUFBQSxDQUFTLGlEQUFpRCxFQUFFLElBQUksQ0FBQ3pFLGtCQUFrQixDQUFDLE1BQU0sQ0FBQzt3QkFDdEhxRSxRQUFBQSxFQUFVO3dCQUNWQyxNQUFBQSxFQUFRNUMsS0FBS0UsRUFBQUE7b0JBQ2Y7Z0JBQ0Y7Z0JBRUEsSUFBSTZDLFdBQVcsR0FBRztvQkFDaEJkLE1BQUFBLENBQU9PLElBQUksQ0FBQzt3QkFDVkMsS0FBQUEsRUFBTzt3QkFDUEMsT0FBQUEsRUFBUzt3QkFDVEMsUUFBQUEsRUFBVTt3QkFDVkMsTUFBQUEsRUFBUTVDLEtBQUtFLEVBQUFBO29CQUNmO2dCQUNGOztnQkFHQSxNQUFNN0MsTUFBTSxJQUFJTCxJQUFBQSxFQUFBQTtnQkFDaEIsTUFBTU0sV0FBQUEsR0FBY0MsK0tBQUFBLENBQVFGLEdBQUFBLEVBQUssTUFBTTtnQkFDdkMsTUFBTUcsZ0JBQUFBLEdBQW1CQywrS0FBQUEsQ0FBUUosR0FBQUEsRUFBSyxNQUFNO2dCQUU1QyxJQUFJMkMsSUFBQUEsQ0FBS0MsU0FBUyxHQUFHM0MsV0FBQUEsRUFBYTtvQkFDaEM0RSxRQUFBQSxDQUFTTSxJQUFJLENBQUM7d0JBQ1pDLEtBQUFBLEVBQU87d0JBQ1BDLE9BQUFBLEVBQVM7d0JBQ1RDLFFBQUFBLEVBQVU7d0JBQ1ZDLE1BQUFBLEVBQVE1QyxLQUFLRSxFQUFBQTtvQkFDZjtnQkFDRjtnQkFFQSxJQUFJRixJQUFBQSxDQUFLSixPQUFPLEdBQUdwQyxnQkFBQUEsRUFBa0I7b0JBQ25DMEUsUUFBQUEsQ0FBU00sSUFBSSxDQUFDO3dCQUNaQyxLQUFBQSxFQUFPO3dCQUNQQyxPQUFBQSxFQUFTO3dCQUNUQyxRQUFBQSxFQUFVO3dCQUNWQyxNQUFBQSxFQUFRNUMsS0FBS0UsRUFBQUE7b0JBQ2Y7Z0JBQ0Y7O2dCQUdBLElBQUlGLElBQUFBLENBQUt5QixJQUFJLElBQUl6QyxJQUFBQSxDQUFLZ0UsR0FBRyxDQUFDaEQsSUFBQUEsQ0FBS3lCLElBQUksR0FBR3NCLFFBQUFBLENBQUFBLEdBQVksR0FBRztvQkFDbkRiLFFBQUFBLENBQVNNLElBQUksQ0FBQzt3QkFDWkMsS0FBQUEsRUFBTzt3QkFDUEMsT0FBQUEsRUFBUyxDQUFDLFlBQVksRUFBRTFDLElBQUFBLENBQUt5QixJQUFJLENBQUMscUNBQXFDLEVBQUVzQixRQUFBQSxDQUFTLENBQUMsQ0FBQzt3QkFDcEZKLFFBQUFBLEVBQVU7d0JBQ1ZDLE1BQUFBLEVBQVE1QyxLQUFLRSxFQUFBQTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7O1FBR0EsSUFBSyxJQUFJK0MsQ0FBQUEsR0FBSSxHQUFHQSxJQUFJbkcsS0FBQUEsQ0FBTXFCLE1BQU0sRUFBRThFLENBQUFBLEVBQUFBLENBQUs7WUFDckMsSUFBSyxJQUFJQyxJQUFJRCxDQUFBQSxHQUFJLEdBQUdDLElBQUlwRyxLQUFBQSxDQUFNcUIsTUFBTSxFQUFFK0UsQ0FBQUEsRUFBQUEsQ0FBSztnQkFDekMsTUFBTUMsS0FBQUEsR0FBUXJHLEtBQUssQ0FBQ21HLENBQUFBLENBQUU7Z0JBQ3RCLE1BQU1HLEtBQUFBLEdBQVF0RyxLQUFLLENBQUNvRyxDQUFBQSxDQUFFO2dCQUV0QixJQUFJLENBQUNDLEtBQUFBLENBQU1sRCxTQUFTLElBQUksQ0FBQ2tELEtBQUFBLENBQU12RCxPQUFPLElBQUksQ0FBQ3dELE1BQU1uRCxTQUFTLElBQUksQ0FBQ21ELEtBQUFBLENBQU14RCxPQUFPLEVBQUU7O2dCQUc5RSxNQUFNeUQsT0FBQUEsR0FBVSxFQUFFRixLQUFBQSxDQUFNdkQsT0FBTyxHQUFHd0QsS0FBQUEsQ0FBTW5ELFNBQVMsSUFBSW1ELEtBQUFBLENBQU14RCxPQUFPLEdBQUd1RCxLQUFBQSxDQUFNbEQsU0FBQUEsQ0FBUTtnQkFFbkYsSUFBSW9ELE9BQUFBLEVBQVM7b0JBQ1huQixRQUFBQSxDQUFTTSxJQUFJLENBQUM7d0JBQ1pDLEtBQUFBLEVBQU87d0JBQ1BDLE9BQUFBLEVBQVMsQ0FBQyxLQUFLLEVBQUVTLEtBQUFBLENBQU1qRCxFQUFFLENBQUMsb0JBQW9CLEVBQUVrRCxLQUFBQSxDQUFNbEQsRUFBRSxDQUFDLGdFQUFnRSxDQUFDO3dCQUMxSHlDLFFBQUFBLEVBQVU7d0JBQ1ZDLE1BQUFBLEVBQVFPLE1BQU1qRCxFQUFBQTtvQkFDaEI7Z0JBQ0Y7WUFDRjtRQUNGO1FBRUEsT0FBTztZQUNMOUMsT0FBQUEsRUFBUzZFLE1BQUFBLENBQU85RCxNQUFNLEtBQUs7WUFDM0I4RCxNQUFBQTtZQUNBQztRQUNGO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELE9BQU9vQixnQkFBQUEsQ0FBaUJ4RyxLQUFhLEVBQUVDLGFBQUFBLEdBQXNCLElBQUlDLE1BQU0sRUFBZTtRQUNwRixNQUFNYSxvQkFBb0I0QixrTEFBQUEsQ0FBVzFDLGFBQUFBLENBQUFBO1FBQ3JDLE1BQU13RyxnQkFBZ0JoRywrS0FBQUEsQ0FBUU0saUJBQUFBLEVBQW1CLElBQUksQ0FBQzZCLG1CQUFtQixHQUFHOztRQUc1RSxJQUFJOEQsb0JBQUFBLEdBQW9DO1FBRXhDLEtBQUssTUFBTXhELFFBQVFsRCxLQUFBQSxDQUFPO1lBQ3hCLElBQUkyRyxTQUFBQSxHQUFZaEUsa0xBQUFBLENBQVdPLElBQUFBLENBQUtDLFNBQVM7WUFDekMsTUFBTUwsT0FBQUEsR0FBVUgsa0xBQUFBLENBQVdPLElBQUFBLENBQUtKLE9BQU87WUFFdkMsTUFBTzZELGFBQWE3RCxPQUFBQSxDQUFTO2dCQUMzQixJQUFJNkQsU0FBQUEsSUFBYUYsYUFBQUEsSUFBaUJFLFNBQUFBLElBQWE1RixpQkFBQUEsRUFBbUI7b0JBQ2hFLElBQUksQ0FBQzJGLG9CQUFBQSxJQUF3QkMsU0FBQUEsR0FBWUQsb0JBQUFBLEVBQXNCO3dCQUM3REEsb0JBQUFBLEdBQXVCQyxTQUFBQTtvQkFDekI7Z0JBQ0Y7Z0JBQ0FBLFNBQUFBLEdBQVloRywrS0FBT0EsQ0FBQ2dHLFNBQUFBLEVBQVc7WUFDakM7UUFDRjtRQUVBLElBQUksQ0FBQ0Qsc0JBQXNCLE9BQU87O1FBR2xDLE9BQU8vRiwrS0FBQUEsQ0FBUStGLG9CQUFBQSxFQUFzQixJQUFJLENBQUM5RCxtQkFBbUI7SUFDL0Q7SUFFQTs7R0FFQyxHQUNELE9BQU9nRSxrQkFBQUEsQ0FBbUI1RyxLQUFhLEVBQUVDLGFBQW1CLEVBQU87UUFDakUsTUFBTXVDLE1BQUFBLEdBQVMsSUFBSSxDQUFDekMsd0JBQXdCLENBQUNDLEtBQUFBLEVBQU9DLGFBQUFBLENBQUFBO1FBRXBELE9BQU87WUFDTDRHLE9BQUFBLEVBQVM7Z0JBQ1B2RixhQUFBQSxFQUFla0IsT0FBT2xCLGFBQWE7Z0JBQ25DQyxhQUFBQSxFQUFlaUIsT0FBT2pCLGFBQWE7Z0JBQ25DRSxXQUFBQSxFQUFhZSxPQUFPZixXQUFXO2dCQUMvQkMsWUFBQUEsRUFBY2MsT0FBT2QsWUFBWTtnQkFDakNULFdBQUFBLEVBQWF1QixPQUFPdkIsV0FBVztnQkFDL0JVLFNBQUFBLEVBQVdhLE9BQU9iLFNBQUFBO1lBQ3BCO1lBQ0FtRixhQUFBQSxFQUFlOUcsS0FBQUEsQ0FBTStHLE1BQU0sQ0FBQzdELENBQUFBLE9BQzFCQSxJQUFBQSxDQUFLSixPQUFPLElBQUlOLE1BQUFBLENBQU92QixXQUFXLElBQUlpQyxJQUFBQSxDQUFLQyxTQUFTLElBQUlYLE9BQU9iLFNBQVM7WUFFMUVxRixjQUFBQSxFQUFnQnhFLE1BQUFBLENBQU9aLGlCQUFpQixDQUFDbUYsTUFBTSxDQUFDRSxDQUFBQSxHQUFBQSxHQUFPQSxHQUFBQSxDQUFJQyxjQUFjLEdBQUc7WUFDNUVDLFVBQUFBLEVBQVkzRSxNQUFBQSxDQUFPWixpQkFBaUIsQ0FBQ21GLE1BQU0sQ0FBQ0UsQ0FBQUEsR0FBQUEsR0FBT0EsSUFBSUcsV0FBVztZQUNsRUMsYUFBQUEsRUFBZSxJQUFJLENBQUNiLGdCQUFnQixDQUFDeEcsS0FBQUEsRUFBT0MsYUFBQUE7UUFDOUM7SUFDRjtJQUVBOztNQUdBLE9BQWVtQix5QkFBQUEsQ0FBMEJwQixLQUFhLEVBQVU7O1FBRTlELE1BQU1zSCxnQkFBQUEsR0FBbUIsSUFBSSxDQUFDcEMsYUFBYSxDQUFDbEYsS0FBQUEsQ0FBQUE7UUFDNUMsTUFBTXVILGNBQUFBLEdBQWlCRCxpQkFBaUJuQyxNQUFNO1FBRTlDLElBQUlvQyxjQUFBQSxDQUFlbEcsTUFBTSxHQUFHLEdBQUc7WUFDN0JULE9BQUFBLENBQVFDLElBQUksQ0FBQyxxQ0FBcUMwRyxjQUFBQSxDQUFBQTtRQUNwRDtRQUVBLE9BQU92SCxLQUFBQSxDQUNKK0csTUFBTSxDQUFDN0QsQ0FBQUEsSUFBQUEsR0FBQUE7O1lBRU4sSUFBSSxDQUFDQSxJQUFBQSxDQUFLQyxTQUFTLElBQUksQ0FBQ0QsSUFBQUEsQ0FBS0osT0FBTyxJQUFJLENBQUNJLElBQUFBLENBQUt3QixPQUFPLEVBQUUsT0FBTzs7WUFHOUQsSUFBSSxDQUFDcEUsK0tBQU9BLENBQUM0QyxJQUFBQSxDQUFLQyxTQUFTLEtBQUssQ0FBQzdDLCtLQUFBQSxDQUFRNEMsSUFBQUEsQ0FBS0osT0FBTyxHQUFHO2dCQUN0RGxDLE9BQUFBLENBQVFDLElBQUksQ0FBQyxDQUFDLEtBQUssRUFBRXFDLElBQUFBLENBQUtFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztnQkFDaEQsT0FBTztZQUNUO1lBRUEsSUFBSUYsS0FBS0MsU0FBUyxHQUFHRCxJQUFBQSxDQUFLSixPQUFPLEVBQUUsT0FBTzs7WUFHMUMsTUFBTW1ELFdBQVd2Qyx3TEFBQUEsQ0FBaUJSLElBQUFBLENBQUtKLE9BQU8sRUFBRUksSUFBQUEsQ0FBS0MsU0FBUyxJQUFJO1lBQ2xFLElBQUk4QyxRQUFBQSxHQUFXLElBQUksQ0FBQ3pFLGtCQUFrQixFQUFFLE9BQU87O1lBRy9DLE1BQU1qQixNQUFNLElBQUlMLElBQUFBLEVBQUFBO1lBQ2hCLE1BQU1zSCxPQUFBQSxHQUFVL0csK0tBQUFBLENBQVFGLEdBQUFBLEVBQUssTUFBTTs7WUFDbkMsTUFBTWtILFVBQUFBLEdBQWE5RywrS0FBQUEsQ0FBUUosR0FBQUEsRUFBSyxNQUFNOztZQUV0QyxJQUFJMkMsS0FBS0osT0FBTyxHQUFHMEUsV0FBV3RFLElBQUFBLENBQUtDLFNBQVMsR0FBR3NFLFVBQUFBLEVBQVk7Z0JBQ3pEN0csT0FBQUEsQ0FBUUMsSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFcUMsSUFBQUEsQ0FBS0UsRUFBRSxDQUFDLHVCQUF1QixDQUFDO2dCQUNyRCxPQUFPO1lBQ1Q7WUFFQSxPQUFPO1FBQ1QsR0FDQ2hCLEdBQUcsQ0FBQ2MsQ0FBQUEsSUFBQUEsR0FBQUE7WUFDSCxJQUFJO2dCQUNGLE1BQU13RSxjQUFBQSxHQUFpQjtvQkFDckIsR0FBR3hFLElBQUk7b0JBQ1BDLFNBQUFBLEVBQVcsSUFBSSxDQUFDbkMscUJBQXFCLENBQUNrQyxLQUFLQyxTQUFTO29CQUNwREwsT0FBQUEsRUFBUyxJQUFJLENBQUM5QixxQkFBcUIsQ0FBQ2tDLEtBQUtKLE9BQU87b0JBQ2hENkIsSUFBQUEsRUFBTWpCLHdMQUFnQkEsQ0FBQ1IsSUFBQUEsQ0FBS0osT0FBTyxFQUFFSSxJQUFBQSxDQUFLQyxTQUFTLElBQUk7Z0JBQ3pEOztnQkFHQSxJQUFJLENBQUM3QywrS0FBT0EsQ0FBQ29ILGNBQUFBLENBQWV2RSxTQUFTLEtBQUssQ0FBQzdDLCtLQUFBQSxDQUFRb0gsY0FBQUEsQ0FBZTVFLE9BQU8sR0FBRztvQkFDMUVsQyxPQUFBQSxDQUFROEIsS0FBSyxDQUFDLENBQUMsMkNBQTJDLEVBQUVRLElBQUFBLENBQUtFLEVBQUUsRUFBRTtvQkFDckUsT0FBTztnQkFDVDs7Z0JBR0EsTUFBTXVFLFVBQUFBLEdBQWEsSUFBSSxDQUFDQyxrQkFBa0IsQ0FBQ0YsY0FBQUEsQ0FBZXZFLFNBQVMsRUFBRXVFLGNBQUFBLENBQWU1RSxPQUFPO2dCQUMzRixJQUFJNkUsVUFBQUEsRUFBWTtvQkFDZC9HLE9BQUFBLENBQVFpSCxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUzRSxJQUFBQSxDQUFLRSxFQUFFLENBQUMsaUJBQWlCLENBQUM7Z0JBQ2xEO2dCQUVBLE9BQU9zRSxjQUFBQTtZQUNULEVBQUUsT0FBT2hGLEtBQUFBLEVBQU87Z0JBQ2Q5QixPQUFBQSxDQUFROEIsS0FBSyxDQUFDLENBQUMsdUJBQXVCLEVBQUVRLEtBQUtFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRVYsS0FBQUEsQ0FBQUE7Z0JBQ3BELE9BQU87WUFDVDtRQUNGLEdBQ0NxRSxNQUFNLENBQUMsQ0FBQzdELE9BQXVCQSxJQUFBQSxLQUFTLE1BQ3hDNEUsSUFBSSxDQUFDLENBQUNDLEdBQUdDLENBQUFBLEdBQU1ELENBQUFBLENBQUU1RSxTQUFTLENBQUM4RSxPQUFPLEtBQUtELENBQUFBLENBQUU3RSxTQUFTLENBQUM4RSxPQUFPO0lBQy9EO0lBRUE7O0dBRUMsR0FDRCxPQUFlbkcsa0JBQUFBLENBQ2I5QixLQUFhLEVBQ2JpQixXQUFpQixFQUNqQlUsU0FBZSxFQUNRO1FBQ3ZCLE1BQU1FLGFBQWEsSUFBSXFHLEdBQUFBLEVBQUFBO1FBRXZCLEtBQUssTUFBTWhGLFFBQVFsRCxLQUFBQSxDQUFPOztZQUV4QixJQUFJa0QsS0FBS0osT0FBTyxHQUFHN0IsZUFBZWlDLElBQUFBLENBQUtDLFNBQVMsR0FBR3hCLFNBQUFBLEVBQVc7O1lBRzlELE1BQU00QixlQUFlTCxJQUFBQSxDQUFLQyxTQUFTLEdBQUdsQyxXQUFBQSxHQUFjaUMsSUFBQUEsQ0FBS0MsU0FBUyxHQUFHbEMsV0FBQUE7WUFDckUsTUFBTXVDLGFBQWFOLElBQUFBLENBQUtKLE9BQU8sR0FBR25CLFNBQUFBLEdBQVl1QixJQUFBQSxDQUFLSixPQUFPLEdBQUduQixTQUFBQTs7WUFHN0QsSUFBSW9DLFdBQUFBLEdBQWMsSUFBSTdELElBQUFBLENBQUtxRCxZQUFBQSxDQUFBQTtZQUMzQixNQUFPUSxlQUFlUCxVQUFBQSxDQUFZO2dCQUNoQyxNQUFNMkUsT0FBQUEsR0FBVXBFLFlBQVlxRSxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFFdkQsSUFBSSxDQUFDeEcsVUFBQUEsQ0FBVzRELEdBQUcsQ0FBQzBDLE9BQUFBLENBQUFBLEVBQVU7b0JBQzVCdEcsVUFBQUEsQ0FBV3lHLEdBQUcsQ0FBQ0gsT0FBQUEsRUFBUyxFQUFFO2dCQUM1QjtnQkFDQXRHLFVBQUFBLENBQVcwRyxHQUFHLENBQUNKLE9BQUFBLENBQUFBLENBQVV6QyxJQUFJLENBQUN4QyxLQUFLRSxFQUFFO2dCQUVyQ1csV0FBQUEsR0FBY3BELCtLQUFPQSxDQUFDb0QsV0FBQUEsRUFBYTtZQUNyQztRQUNGO1FBRUEsT0FBT2xDLFVBQUFBO0lBQ1Q7SUFFQTs7R0FFQyxHQUNELE9BQWVHLG9DQUFBQSxDQUNiSCxVQUFpQyxFQUNqQ1osV0FBaUIsRUFDakJVLFNBQWUsRUFDTztRQUN0QixNQUFNNkcsU0FBK0IsRUFBRTtRQUV2QyxJQUFJekUsV0FBQUEsR0FBYyxJQUFJN0QsSUFBQUEsQ0FBS2UsV0FBQUEsQ0FBQUE7UUFDM0IsTUFBTzhDLGVBQWVwQyxTQUFBQSxDQUFXO1lBQy9CLE1BQU1xQixjQUFjdkMsK0tBQUFBLENBQVFzRCxXQUFBQSxFQUFhLElBQUksQ0FBQ25CLG1CQUFtQixHQUFHO1lBQ3BFLE1BQU02RixTQUFBQSxHQUFZLElBQUl2SSxJQUFBQSxDQUFLNkQsV0FBQUEsQ0FBQUE7O1lBRzNCLElBQUl0QixZQUFBQSxHQUFlO1lBQ25CLElBQUlrRSxTQUFBQSxHQUFZLElBQUl6RyxJQUFBQSxDQUFLOEMsV0FBQUEsQ0FBQUE7WUFFekIsTUFBTzJELGFBQWE4QixTQUFBQSxDQUFXO2dCQUM3QixNQUFNTixPQUFBQSxHQUFVeEIsVUFBVXlCLFdBQVcsR0FBR0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNyRCxJQUFJeEcsVUFBQUEsQ0FBVzRELEdBQUcsQ0FBQzBDLE9BQUFBLENBQUFBLEVBQVU7b0JBQzNCMUYsWUFBQUEsRUFBQUE7Z0JBQ0Y7Z0JBQ0FrRSxTQUFBQSxHQUFZaEcsK0tBQU9BLENBQUNnRyxTQUFBQSxFQUFXO1lBQ2pDO1lBRUEsTUFBTWpGLFlBQUFBLEdBQWVRLEtBQUtDLEdBQUcsQ0FBQyxHQUFHTSxZQUFBQSxHQUFlLElBQUksQ0FBQ2pCLGtCQUFrQjtZQUV2RWdILE1BQUFBLENBQU85QyxJQUFJLENBQUM7Z0JBQ1ZnRCxJQUFBQSxFQUFNLElBQUl4SSxJQUFBQSxDQUFLNkQsV0FBQUEsQ0FBQUE7Z0JBQ2ZmLFdBQUFBLEVBQWEsSUFBSTlDLElBQUFBLENBQUs4QyxXQUFBQSxDQUFBQTtnQkFDdEJ5RixTQUFBQSxFQUFXLElBQUl2SSxJQUFBQSxDQUFLdUksU0FBQUEsQ0FBQUE7Z0JBQ3BCaEcsWUFBQUE7Z0JBQ0FoQixXQUFBQSxFQUFhQyxZQUFBQSxLQUFpQjtnQkFDOUJBO1lBQ0Y7WUFFQXFDLFdBQUFBLEdBQWNwRCwrS0FBT0EsQ0FBQ29ELFdBQUFBLEVBQWE7UUFDckM7UUFFQSxPQUFPeUUsTUFBQUE7SUFDVDtJQUVBOztNQUdBLE9BQWVqRywwQkFDYlYsVUFBaUMsRUFDakNFLGFBQW1DLEVBQ25DZCxXQUFpQixFQUNqQlUsU0FBZSxFQUNDO1FBQ2hCLE1BQU1nSCxZQUE0QixFQUFFO1FBRXBDLElBQUk1RSxXQUFBQSxHQUFjLElBQUk3RCxJQUFBQSxDQUFLZSxXQUFBQSxDQUFBQTtRQUMzQixJQUFJMkgsVUFBQUEsR0FBYTtRQUVqQixNQUFPN0UsZUFBZXBDLFNBQUFBLENBQVc7WUFDL0IsTUFBTXdHLE9BQUFBLEdBQVVwRSxZQUFZcUUsV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkQsTUFBTVEsV0FBQUEsR0FBY2hILFVBQUFBLENBQVcwRyxHQUFHLENBQUNKLFlBQVksRUFBRTtZQUNqRCxNQUFNakIsY0FBQUEsR0FBaUIyQixXQUFBQSxDQUFZeEgsTUFBTSxHQUFHLElBQUksSUFBSTtZQUVwRCxNQUFNeUgsWUFBQUEsR0FBZS9HLGFBQWEsQ0FBQzZHLFVBQUFBLENBQVc7WUFFOUNELFNBQUFBLENBQVVqRCxJQUFJLENBQUM7Z0JBQ2JnRCxJQUFBQSxFQUFNLElBQUl4SSxJQUFBQSxDQUFLNkQsV0FBQUEsQ0FBQUE7Z0JBQ2ZtRCxjQUFBQTtnQkFDQTZCLHNCQUFBQSxFQUF3QkQsYUFBYXJHLFlBQVk7Z0JBQ2pEMkUsV0FBQUEsRUFBYSxDQUFDMEIsYUFBYXJILFdBQVc7Z0JBQ3RDdUgsaUJBQUFBLEVBQW1CSDtZQUNyQjtZQUVBOUUsV0FBQUEsR0FBY3BELCtLQUFPQSxDQUFDb0QsV0FBQUEsRUFBYTtZQUNuQzZFLFVBQUFBLEVBQUFBO1FBQ0Y7UUFFQSxPQUFPRCxTQUFBQTtJQUNUO0lBRUE7O01BR0EsT0FBZTNILHFCQUFBQSxDQUFzQjBILElBQVUsRUFBUTs7UUFFckQsTUFBTU8sYUFBYXRHLGtMQUFBQSxDQUFXK0YsSUFBQUEsQ0FBQUE7O1FBRzlCLElBQUksQ0FBQ3BJLCtLQUFPQSxDQUFDMkksVUFBQUEsQ0FBQUEsRUFBYTtZQUN4QixNQUFNLElBQUk1SSxLQUFBQSxDQUFNLENBQUMsMEJBQTBCLEVBQUVxSSxJQUFBQSxDQUFBQSxDQUFNO1FBQ3JEO1FBRUEsT0FBT08sVUFBQUE7SUFDVDtJQUVBOztNQUdBLE9BQWUvSCxvQkFBQUEsQ0FBcUJqQixhQUFtQixFQUFROztRQUU3RCxNQUFNZ0IsY0FBY1IsK0tBQUFBLENBQVFSLGFBQUFBLEVBQWUsSUFBSSxDQUFDMkMsbUJBQW1CLEdBQUc7O1FBR3RFLElBQUksQ0FBQ3RDLCtLQUFPQSxDQUFDVyxXQUFBQSxDQUFBQSxFQUFjO1lBQ3pCLE1BQU0sSUFBSVosS0FBQUEsQ0FBTSxDQUFDLHFEQUFxRCxFQUFFUyw4S0FBQUEsQ0FBT2IsZUFBZSxlQUFlO1FBQy9HOztRQUdBLE1BQU1pSixPQUFBQSxHQUFVakosY0FBY2tKLFdBQVc7UUFDekMsTUFBTUMsU0FBQUEsR0FBWW5JLFlBQVlrSSxXQUFXO1FBRXpDLElBQUlELFlBQVlFLFNBQUFBLEVBQVc7WUFDekIsTUFBTUMsZUFBQUEsR0FBa0JDLGtMQUFBQSxDQUFXSixPQUFBQSxDQUFBQSxJQUFZSSxrTEFBQUEsQ0FBV0YsU0FBQUEsQ0FBQUE7WUFDMUQsSUFBSUMsZUFBQUEsRUFBaUI7Z0JBQ25CekksT0FBQUEsQ0FBUWlILEtBQUssQ0FBQyxDQUFDLDJDQUEyQyxFQUFFdUIsU0FBQUEsQ0FBVSxDQUFDLEVBQUVGLE9BQUFBLENBQUFBLENBQVM7WUFDcEY7UUFDRjtRQUVBLE9BQU9qSSxXQUFBQTtJQUNUO0lBRUE7O0dBRUMsR0FDRCxPQUFlMkcsa0JBQUFBLENBQW1CekUsU0FBZSxFQUFFTCxPQUFhLEVBQVc7UUFDekUsTUFBTXNHLFNBQUFBLEdBQVlqRyxVQUFVZ0csV0FBVztRQUN2QyxNQUFNSSxPQUFBQSxHQUFVekcsUUFBUXFHLFdBQVc7O1FBR25DLElBQUssSUFBSUssSUFBQUEsR0FBT0osU0FBQUEsRUFBV0ksSUFBQUEsSUFBUUQsU0FBU0MsSUFBQUEsRUFBQUEsQ0FBUTtZQUNsRCxJQUFJRixrTEFBVUEsQ0FBQ0UsSUFBQUEsQ0FBQUEsRUFBTztnQkFDcEIsTUFBTUMsVUFBVSxJQUFJdkosSUFBQUEsQ0FBS3NKLElBQUFBLEVBQU0sR0FBRzs7Z0JBQ2xDLElBQUlDLE9BQUFBLElBQVd0RyxTQUFBQSxJQUFhc0csT0FBQUEsSUFBVzNHLE9BQUFBLEVBQVM7b0JBQzlDLE9BQU87Z0JBQ1Q7WUFDRjtRQUNGO1FBRUEsT0FBTztJQUNUO0FBQ0Y7QUFwc0JhaEQsd0JBQUFBLENBQ2EwQixrQkFBQUEsR0FBcUI7QUFEbEMxQix3QkFBQUEsQ0FFYThDLG1CQUFBQSxHQUFzQjtBQ01oRDs7Ozs7Ozs7O0NBU0MsR0FDTSxNQUFNOEcsb0JBQUFBLENBQUFBO0lBWVg7O0dBRUMsR0FDREMsZ0JBQUFBLENBQWlCQyxRQUFtQixFQUFFaEcsYUFBcUIsRUFBb0I7O1FBRTdFLElBQUksQ0FBQyxJQUFJLENBQUNpRyxnQkFBZ0IsQ0FBQ0QsUUFBQUEsQ0FBQUEsRUFBVztZQUNwQyxPQUFPO2dCQUNMdEosT0FBQUEsRUFBUztnQkFDVHdKLFNBQUFBLEVBQVcsRUFBRTtnQkFDYmxFLE9BQUFBLEVBQVM7Z0JBQ1RtRSxhQUFBQSxFQUFlO1lBQ2pCO1FBQ0Y7O1FBR0EsTUFBTUMsa0JBQUFBLEdBQXFCO1lBQ3pCQyxLQUFBQSxFQUFPdEgsa0xBQUFBLENBQVdpSCxTQUFTSyxLQUFLO1lBQ2hDQyxHQUFBQSxFQUFLQyxnTEFBQUEsQ0FBU1AsU0FBU00sR0FBRztRQUM1QjtRQUVBLE1BQU1KLFlBQThCLEVBQUU7UUFDdEMsTUFBTUMsZ0JBQXdCLEVBQUU7O1FBR2hDLEtBQUssTUFBTTdHLFFBQVFVLGFBQUFBLENBQWU7WUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQ3dHLFdBQVcsQ0FBQ2xILElBQUFBLENBQUFBLEVBQU87WUFFN0IsTUFBTW1ILFNBQUFBLEdBQVk7Z0JBQ2hCSixLQUFBQSxFQUFPdEgsa0xBQUFBLENBQVdPLEtBQUtDLFNBQVM7Z0JBQ2hDK0csR0FBQUEsRUFBS0MsZ0xBQUFBLENBQVNqSCxLQUFLSixPQUFPO1lBQzVCOztZQUdBLE1BQU13SCxVQUFBQSxHQUFhLElBQUksQ0FBQ0MsYUFBYSxDQUFDUCxrQkFBQUEsRUFBb0JLLFNBQUFBLENBQUFBO1lBRTFELElBQUlDLFVBQUFBLEVBQVk7Z0JBQ2QsTUFBTUUsaUJBQWlCLElBQUksQ0FBQ0MsdUJBQXVCLENBQ2pEVCxvQkFDQUssU0FBQUEsRUFDQW5ILElBQUFBLENBQUFBOztnQkFJRixJQUFJLElBQUksQ0FBQ3dILG9CQUFvQixDQUFDRixjQUFBQSxFQUFnQlIsb0JBQW9CSyxTQUFBQSxDQUFBQSxFQUFZO29CQUM1RVAsU0FBQUEsQ0FBVXBFLElBQUksQ0FBQzhFLGNBQUFBLENBQUFBO2dCQUNqQjs7Z0JBR0EsSUFBSSxDQUFDRyx3QkFBd0IsQ0FBQ3pILElBQUFBLEVBQU02RyxhQUFBQSxDQUFBQTtZQUN0QztRQUNGOztRQUdBLE1BQU1hLGdCQUFBQSxHQUFtQixJQUFJLENBQUNDLG1CQUFtQixDQUFDakgsYUFBQUEsQ0FBQUE7UUFFbEQsT0FBTztZQUNMdEQsT0FBQUEsRUFBU3dKLFNBQUFBLENBQVV6SSxNQUFNLEtBQUs7WUFDOUJ5SSxTQUFBQTtZQUNBbEUsT0FBQUEsRUFBUyxJQUFJLENBQUNrRix5QkFBeUIsQ0FBQ2hCLFNBQUFBLENBQUFBO1lBQ3hDQyxhQUFBQSxFQUFlYTtRQUNqQjtJQUNGO0lBRUE7O01BR0FDLG1CQUFBQSxDQUFvQjdLLEtBQWEsRUFBVTtRQUN6QyxNQUFNK0osZ0JBQXdCLEVBQUU7UUFFaEMsS0FBSyxNQUFNN0csUUFBUWxELEtBQUFBLENBQU87WUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQ29LLFdBQVcsQ0FBQ2xILElBQUFBLENBQUFBLEVBQU87WUFDN0IsSUFBSSxDQUFDeUgsd0JBQXdCLENBQUN6SCxJQUFBQSxFQUFNNkcsYUFBQUEsQ0FBQUE7UUFDdEM7O1FBR0EsT0FBTztlQUFJLElBQUl6RSxJQUFJeUUsYUFBQUEsQ0FBYzNILEdBQUcsQ0FBQzJJLENBQUFBLENBQUFBLEdBQUtBLEVBQUU5QyxPQUFPO1NBQUssQ0FDckQ3RixHQUFHLENBQUM0SSxDQUFBQSxJQUFBQSxHQUFRLElBQUk5SyxLQUFLOEssSUFBQUEsQ0FBQUEsQ0FBQUEsQ0FDckJsRCxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsQ0FBQUEsR0FBTUQsQ0FBQUEsQ0FBRUUsT0FBTyxLQUFLRCxFQUFFQyxPQUFPO0lBQzNDO0lBRUE7O0dBRUMsR0FDRGdELGNBQUFBLENBQWV2QyxJQUFVLEVBQUU5RSxhQUFxQixFQUFXO1FBQ3pELE1BQU1zSCxpQkFBaUJ2SSxrTEFBQUEsQ0FBVytGLElBQUFBLENBQUFBO1FBRWxDLE9BQU85RSxhQUFBQSxDQUFjdUgsSUFBSSxDQUFDakksQ0FBQUEsSUFBQUEsR0FBQUE7WUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQ2tILFdBQVcsQ0FBQ2xILE9BQU8sT0FBTztZQUVwQyxNQUFNRyxTQUFBQSxHQUFZVixrTEFBQUEsQ0FBV08sSUFBQUEsQ0FBS0MsU0FBUztZQUMzQyxNQUFNRyxPQUFBQSxHQUFVWCxrTEFBQUEsQ0FBV08sSUFBQUEsQ0FBS0osT0FBTztZQUV2QyxPQUFPb0ksY0FBQUEsSUFBa0I3SCxhQUFhNkgsY0FBQUEsSUFBa0I1SCxPQUFBQTtRQUMxRDtJQUNGO0lBRUE7O0dBRUMsR0FDRDhILGNBQUFBLENBQWUxQyxJQUFVLEVBQUU5RSxhQUFxQixFQUFVO1FBQ3hELE1BQU1zSCxpQkFBaUJ2SSxrTEFBQUEsQ0FBVytGLElBQUFBLENBQUFBO1FBRWxDLE9BQU85RSxhQUFBQSxDQUFjbUQsTUFBTSxDQUFDN0QsQ0FBQUEsSUFBQUEsR0FBQUE7WUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQ2tILFdBQVcsQ0FBQ2xILE9BQU8sT0FBTztZQUVwQyxNQUFNRyxTQUFBQSxHQUFZVixrTEFBQUEsQ0FBV08sSUFBQUEsQ0FBS0MsU0FBUztZQUMzQyxNQUFNRyxPQUFBQSxHQUFVWCxrTEFBQUEsQ0FBV08sSUFBQUEsQ0FBS0osT0FBTztZQUV2QyxPQUFPb0ksY0FBQUEsSUFBa0I3SCxhQUFhNkgsY0FBQUEsSUFBa0I1SCxPQUFBQTtRQUMxRDtJQUNGO0lBRUE7O01BR0ErSCx5QkFBQUEsQ0FDRUMsY0FBb0IsRUFDcEJDLFlBQW9CLEVBQ3BCM0gsYUFBcUIsRUFDckI0SCxXQUFBQSxHQUFzQixHQUFHLEVBQ1A7UUFDbEIsSUFBSWpILFdBQVc1QixrTEFBQUEsQ0FBVzJJLGNBQUFBLENBQUFBO1FBQzFCLE1BQU1HLGFBQUFBLEdBQWdCLElBQUl2TCxJQUFBQSxDQUFLcUUsUUFBQUEsQ0FBUzBELE9BQU8sS0FBTXVELFdBQUFBLEdBQWMsS0FBSyxLQUFLLEtBQUs7UUFFbEYsTUFBT2pILFlBQVlrSCxhQUFBQSxDQUFlO1lBQ2hDLE1BQU1DLFNBQUFBLEdBQXVCO2dCQUMzQnpCLEtBQUFBLEVBQU8xRixRQUFBQTtnQkFDUDJGLEdBQUFBLEVBQUssSUFBSWhLLElBQUFBLENBQUtxRSxRQUFBQSxDQUFTMEQsT0FBTyxLQUFPc0QsQ0FBQUEsWUFBQUEsSUFBZSxJQUFLLEtBQUssS0FBSyxLQUFLO1lBQzFFO1lBRUEsTUFBTTNHLFVBQUFBLEdBQWEsSUFBSSxDQUFDK0UsZ0JBQWdCLENBQUMrQixTQUFBQSxFQUFXOUgsYUFBQUEsQ0FBQUE7WUFDcEQsSUFBSWdCLFVBQUFBLENBQVd0RSxPQUFPLEVBQUU7Z0JBQ3RCLE9BQU9vTCxTQUFBQTtZQUNUOztZQUdBbkgsUUFBQUEsR0FBVyxJQUFJckUsSUFBQUEsQ0FBS3FFLFFBQUFBLENBQVMwRCxPQUFPLEtBQU0sS0FBSyxLQUFLLEtBQUs7UUFDM0Q7UUFFQSxPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNEMEQsd0JBQ0VDLGVBQTBCLEVBQzFCTCxZQUFvQixFQUNwQjNILGFBQXFCLEVBQ1I7UUFDYixNQUFNaUksY0FBMkIsRUFBRTtRQUNuQyxNQUFNNUYsUUFBQUEsR0FBV3NGLGdCQUFnQjdILHdMQUFBQSxDQUFpQmtJLGVBQUFBLENBQWdCMUIsR0FBRyxFQUFFMEIsZUFBQUEsQ0FBZ0IzQixLQUFLLElBQUk7O1FBR2hHLE1BQU02QixXQUFBQSxHQUFjLElBQUk1TCxJQUFBQSxDQUFLMEwsZUFBQUEsQ0FBZ0IzQixLQUFLLENBQUNoQyxPQUFPLEtBQU0sS0FBSyxLQUFLLEtBQUssS0FBSztRQUNwRixNQUFNOEQsZUFBZSxJQUFJLENBQUNWLHlCQUF5QixDQUFDUyxXQUFBQSxFQUFhN0YsVUFBVXJDLGFBQUFBLEVBQWU7UUFDMUYsSUFBSW1JLGdCQUFnQkEsWUFBQUEsQ0FBYTlCLEtBQUssR0FBRzJCLGVBQUFBLENBQWdCM0IsS0FBSyxFQUFFO1lBQzlENEIsV0FBQUEsQ0FBWW5HLElBQUksQ0FBQ3FHLFlBQUFBLENBQUFBO1FBQ25COztRQUdBLE1BQU1DLFNBQUFBLEdBQVksSUFBSTlMLElBQUFBLENBQUswTCxlQUFBQSxDQUFnQjFCLEdBQUcsQ0FBQ2pDLE9BQU8sS0FBTSxLQUFLLEtBQUssS0FBSztRQUMzRSxNQUFNZ0UsYUFBYSxJQUFJLENBQUNaLHlCQUF5QixDQUFDVyxTQUFBQSxFQUFXL0YsVUFBVXJDLGFBQUFBLEVBQWU7UUFDdEYsSUFBSXFJLFVBQUFBLEVBQVk7WUFDZEosV0FBQUEsQ0FBWW5HLElBQUksQ0FBQ3VHLFVBQUFBLENBQUFBO1FBQ25CO1FBRUEsT0FBT0osV0FBQUEsQ0FBWUssS0FBSyxDQUFDLEdBQUc7O0lBQzlCO0lBRUE7O0dBRUMsR0FDREMseUJBQUFBLENBQ0VDLFNBQXNCLEVBQ3RCeEksYUFBcUIsRUFDa0I7UUFDdkMsTUFBTXlJLFVBQWlELEVBQUM7O1FBR3hELElBQUlDLGFBQUFBLEdBQWdCO2VBQUkxSTtTQUFjO1FBRXRDd0ksU0FBQUEsQ0FBVTdHLE9BQU8sQ0FBQyxDQUFDZ0gsS0FBQUEsRUFBTy9HLEtBQUFBLEdBQUFBOztZQUV4QixNQUFNaEQsTUFBQUEsR0FBUyxJQUFJLENBQUNtSCxnQkFBZ0IsQ0FBQzRDLEtBQUFBLEVBQU9ELGFBQUFBLENBQUFBO1lBQzVDRCxPQUFPLENBQUM3RyxNQUFNLEdBQUdoRCxNQUFBQTs7WUFHakIsSUFBSUEsTUFBQUEsQ0FBT2xDLE9BQU8sRUFBRTtnQkFDbEJnTSxhQUFBQSxDQUFjNUcsSUFBSSxDQUFDO29CQUNqQnRDLEVBQUFBLEVBQUksQ0FBQyxLQUFLLEVBQUVvQyxLQUFBQSxDQUFBQSxDQUFPO29CQUNuQmQsT0FBQUEsRUFBUztvQkFDVHZCLFNBQUFBLEVBQVdvSixNQUFNdEMsS0FBSztvQkFDdEJuSCxPQUFBQSxFQUFTeUosTUFBTXJDLEdBQUc7b0JBQ2xCdkYsSUFBQUEsRUFBTWpCLHdMQUFnQkEsQ0FBQzZJLEtBQUFBLENBQU1yQyxHQUFHLEVBQUVxQyxLQUFBQSxDQUFNdEMsS0FBSyxJQUFJO2dCQUNuRDtZQUNGO1FBQ0Y7UUFFQSxPQUFPb0MsT0FBQUE7SUFDVDtJQUVBOztHQUVDLEdBQ0QsYUFBUTlCLENBQWNpQyxNQUFpQixFQUFFQyxNQUFpQixFQUFXO1FBQ25FLE9BQU9DLCtMQUFBQSxDQUNMO1lBQUV6QyxLQUFBQSxFQUFPdUMsT0FBT3ZDLEtBQUs7WUFBRUMsR0FBQUEsRUFBS3NDLE9BQU90QyxHQUFBQTtTQUFJLEVBQ3ZDO1lBQUVELEtBQUFBLEVBQU93QyxPQUFPeEMsS0FBSztZQUFFQyxHQUFBQSxFQUFLdUMsT0FBT3ZDLEdBQUFBO1FBQUk7SUFFM0M7SUFFQTs7R0FFQyxHQUNELHVCQUFRTyxDQUNOYixRQUFtQixFQUNuQlMsU0FBb0IsRUFDcEJuSCxJQUFVLEVBQ007O1FBRWhCLE1BQU15SixhQUFBQSxHQUFnQi9DLFFBQUFBLENBQVNLLEtBQUssR0FBR0ksU0FBQUEsQ0FBVUosS0FBSyxHQUFHTCxRQUFBQSxDQUFTSyxLQUFLLEdBQUdJLFNBQUFBLENBQVVKLEtBQUs7UUFDekYsTUFBTTJDLFdBQUFBLEdBQWNoRCxRQUFBQSxDQUFTTSxHQUFHLEdBQUdHLFNBQUFBLENBQVVILEdBQUcsR0FBR04sUUFBQUEsQ0FBU00sR0FBRyxHQUFHRyxTQUFBQSxDQUFVSCxHQUFHO1FBQy9FLE1BQU0yQyxXQUFBQSxHQUFjbkosd0xBQUFBLENBQWlCa0osV0FBQUEsRUFBYUQsYUFBQUEsQ0FBQUEsR0FBaUI7UUFFbkUsT0FBTztZQUNMN0csTUFBQUEsRUFBUTVDLEtBQUtFLEVBQUU7WUFDZjBKLFdBQUFBLEVBQWE1SixLQUFLd0IsT0FBTztZQUN6QmlJLGFBQUFBO1lBQ0FDLFdBQUFBO1lBQ0FDLFdBQUFBLEVBQWEzSyxJQUFBQSxDQUFLQyxHQUFHLENBQUMsR0FBRzBLLFdBQUFBO1FBQzNCO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELG9CQUFRbkMsQ0FDTnFDLFFBQXdCLEVBQ3hCbkQsUUFBbUIsRUFDbkJTLFNBQW9CLEVBQ1g7O1FBRVQsSUFBSSxJQUFJLENBQUMyQyxNQUFNLENBQUNDLFVBQVUsRUFBRSxPQUFPOztRQUduQyxJQUFJLElBQUksQ0FBQ0QsTUFBTSxDQUFDRSxrQkFBa0IsRUFBRTtZQUNsQyxNQUFNQyxtQkFBQUEsR0FDSixRQUFDdkQsQ0FBU0ssS0FBSyxDQUFDaEMsT0FBTyxPQUFPb0MsVUFBVUgsR0FBRyxDQUFDakMsT0FBTyxNQUNsRDJCLFFBQUFBLENBQVNNLEdBQUcsQ0FBQ2pDLE9BQU8sT0FBT29DLFNBQUFBLENBQVVKLEtBQUssQ0FBQ2hDLE9BQU87WUFFckQsSUFBSWtGLHFCQUFxQixPQUFPO1FBQ2xDOztRQUdBLElBQUksSUFBSSxDQUFDSCxNQUFNLENBQUNJLHNCQUFzQixJQUFJTCxRQUFBQSxDQUFTRixXQUFXLElBQUksR0FBRztZQUNuRSxPQUFPO1FBQ1Q7UUFFQSxPQUFPO0lBQ1Q7SUFFQTs7R0FFQyxHQUNELHdCQUFRbEMsQ0FBeUJ6SCxJQUFVLEVBQUU2RyxhQUFxQixFQUFRO1FBQ3hFLE1BQU1FLEtBQUFBLEdBQVF0SCxrTEFBQUEsQ0FBV08sSUFBQUEsQ0FBS0MsU0FBUztRQUN2QyxNQUFNK0csR0FBQUEsR0FBTXZILGtMQUFBQSxDQUFXTyxJQUFBQSxDQUFLSixPQUFPO1FBRW5DLElBQUlpQixXQUFBQSxHQUFjLElBQUk3RCxJQUFBQSxDQUFLK0osS0FBQUEsQ0FBQUE7UUFDM0IsTUFBT2xHLGVBQWVtRyxHQUFBQSxDQUFLO1lBQ3pCSCxhQUFBQSxDQUFjckUsSUFBSSxDQUFDLElBQUl4RixJQUFBQSxDQUFLNkQsV0FBQUEsQ0FBQUEsQ0FBQUE7WUFDNUJBLFdBQUFBLEdBQWMsSUFBSTdELElBQUFBLENBQUs2RCxXQUFBQSxDQUFZa0UsT0FBTyxLQUFNLEtBQUssS0FBSyxLQUFLO1FBQ2pFO0lBQ0Y7SUFFQTs7TUFHUTZDLHlCQUFBQSxDQUEwQmhCLFNBQTJCLEVBQVU7UUFDckUsSUFBSUEsU0FBQUEsQ0FBVXpJLE1BQU0sS0FBSyxHQUFHO1lBQzFCLE9BQU87UUFDVDtRQUVBLElBQUl5SSxTQUFBQSxDQUFVekksTUFBTSxLQUFLLEdBQUc7WUFDMUIsTUFBTTBMLFFBQUFBLEdBQVdqRCxTQUFTLENBQUMsRUFBRTtZQUM3QixPQUFPLENBQUMsb0NBQW9DLEVBQUVpRCxRQUFBQSxDQUFTRCxXQUFXLENBQUMsRUFBRSxFQUFFQyxRQUFBQSxDQUFTRixXQUFXLENBQUMsSUFBSSxFQUFFRSxTQUFTRixXQUFXLEtBQUssSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQzVJO1FBRUEsT0FBTyxDQUFDLG9CQUFvQixFQUFFL0MsVUFBVXpJLE1BQU0sQ0FBQyxlQUFlLENBQUM7SUFDakU7SUFFQTs7TUFHUXdJLGdCQUFBQSxDQUFpQjBDLEtBQWdCLEVBQVc7UUFDbEQsSUFBSSxDQUFDQSxLQUFBQSxJQUFTLENBQUNBLEtBQUFBLENBQU10QyxLQUFLLElBQUksQ0FBQ3NDLEtBQUFBLENBQU1yQyxHQUFHLEVBQUUsT0FBTztRQUNqRCxJQUFJLENBQUM1SiwrS0FBQUEsQ0FBUWlNLEtBQUFBLENBQU10QyxLQUFLLEtBQUssQ0FBQzNKLCtLQUFBQSxDQUFRaU0sS0FBQUEsQ0FBTXJDLEdBQUcsR0FBRyxPQUFPO1FBQ3pELElBQUlxQyxNQUFNdEMsS0FBSyxHQUFHc0MsS0FBQUEsQ0FBTXJDLEdBQUcsRUFBRSxPQUFPO1FBQ3BDLE9BQU87SUFDVDtJQUVBOztNQUdRRSxXQUFBQSxDQUFZbEgsSUFBVSxFQUFXO1FBQ3ZDLElBQUksQ0FBQ0EsSUFBQUEsSUFBUSxDQUFDQSxJQUFBQSxDQUFLQyxTQUFTLElBQUksQ0FBQ0QsSUFBQUEsQ0FBS0osT0FBTyxFQUFFLE9BQU87UUFDdEQsSUFBSSxDQUFDeEMsK0tBQUFBLENBQVE0QyxJQUFBQSxDQUFLQyxTQUFTLEtBQUssQ0FBQzdDLCtLQUFBQSxDQUFRNEMsSUFBQUEsQ0FBS0osT0FBTyxHQUFHLE9BQU87UUFDL0QsSUFBSUksS0FBS0MsU0FBUyxHQUFHRCxJQUFBQSxDQUFLSixPQUFPLEVBQUUsT0FBTztRQUMxQyxPQUFPO0lBQ1Q7SUFFQTs7TUFHQXVLLFlBQUFBLENBQWFDLFNBQTJDLEVBQVE7UUFDOUQsSUFBSSxDQUFDTixNQUFNLEdBQUc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsTUFBTTtZQUFFLEdBQUdNLFNBQUFBO1FBQVU7SUFDL0M7SUFFQTs7R0FFQyxHQUNEQyxTQUFBQSxHQUFxQztRQUNuQyxPQUFPO1lBQUUsR0FBRyxJQUFJLENBQUNQLE1BQUFBO1FBQU87SUFDMUI7SUE3VUEsWUFBWUEsTUFBQUEsR0FBMkMsRUFBRSxDQUFFO1FBQ3pELElBQUksQ0FBQ0EsTUFBTSxHQUFHO1lBQ1pFLGtCQUFBQSxFQUFvQjtZQUNwQkUsc0JBQUFBLEVBQXdCO1lBQ3hCSCxVQUFBQSxFQUFZO1lBQ1osR0FBR0QsTUFBQUE7UUFDTDtJQUNGO0FBdVVGO0FDeFhBOzs7O1VBaUJhUSxrQkFBQUEsR0FBd0M7SUFDbkQ7UUFDRUMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxjQUFBQSxFQUFnQjtRQUNoQkMsVUFBQUEsRUFBWTtRQUNaQyxPQUFBQSxFQUFTO1FBQ1RDLFFBQUFBLEVBQVU7UUFDVkMsUUFBQUEsRUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLElBQUFBLEVBQU07UUFDTkMsY0FBQUEsRUFBZ0I7UUFDaEJDLFVBQUFBLEVBQVk7UUFDWkMsT0FBQUEsRUFBUztRQUNUQyxRQUFBQSxFQUFVO1FBQ1ZDLFFBQUFBLEVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUFBLEVBQU07UUFDTkMsSUFBQUEsRUFBTTtRQUNOQyxJQUFBQSxFQUFNO1FBQ05DLGNBQUFBLEVBQWdCO1FBQ2hCQyxVQUFBQSxFQUFZO1FBQ1pDLE9BQUFBLEVBQVM7UUFDVEMsUUFBQUEsRUFBVTtRQUNWQyxRQUFBQSxFQUFVO0lBQ1o7O0FBR0Y7QUFDTyxNQUFNQyxtQkFBbUIsQ0FBQ1IsSUFBQUEsR0FBQUE7SUFDL0IsT0FBT0QsbUJBQW1CVSxJQUFJLENBQUN4SixDQUFBQSxPQUFBQSxHQUFXQSxPQUFBQSxDQUFRK0ksSUFBSSxLQUFLQSxJQUFBQSxDQUFBQTtBQUM3RDtBQUVPLE1BQU1VLG1CQUFtQixDQUFDVCxJQUFBQSxHQUFBQTtJQUMvQixPQUFPRixrQkFBQUEsQ0FBbUJVLElBQUksQ0FBQ3hKLENBQUFBLE9BQUFBLEdBQzdCQSxPQUFBQSxDQUFRZ0osSUFBSSxDQUFDVSxXQUFXLE9BQU9WLElBQUFBLENBQUtVLFdBQVc7QUFFbkQ7TUFFYUMscUJBQUFBLEdBQXdCO0lBQ25DLE9BQU9iLGtCQUFBQSxDQUFtQnBMLEdBQUcsQ0FBQ3NDLENBQUFBLFdBQVk7WUFDeEM0SixLQUFBQSxFQUFPNUosUUFBUStJLElBQUk7WUFDbkJjLEtBQUFBLEVBQU8sR0FBRzdKLFFBQVFpSixJQUFJLENBQUMsQ0FBQyxFQUFFakosT0FBQUEsQ0FBUWdKLElBQUksRUFBRTtZQUN4Q2hKO1FBQ0YsSUFBSW9ELElBQUksQ0FBQyxDQUFDQyxDQUFBQSxFQUFHQyxJQUFNRCxDQUFBQSxDQUFFckQsT0FBTyxDQUFDZ0osSUFBSSxDQUFDYyxhQUFhLENBQUN4RyxDQUFBQSxDQUFFdEQsT0FBTyxDQUFDZ0osSUFBSTtBQUNoRTtNQUVhZSxvQkFBQUEsR0FBdUI7SUFDbEMsT0FBT2pCLG1CQUFtQnpHLE1BQU0sQ0FBQ3JDLENBQUFBLE9BQUFBLEdBQVdBLFFBQVFtSixVQUFVO0FBQ2hFO01BRWFhLHlCQUFBQSxHQUE0QjtJQUN2QyxPQUFPbEIsbUJBQW1CekcsTUFBTSxDQUFDckMsQ0FBQUEsT0FBQUEsR0FBVyxDQUFDQSxRQUFRbUosVUFBVTtBQUNqRTtBQUVBO0FBQ08sTUFBTWMsd0JBQUFBLEdBQTJCbkIsa0JBQUFBLENBQW1Cbk0sTUFBQUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9wYWNrYWdlcy9zcmMvY2FsY3VsYXRvci9yb2J1c3Qtc2NoZW5nZW4tY2FsY3VsYXRvci50cyIsIi9Vc2Vycy90cm95c2FtdWVscy9TQ0hFTkdFTiBWSVNBIENBTENVTEFUT1Ivc2NoZW5nZW52aXNhY2FsY3VsYXRvci9wYWNrYWdlcy9zcmMvdmFsaWRhdG9ycy9kYXRlLW92ZXJsYXAtdmFsaWRhdG9yLnRzIiwiL1VzZXJzL3Ryb3lzYW11ZWxzL1NDSEVOR0VOIFZJU0EgQ0FMQ1VMQVRPUi9zY2hlbmdlbnZpc2FjYWxjdWxhdG9yL3BhY2thZ2VzL3NyYy9kYXRhL2NvdW50cmllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkaWZmZXJlbmNlSW5EYXlzLCBzdWJEYXlzLCBhZGREYXlzLCBzdGFydE9mRGF5LCBpc1ZhbGlkLCBpc0xlYXBZZWFyLCBmb3JtYXQgfSBmcm9tIFwiZGF0ZS1mbnNcIlxuXG5pbXBvcnQgdHlwZSB7XG4gIFRyaXAsXG4gIENvbXBsaWFuY2VSZXN1bHQsXG4gIERheUJyZWFrZG93bixcbiAgVmFsaWRhdGlvbkVycm9yLFxuICBSb2xsaW5nV2luZG93Q2hlY2ssXG4gIFBsYW5uZWRUcmlwVmFsaWRhdGlvbixcbiAgVHJpcFZhbGlkYXRpb25SZXN1bHRcbn0gZnJvbSAnLi4vdHlwZXMnXG5cbi8qKlxuICogUm9idXN0IFNjaGVuZ2VuIENhbGN1bGF0b3IgaW1wbGVtZW50aW5nIGV4YWN0IDE4MC1kYXkgcm9sbGluZyB3aW5kb3cgcnVsZXNcbiAqIFxuICogS2V5IFNjaGVuZ2VuIFJ1bGVzOlxuICogMS4gTWF4aW11bSA5MCBkYXlzIGluIGFueSAxODAtZGF5IHBlcmlvZFxuICogMi4gVGhlIDE4MC1kYXkgcGVyaW9kIGlzIFJPTExJTkcgLSBjYWxjdWxhdGVkIGZyb20gYW55IGdpdmVuIGRhdGUgYmFja3dhcmRcbiAqIDMuIEVudHJ5IGFuZCBleGl0IGRheXMgYm90aCBjb3VudCBhcyBzdGF5IGRheXNcbiAqIDQuIERheXMgbXVzdCBiZSBjYWxjdWxhdGVkIGZvciBFVkVSWSBkYXksIG5vdCBqdXN0IHRyaXAgZW5kcG9pbnRzXG4gKi9cbmV4cG9ydCBjbGFzcyBSb2J1c3RTY2hlbmdlbkNhbGN1bGF0b3Ige1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBNQVhfREFZU19JTl9QRVJJT0QgPSA5MFxuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBST0xMSU5HX1BFUklPRF9EQVlTID0gMTgwXG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBjb21wbGlhbmNlIHVzaW5nIGV4YWN0IHJvbGxpbmcgd2luZG93IGFsZ29yaXRobVxuICAgKiBUaGlzIGNoZWNrcyBjb21wbGlhbmNlIGZvciBFVkVSWSBkYXkgaW4gdGhlIHBlcmlvZCwgbm90IGp1c3QgdHJpcCBlbmRwb2ludHNcbiAgICogRW5oYW5jZWQgd2l0aCBlZGdlIGNhc2UgaGFuZGxpbmcgZm9yIGxlYXAgeWVhcnMsIHRpbWV6b25lcywgYW5kIGJvdW5kYXJ5IGNvbmRpdGlvbnNcbiAgICovXG4gIHN0YXRpYyBjYWxjdWxhdGVFeGFjdENvbXBsaWFuY2UodHJpcHM6IFRyaXBbXSwgcmVmZXJlbmNlRGF0ZTogRGF0ZSA9IG5ldyBEYXRlKCkpOiBDb21wbGlhbmNlUmVzdWx0IHtcbiAgICB0cnkge1xuICAgICAgLy8gRW5oYW5jZWQgaW5wdXQgdmFsaWRhdGlvblxuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHRyaXBzKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyaXBzIG11c3QgYmUgYW4gYXJyYXknKVxuICAgICAgfVxuXG4gICAgICBpZiAoIXJlZmVyZW5jZURhdGUgfHwgIWlzVmFsaWQocmVmZXJlbmNlRGF0ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWZlcmVuY2UgZGF0ZSBtdXN0IGJlIGEgdmFsaWQgRGF0ZSBvYmplY3QnKVxuICAgICAgfVxuXG4gICAgICAvLyBWYWxpZGF0ZSByZWZlcmVuY2UgZGF0ZSBpcyBub3QgaW4gZXh0cmVtZSBmdXR1cmUvcGFzdFxuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxuICAgICAgY29uc3QgdGVuWWVhcnNBZ28gPSBzdWJEYXlzKG5vdywgMzY1ICogMTApXG4gICAgICBjb25zdCBmaXZlWWVhcnNGcm9tTm93ID0gYWRkRGF5cyhub3csIDM2NSAqIDUpXG4gICAgICBcbiAgICAgIGlmIChyZWZlcmVuY2VEYXRlIDwgdGVuWWVhcnNBZ28gfHwgcmVmZXJlbmNlRGF0ZSA+IGZpdmVZZWFyc0Zyb21Ob3cpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGBSZWZlcmVuY2UgZGF0ZSAke2Zvcm1hdChyZWZlcmVuY2VEYXRlLCAneXl5eS1NTS1kZCcpfSBpcyBvdXRzaWRlIHJlYXNvbmFibGUgcmFuZ2VgKVxuICAgICAgfVxuXG4gICAgICAvLyBOb3JtYWxpemUgcmVmZXJlbmNlIGRhdGUgdG8gc3RhcnQgb2YgZGF5IChVVEMtYWdub3N0aWMpXG4gICAgICBjb25zdCBub3JtYWxpemVkUmVmRGF0ZSA9IHRoaXMubm9ybWFsaXplVG9TdGFydE9mRGF5KHJlZmVyZW5jZURhdGUpXG4gICAgICBjb25zdCBwZXJpb2RTdGFydCA9IHRoaXMuY2FsY3VsYXRlUGVyaW9kU3RhcnQobm9ybWFsaXplZFJlZkRhdGUpXG4gICAgICBcbiAgICAgIC8vIFZhbGlkYXRlIGFuZCBub3JtYWxpemUgYWxsIHRyaXBzXG4gICAgICBjb25zdCB2YWxpZFRyaXBzID0gdGhpcy52YWxpZGF0ZUFuZE5vcm1hbGl6ZVRyaXBzKHRyaXBzKVxuICAgICAgXG4gICAgICAvLyBIYW5kbGUgZW1wdHkgdHJpcHMgY2FzZVxuICAgICAgaWYgKHZhbGlkVHJpcHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdG90YWxEYXlzVXNlZDogMCxcbiAgICAgICAgICBkYXlzUmVtYWluaW5nOiB0aGlzLk1BWF9EQVlTX0lOX1BFUklPRCxcbiAgICAgICAgICBpc0NvbXBsaWFudDogdHJ1ZSxcbiAgICAgICAgICBvdmVyc3RheURheXM6IDAsXG4gICAgICAgICAgcmVmZXJlbmNlRGF0ZTogbm9ybWFsaXplZFJlZkRhdGUsXG4gICAgICAgICAgcGVyaW9kU3RhcnQsXG4gICAgICAgICAgcGVyaW9kRW5kOiBub3JtYWxpemVkUmVmRGF0ZSxcbiAgICAgICAgICBkZXRhaWxlZEJyZWFrZG93bjogW11cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDcmVhdGUgYSBtYXAgb2YgYWxsIGRheXMgd2l0aCBzdGF5c1xuICAgICAgY29uc3QgZGFpbHlTdGF5cyA9IHRoaXMuY3JlYXRlRGFpbHlTdGF5TWFwKHZhbGlkVHJpcHMsIHBlcmlvZFN0YXJ0LCBub3JtYWxpemVkUmVmRGF0ZSlcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIHJvbGxpbmcgY29tcGxpYW5jZSBmb3IgZWFjaCBkYXlcbiAgICAgIGNvbnN0IHJvbGxpbmdDaGVja3MgPSB0aGlzLmNhbGN1bGF0ZVJvbGxpbmdDb21wbGlhbmNlRm9yQWxsRGF5cyhcbiAgICAgICAgZGFpbHlTdGF5cyxcbiAgICAgICAgcGVyaW9kU3RhcnQsXG4gICAgICAgIG5vcm1hbGl6ZWRSZWZEYXRlXG4gICAgICApXG4gICAgICBcbiAgICAgIC8vIFZhbGlkYXRlIHJvbGxpbmcgY2hlY2tzXG4gICAgICBpZiAocm9sbGluZ0NoZWNrcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZ2VuZXJhdGUgcm9sbGluZyBjb21wbGlhbmNlIGNoZWNrcycpXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEZpbmQgdGhlIG1heGltdW0gdmlvbGF0aW9uIGFuZCBjdXJyZW50IHN0YXR1c1xuICAgICAgY29uc3QgbWF4VmlvbGF0aW9uID0gTWF0aC5tYXgoLi4ucm9sbGluZ0NoZWNrcy5tYXAoY2hlY2sgPT4gY2hlY2sub3ZlcnN0YXlEYXlzKSlcbiAgICAgIGNvbnN0IGN1cnJlbnRDb21wbGlhbmNlID0gcm9sbGluZ0NoZWNrc1tyb2xsaW5nQ2hlY2tzLmxlbmd0aCAtIDFdXG4gICAgICBcbiAgICAgIGlmICghY3VycmVudENvbXBsaWFuY2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZ2V0IGN1cnJlbnQgY29tcGxpYW5jZSBzdGF0dXMnKVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBHZW5lcmF0ZSBkZXRhaWxlZCBicmVha2Rvd25cbiAgICAgIGNvbnN0IGRldGFpbGVkQnJlYWtkb3duID0gdGhpcy5nZW5lcmF0ZURldGFpbGVkQnJlYWtkb3duKFxuICAgICAgICBkYWlseVN0YXlzLFxuICAgICAgICByb2xsaW5nQ2hlY2tzLFxuICAgICAgICBwZXJpb2RTdGFydCxcbiAgICAgICAgbm9ybWFsaXplZFJlZkRhdGVcbiAgICAgIClcbiAgICAgIFxuICAgICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICB0b3RhbERheXNVc2VkOiBjdXJyZW50Q29tcGxpYW5jZS5kYXlzSW5XaW5kb3csXG4gICAgICAgIGRheXNSZW1haW5pbmc6IE1hdGgubWF4KDAsIHRoaXMuTUFYX0RBWVNfSU5fUEVSSU9EIC0gY3VycmVudENvbXBsaWFuY2UuZGF5c0luV2luZG93KSxcbiAgICAgICAgaXNDb21wbGlhbnQ6IG1heFZpb2xhdGlvbiA9PT0gMCxcbiAgICAgICAgb3ZlcnN0YXlEYXlzOiBtYXhWaW9sYXRpb24sXG4gICAgICAgIHJlZmVyZW5jZURhdGU6IG5vcm1hbGl6ZWRSZWZEYXRlLFxuICAgICAgICBwZXJpb2RTdGFydCxcbiAgICAgICAgcGVyaW9kRW5kOiBub3JtYWxpemVkUmVmRGF0ZSxcbiAgICAgICAgZGV0YWlsZWRCcmVha2Rvd25cbiAgICAgIH1cblxuICAgICAgLy8gRmluYWwgdmFsaWRhdGlvbiBvZiByZXN1bHRcbiAgICAgIGlmIChyZXN1bHQudG90YWxEYXlzVXNlZCA8IDAgfHwgcmVzdWx0LmRheXNSZW1haW5pbmcgPCAwKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgY2FsY3VsYXRpb24gcmVzdWx0OicsIHJlc3VsdClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYWxjdWxhdGlvbiBwcm9kdWNlZCBpbnZhbGlkIG5lZ2F0aXZlIHZhbHVlcycpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gY2FsY3VsYXRlRXhhY3RDb21wbGlhbmNlOicsIGVycm9yKVxuICAgICAgXG4gICAgICAvLyBSZXR1cm4gc2FmZSBmYWxsYmFja1xuICAgICAgY29uc3Qgbm9ybWFsaXplZFJlZkRhdGUgPSBzdGFydE9mRGF5KHJlZmVyZW5jZURhdGUpXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3RhbERheXNVc2VkOiAwLFxuICAgICAgICBkYXlzUmVtYWluaW5nOiB0aGlzLk1BWF9EQVlTX0lOX1BFUklPRCxcbiAgICAgICAgaXNDb21wbGlhbnQ6IHRydWUsXG4gICAgICAgIG92ZXJzdGF5RGF5czogMCxcbiAgICAgICAgcmVmZXJlbmNlRGF0ZTogbm9ybWFsaXplZFJlZkRhdGUsXG4gICAgICAgIHBlcmlvZFN0YXJ0OiBzdWJEYXlzKG5vcm1hbGl6ZWRSZWZEYXRlLCB0aGlzLlJPTExJTkdfUEVSSU9EX0RBWVMgLSAxKSxcbiAgICAgICAgcGVyaW9kRW5kOiBub3JtYWxpemVkUmVmRGF0ZSxcbiAgICAgICAgZGV0YWlsZWRCcmVha2Rvd246IFtdXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSB0aGUgZXhhY3QgbnVtYmVyIG9mIGRheXMgdXNlZCBpbiBhbnkgMTgwLWRheSB3aW5kb3cgZW5kaW5nIG9uIGEgc3BlY2lmaWMgZGF0ZVxuICAgKi9cbiAgc3RhdGljIGNhbGN1bGF0ZURheXNJbldpbmRvdyh0cmlwczogVHJpcFtdLCBlbmREYXRlOiBEYXRlKTogbnVtYmVyIHtcbiAgICBpZiAoIWlzVmFsaWQoZW5kRGF0ZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRW5kIGRhdGUgbXVzdCBiZSB2YWxpZCcpXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IG5vcm1hbGl6ZWRFbmREYXRlID0gdGhpcy5ub3JtYWxpemVUb1N0YXJ0T2ZEYXkoZW5kRGF0ZSlcbiAgICBjb25zdCB3aW5kb3dTdGFydCA9IHRoaXMuY2FsY3VsYXRlUGVyaW9kU3RhcnQobm9ybWFsaXplZEVuZERhdGUpXG4gICAgXG4gICAgbGV0IHRvdGFsRGF5cyA9IDBcbiAgICBcbiAgICBmb3IgKGNvbnN0IHRyaXAgb2YgdHJpcHMpIHtcbiAgICAgIGlmICghaXNWYWxpZCh0cmlwLnN0YXJ0RGF0ZSkgfHwgIWlzVmFsaWQodHJpcC5lbmREYXRlKSkge1xuICAgICAgICBjb25zb2xlLndhcm4oYFNraXBwaW5nIHRyaXAgJHt0cmlwLmlkfSB3aXRoIGludmFsaWQgZGF0ZXNgKVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCB0cmlwU3RhcnQgPSB0aGlzLm5vcm1hbGl6ZVRvU3RhcnRPZkRheSh0cmlwLnN0YXJ0RGF0ZSlcbiAgICAgIGNvbnN0IHRyaXBFbmQgPSB0aGlzLm5vcm1hbGl6ZVRvU3RhcnRPZkRheSh0cmlwLmVuZERhdGUpXG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBvdmVybGFwIHdpdGggdGhlIHdpbmRvdyAoaW5jbHVzaXZlIG9mIGJvdGggc3RhcnQgYW5kIGVuZClcbiAgICAgIGNvbnN0IG92ZXJsYXBTdGFydCA9IHRyaXBTdGFydCA+IHdpbmRvd1N0YXJ0ID8gdHJpcFN0YXJ0IDogd2luZG93U3RhcnRcbiAgICAgIGNvbnN0IG92ZXJsYXBFbmQgPSB0cmlwRW5kIDwgbm9ybWFsaXplZEVuZERhdGUgPyB0cmlwRW5kIDogbm9ybWFsaXplZEVuZERhdGVcbiAgICAgIFxuICAgICAgaWYgKG92ZXJsYXBTdGFydCA8PSBvdmVybGFwRW5kKSB7XG4gICAgICAgIC8vIEJvdGggc3RhcnQgYW5kIGVuZCBkYXlzIGNvdW50LCBzbyB3ZSBhZGQgMVxuICAgICAgICBjb25zdCBkYXlzSW5PdmVybGFwID0gZGlmZmVyZW5jZUluRGF5cyhvdmVybGFwRW5kLCBvdmVybGFwU3RhcnQpICsgMVxuICAgICAgICBcbiAgICAgICAgLy8gVmFsaWRhdGUgdGhlIGNhbGN1bGF0ZWQgZGF5c1xuICAgICAgICBpZiAoZGF5c0luT3ZlcmxhcCA8IDApIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGBOZWdhdGl2ZSBkYXlzIGNhbGN1bGF0ZWQgZm9yIHRyaXAgJHt0cmlwLmlkfWApXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdG90YWxEYXlzICs9IGRheXNJbk92ZXJsYXBcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRvdGFsRGF5c1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGEgcGxhbm5lZCB0cmlwIHdvdWxkIHZpb2xhdGUgdGhlIDkwLzE4MCBydWxlXG4gICAqL1xuICBzdGF0aWMgdmFsaWRhdGVQbGFubmVkVHJpcChcbiAgICBleGlzdGluZ1RyaXBzOiBUcmlwW10sXG4gICAgcGxhbm5lZFRyaXA6IFRyaXBcbiAgKTogUGxhbm5lZFRyaXBWYWxpZGF0aW9uIHtcbiAgICBjb25zdCBhbGxUcmlwcyA9IFsuLi5leGlzdGluZ1RyaXBzLCBwbGFubmVkVHJpcF1cbiAgICBcbiAgICAvLyBDaGVjayBjb21wbGlhbmNlIGZvciBldmVyeSBkYXkgb2YgdGhlIHBsYW5uZWQgdHJpcFxuICAgIGxldCBjdXJyZW50RGF0ZSA9IHN0YXJ0T2ZEYXkocGxhbm5lZFRyaXAuc3RhcnREYXRlKVxuICAgIGNvbnN0IGVuZERhdGUgPSBzdGFydE9mRGF5KHBsYW5uZWRUcmlwLmVuZERhdGUpXG4gICAgXG4gICAgbGV0IG1heFZpb2xhdGlvbiA9IDBcbiAgICBsZXQgdmlvbGF0aW9uRGF0ZTogRGF0ZSB8IG51bGwgPSBudWxsXG4gICAgXG4gICAgd2hpbGUgKGN1cnJlbnREYXRlIDw9IGVuZERhdGUpIHtcbiAgICAgIGNvbnN0IGRheXNJbldpbmRvdyA9IHRoaXMuY2FsY3VsYXRlRGF5c0luV2luZG93KGFsbFRyaXBzLCBjdXJyZW50RGF0ZSlcbiAgICAgIGNvbnN0IG92ZXJzdGF5ID0gTWF0aC5tYXgoMCwgZGF5c0luV2luZG93IC0gdGhpcy5NQVhfREFZU19JTl9QRVJJT0QpXG4gICAgICBcbiAgICAgIGlmIChvdmVyc3RheSA+IG1heFZpb2xhdGlvbikge1xuICAgICAgICBtYXhWaW9sYXRpb24gPSBvdmVyc3RheVxuICAgICAgICB2aW9sYXRpb25EYXRlID0gbmV3IERhdGUoY3VycmVudERhdGUpXG4gICAgICB9XG4gICAgICBcbiAgICAgIGN1cnJlbnREYXRlID0gYWRkRGF5cyhjdXJyZW50RGF0ZSwgMSlcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IG1heFZpb2xhdGlvbiA9PT0gMCxcbiAgICAgIHZpb2xhdGlvbkRheXM6IG1heFZpb2xhdGlvbixcbiAgICAgIHZpb2xhdGlvbkRhdGVcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRmluZCB0aGUgbGF0ZXN0IGRhdGUgd2hlbiBhIHRyaXAgb2Ygc3BlY2lmaWVkIGxlbmd0aCBjb3VsZCBzdGFydCB3aXRob3V0IHZpb2xhdGlvblxuICAgKi9cbiAgc3RhdGljIGZpbmRMYXRlc3RWYWxpZFN0YXJ0RGF0ZShcbiAgICBleGlzdGluZ1RyaXBzOiBUcmlwW10sXG4gICAgdHJpcExlbmd0aDogbnVtYmVyLFxuICAgIGVhcmxpZXN0U3RhcnQ6IERhdGUsXG4gICAgbGF0ZXN0U3RhcnQ6IERhdGVcbiAgKTogRGF0ZSB8IG51bGwge1xuICAgIGxldCB0ZXN0RGF0ZSA9IHN0YXJ0T2ZEYXkobGF0ZXN0U3RhcnQpXG4gICAgY29uc3QgbWluRGF0ZSA9IHN0YXJ0T2ZEYXkoZWFybGllc3RTdGFydClcbiAgICBcbiAgICB3aGlsZSAodGVzdERhdGUgPj0gbWluRGF0ZSkge1xuICAgICAgY29uc3QgdGVzdFRyaXA6IFRyaXAgPSB7XG4gICAgICAgIGlkOiAndGVzdCcsXG4gICAgICAgIGNvdW50cnk6ICdURVNUJyxcbiAgICAgICAgc3RhcnREYXRlOiB0ZXN0RGF0ZSxcbiAgICAgICAgZW5kRGF0ZTogYWRkRGF5cyh0ZXN0RGF0ZSwgdHJpcExlbmd0aCAtIDEpLFxuICAgICAgICBkYXlzOiB0cmlwTGVuZ3RoXG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnN0IHZhbGlkYXRpb24gPSB0aGlzLnZhbGlkYXRlUGxhbm5lZFRyaXAoZXhpc3RpbmdUcmlwcywgdGVzdFRyaXApXG4gICAgICBpZiAodmFsaWRhdGlvbi5pc1ZhbGlkKSB7XG4gICAgICAgIHJldHVybiB0ZXN0RGF0ZVxuICAgICAgfVxuICAgICAgXG4gICAgICB0ZXN0RGF0ZSA9IHN1YkRheXModGVzdERhdGUsIDEpXG4gICAgfVxuICAgIFxuICAgIHJldHVybiBudWxsXG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlIG1heGltdW0gY29uc2VjdXRpdmUgZGF5cyBhdmFpbGFibGUgZnJvbSBhIHN0YXJ0IGRhdGVcbiAgICovXG4gIHN0YXRpYyBjYWxjdWxhdGVNYXhDb25zZWN1dGl2ZURheXMoZXhpc3RpbmdUcmlwczogVHJpcFtdLCBzdGFydERhdGU6IERhdGUpOiBudW1iZXIge1xuICAgIGxldCBtYXhEYXlzID0gMFxuICAgIGxldCB0ZXN0TGVuZ3RoID0gMVxuICAgIGNvbnN0IG1heFRlc3RMZW5ndGggPSAxMDAgLy8gU2FmZXR5IGxpbWl0XG4gICAgXG4gICAgd2hpbGUgKHRlc3RMZW5ndGggPD0gbWF4VGVzdExlbmd0aCkge1xuICAgICAgY29uc3QgdGVzdFRyaXA6IFRyaXAgPSB7XG4gICAgICAgIGlkOiAndGVzdCcsXG4gICAgICAgIGNvdW50cnk6ICdURVNUJyxcbiAgICAgICAgc3RhcnREYXRlOiBzdGFydE9mRGF5KHN0YXJ0RGF0ZSksXG4gICAgICAgIGVuZERhdGU6IGFkZERheXMoc3RhcnRPZkRheShzdGFydERhdGUpLCB0ZXN0TGVuZ3RoIC0gMSksXG4gICAgICAgIGRheXM6IHRlc3RMZW5ndGhcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgdmFsaWRhdGlvbiA9IHRoaXMudmFsaWRhdGVQbGFubmVkVHJpcChleGlzdGluZ1RyaXBzLCB0ZXN0VHJpcClcbiAgICAgIGlmICh2YWxpZGF0aW9uLmlzVmFsaWQpIHtcbiAgICAgICAgbWF4RGF5cyA9IHRlc3RMZW5ndGhcbiAgICAgICAgdGVzdExlbmd0aCsrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gTWF0aC5taW4obWF4RGF5cywgdGhpcy5NQVhfREFZU19JTl9QRVJJT0QpXG4gIH1cblxuICAvKipcbiAgICogQ29tcHJlaGVuc2l2ZSB0cmlwIHZhbGlkYXRpb25cbiAgICovXG4gIHN0YXRpYyB2YWxpZGF0ZVRyaXBzKHRyaXBzOiBUcmlwW10pOiBUcmlwVmFsaWRhdGlvblJlc3VsdCB7XG4gICAgY29uc3QgZXJyb3JzOiBWYWxpZGF0aW9uRXJyb3JbXSA9IFtdXG4gICAgY29uc3Qgd2FybmluZ3M6IFZhbGlkYXRpb25FcnJvcltdID0gW11cbiAgICBjb25zdCBzZWVuSWRzID0gbmV3IFNldDxzdHJpbmc+KClcblxuICAgIHRyaXBzLmZvckVhY2goKHRyaXAsIGluZGV4KSA9PiB7XG4gICAgICAvLyBDaGVjayBmb3IgZHVwbGljYXRlIElEc1xuICAgICAgaWYgKHNlZW5JZHMuaGFzKHRyaXAuaWQpKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgICBmaWVsZDogJ2lkJyxcbiAgICAgICAgICBtZXNzYWdlOiBgRHVwbGljYXRlIHRyaXAgSUQ6ICR7dHJpcC5pZH1gLFxuICAgICAgICAgIHNldmVyaXR5OiAnRVJST1InLFxuICAgICAgICAgIHRyaXBJZDogdHJpcC5pZFxuICAgICAgICB9KVxuICAgICAgfVxuICAgICAgc2Vlbklkcy5hZGQodHJpcC5pZClcblxuICAgICAgLy8gUmVxdWlyZWQgZmllbGRzXG4gICAgICBpZiAoIXRyaXAuaWQgfHwgdHJpcC5pZC50cmltKCkgPT09ICcnKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgICBmaWVsZDogJ2lkJyxcbiAgICAgICAgICBtZXNzYWdlOiBgVHJpcCBhdCBpbmRleCAke2luZGV4fSBpcyBtaXNzaW5nIGFuIElEYCxcbiAgICAgICAgICBzZXZlcml0eTogJ0VSUk9SJ1xuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICBpZiAoIXRyaXAuY291bnRyeSB8fCB0cmlwLmNvdW50cnkudHJpbSgpID09PSAnJykge1xuICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgZmllbGQ6ICdjb3VudHJ5JyxcbiAgICAgICAgICBtZXNzYWdlOiAnQ291bnRyeSBpcyByZXF1aXJlZCcsXG4gICAgICAgICAgc2V2ZXJpdHk6ICdFUlJPUicsXG4gICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIGlmICghdHJpcC5zdGFydERhdGUpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgIGZpZWxkOiAnc3RhcnREYXRlJyxcbiAgICAgICAgICBtZXNzYWdlOiAnU3RhcnQgZGF0ZSBpcyByZXF1aXJlZCcsXG4gICAgICAgICAgc2V2ZXJpdHk6ICdFUlJPUicsXG4gICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIGlmICghdHJpcC5lbmREYXRlKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgICBmaWVsZDogJ2VuZERhdGUnLFxuICAgICAgICAgIG1lc3NhZ2U6ICdFbmQgZGF0ZSBpcyByZXF1aXJlZCcsXG4gICAgICAgICAgc2V2ZXJpdHk6ICdFUlJPUicsXG4gICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIC8vIERhdGUgdmFsaWRhdGlvblxuICAgICAgaWYgKHRyaXAuc3RhcnREYXRlICYmIHRyaXAuZW5kRGF0ZSkge1xuICAgICAgICBpZiAodHJpcC5zdGFydERhdGUgPiB0cmlwLmVuZERhdGUpIHtcbiAgICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgICBmaWVsZDogJ2RhdGVzJyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdTdGFydCBkYXRlIG11c3QgYmUgYmVmb3JlIG9yIGVxdWFsIHRvIGVuZCBkYXRlJyxcbiAgICAgICAgICAgIHNldmVyaXR5OiAnRVJST1InLFxuICAgICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gZGlmZmVyZW5jZUluRGF5cyh0cmlwLmVuZERhdGUsIHRyaXAuc3RhcnREYXRlKSArIDFcbiAgICAgICAgXG4gICAgICAgIGlmIChkdXJhdGlvbiA+IHRoaXMuTUFYX0RBWVNfSU5fUEVSSU9EKSB7XG4gICAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgZmllbGQ6ICdkdXJhdGlvbicsXG4gICAgICAgICAgICBtZXNzYWdlOiBgVHJpcCBkdXJhdGlvbiAoJHtkdXJhdGlvbn0gZGF5cykgZXhjZWVkcyBtYXhpbXVtIGFsbG93ZWQgY29uc2VjdXRpdmUgc3RheSAoJHt0aGlzLk1BWF9EQVlTX0lOX1BFUklPRH0gZGF5cylgLFxuICAgICAgICAgICAgc2V2ZXJpdHk6ICdFUlJPUicsXG4gICAgICAgICAgICB0cmlwSWQ6IHRyaXAuaWRcbiAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGR1cmF0aW9uIDwgMSkge1xuICAgICAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgICAgIGZpZWxkOiAnZHVyYXRpb24nLFxuICAgICAgICAgICAgbWVzc2FnZTogJ1RyaXAgbXVzdCBiZSBhdCBsZWFzdCAxIGRheSBsb25nJyxcbiAgICAgICAgICAgIHNldmVyaXR5OiAnRVJST1InLFxuICAgICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGZvciB1bnJlYXNvbmFibGUgZGF0ZXNcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxuICAgICAgICBjb25zdCB0ZW5ZZWFyc0FnbyA9IHN1YkRheXMobm93LCAzNjUgKiAxMClcbiAgICAgICAgY29uc3QgZml2ZVllYXJzRnJvbU5vdyA9IGFkZERheXMobm93LCAzNjUgKiA1KVxuXG4gICAgICAgIGlmICh0cmlwLnN0YXJ0RGF0ZSA8IHRlblllYXJzQWdvKSB7XG4gICAgICAgICAgd2FybmluZ3MucHVzaCh7XG4gICAgICAgICAgICBmaWVsZDogJ3N0YXJ0RGF0ZScsXG4gICAgICAgICAgICBtZXNzYWdlOiAnU3RhcnQgZGF0ZSBzZWVtcyB1bnJlYXNvbmFibHkgZmFyIGluIHRoZSBwYXN0JyxcbiAgICAgICAgICAgIHNldmVyaXR5OiAnV0FSTklORycsXG4gICAgICAgICAgICB0cmlwSWQ6IHRyaXAuaWRcbiAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyaXAuZW5kRGF0ZSA+IGZpdmVZZWFyc0Zyb21Ob3cpIHtcbiAgICAgICAgICB3YXJuaW5ncy5wdXNoKHtcbiAgICAgICAgICAgIGZpZWxkOiAnZW5kRGF0ZScsXG4gICAgICAgICAgICBtZXNzYWdlOiAnRW5kIGRhdGUgc2VlbXMgdW5yZWFzb25hYmx5IGZhciBpbiB0aGUgZnV0dXJlJyxcbiAgICAgICAgICAgIHNldmVyaXR5OiAnV0FSTklORycsXG4gICAgICAgICAgICB0cmlwSWQ6IHRyaXAuaWRcbiAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgZm9yIGNvbnNpc3RlbmN5IHdpdGggZGF5cyBmaWVsZFxuICAgICAgICBpZiAodHJpcC5kYXlzICYmIE1hdGguYWJzKHRyaXAuZGF5cyAtIGR1cmF0aW9uKSA+IDApIHtcbiAgICAgICAgICB3YXJuaW5ncy5wdXNoKHtcbiAgICAgICAgICAgIGZpZWxkOiAnZGF5cycsXG4gICAgICAgICAgICBtZXNzYWdlOiBgRGF5cyBmaWVsZCAoJHt0cmlwLmRheXN9KSBkb2Vzbid0IG1hdGNoIGNhbGN1bGF0ZWQgZHVyYXRpb24gKCR7ZHVyYXRpb259KWAsXG4gICAgICAgICAgICBzZXZlcml0eTogJ1dBUk5JTkcnLFxuICAgICAgICAgICAgdHJpcElkOiB0cmlwLmlkXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICAvLyBDaGVjayBmb3Igb3ZlcmxhcHBpbmcgdHJpcHMgKHNhbWUgZGF0ZXMpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmlwcy5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IGkgKyAxOyBqIDwgdHJpcHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3QgdHJpcDEgPSB0cmlwc1tpXVxuICAgICAgICBjb25zdCB0cmlwMiA9IHRyaXBzW2pdXG4gICAgICAgIFxuICAgICAgICBpZiAoIXRyaXAxLnN0YXJ0RGF0ZSB8fCAhdHJpcDEuZW5kRGF0ZSB8fCAhdHJpcDIuc3RhcnREYXRlIHx8ICF0cmlwMi5lbmREYXRlKSBjb250aW51ZVxuXG4gICAgICAgIC8vIENoZWNrIGlmIHRyaXBzIG92ZXJsYXBcbiAgICAgICAgY29uc3Qgb3ZlcmxhcCA9ICEodHJpcDEuZW5kRGF0ZSA8IHRyaXAyLnN0YXJ0RGF0ZSB8fCB0cmlwMi5lbmREYXRlIDwgdHJpcDEuc3RhcnREYXRlKVxuICAgICAgICBcbiAgICAgICAgaWYgKG92ZXJsYXApIHtcbiAgICAgICAgICB3YXJuaW5ncy5wdXNoKHtcbiAgICAgICAgICAgIGZpZWxkOiAnZGF0ZXMnLFxuICAgICAgICAgICAgbWVzc2FnZTogYFRyaXAgJHt0cmlwMS5pZH0gb3ZlcmxhcHMgd2l0aCB0cmlwICR7dHJpcDIuaWR9LiBUaGlzIG1heSBiZSBpbnRlbnRpb25hbCBmb3Igc2FtZS1kYXkgdHJhdmVsIGJldHdlZW4gY291bnRyaWVzLmAsXG4gICAgICAgICAgICBzZXZlcml0eTogJ1dBUk5JTkcnLFxuICAgICAgICAgICAgdHJpcElkOiB0cmlwMS5pZFxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICAgIGVycm9ycyxcbiAgICAgIHdhcm5pbmdzXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldCBuZXh0IGRhdGUgd2hlbiBkYXlzIHdpbGwgXCJyb2xsIG9mZlwiIHRoZSB3aW5kb3dcbiAgICovXG4gIHN0YXRpYyBnZXROZXh0UmVzZXREYXRlKHRyaXBzOiBUcmlwW10sIHJlZmVyZW5jZURhdGU6IERhdGUgPSBuZXcgRGF0ZSgpKTogRGF0ZSB8IG51bGwge1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRSZWZEYXRlID0gc3RhcnRPZkRheShyZWZlcmVuY2VEYXRlKVxuICAgIGNvbnN0IGN1cnJlbnRXaW5kb3cgPSBzdWJEYXlzKG5vcm1hbGl6ZWRSZWZEYXRlLCB0aGlzLlJPTExJTkdfUEVSSU9EX0RBWVMgLSAxKVxuICAgIFxuICAgIC8vIEZpbmQgdGhlIGVhcmxpZXN0IHRyaXAgZGF5IHRoYXQgYWZmZWN0cyB0aGUgY3VycmVudCB3aW5kb3dcbiAgICBsZXQgZWFybGllc3RSZWxldmFudERhdGU6IERhdGUgfCBudWxsID0gbnVsbFxuICAgIFxuICAgIGZvciAoY29uc3QgdHJpcCBvZiB0cmlwcykge1xuICAgICAgbGV0IGNoZWNrRGF0ZSA9IHN0YXJ0T2ZEYXkodHJpcC5zdGFydERhdGUpXG4gICAgICBjb25zdCBlbmREYXRlID0gc3RhcnRPZkRheSh0cmlwLmVuZERhdGUpXG4gICAgICBcbiAgICAgIHdoaWxlIChjaGVja0RhdGUgPD0gZW5kRGF0ZSkge1xuICAgICAgICBpZiAoY2hlY2tEYXRlID49IGN1cnJlbnRXaW5kb3cgJiYgY2hlY2tEYXRlIDw9IG5vcm1hbGl6ZWRSZWZEYXRlKSB7XG4gICAgICAgICAgaWYgKCFlYXJsaWVzdFJlbGV2YW50RGF0ZSB8fCBjaGVja0RhdGUgPCBlYXJsaWVzdFJlbGV2YW50RGF0ZSkge1xuICAgICAgICAgICAgZWFybGllc3RSZWxldmFudERhdGUgPSBjaGVja0RhdGVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2hlY2tEYXRlID0gYWRkRGF5cyhjaGVja0RhdGUsIDEpXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmICghZWFybGllc3RSZWxldmFudERhdGUpIHJldHVybiBudWxsXG4gICAgXG4gICAgLy8gVGhlIHJlc2V0IGRhdGUgaXMgMTgwIGRheXMgYWZ0ZXIgdGhlIGVhcmxpZXN0IHJlbGV2YW50IGRhdGVcbiAgICByZXR1cm4gYWRkRGF5cyhlYXJsaWVzdFJlbGV2YW50RGF0ZSwgdGhpcy5ST0xMSU5HX1BFUklPRF9EQVlTKVxuICB9XG5cbiAgLyoqXG4gICAqIERlYnVnIGZ1bmN0aW9uIHRvIHZpc3VhbGl6ZSByb2xsaW5nIHdpbmRvdyBjYWxjdWxhdGlvbnNcbiAgICovXG4gIHN0YXRpYyBkZWJ1Z1JvbGxpbmdXaW5kb3codHJpcHM6IFRyaXBbXSwgcmVmZXJlbmNlRGF0ZTogRGF0ZSk6IGFueSB7XG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5jYWxjdWxhdGVFeGFjdENvbXBsaWFuY2UodHJpcHMsIHJlZmVyZW5jZURhdGUpXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1bW1hcnk6IHtcbiAgICAgICAgdG90YWxEYXlzVXNlZDogcmVzdWx0LnRvdGFsRGF5c1VzZWQsXG4gICAgICAgIGRheXNSZW1haW5pbmc6IHJlc3VsdC5kYXlzUmVtYWluaW5nLFxuICAgICAgICBpc0NvbXBsaWFudDogcmVzdWx0LmlzQ29tcGxpYW50LFxuICAgICAgICBvdmVyc3RheURheXM6IHJlc3VsdC5vdmVyc3RheURheXMsXG4gICAgICAgIHBlcmlvZFN0YXJ0OiByZXN1bHQucGVyaW9kU3RhcnQsXG4gICAgICAgIHBlcmlvZEVuZDogcmVzdWx0LnBlcmlvZEVuZFxuICAgICAgfSxcbiAgICAgIHRyaXBzSW5QZXJpb2Q6IHRyaXBzLmZpbHRlcih0cmlwID0+IFxuICAgICAgICB0cmlwLmVuZERhdGUgPj0gcmVzdWx0LnBlcmlvZFN0YXJ0ICYmIHRyaXAuc3RhcnREYXRlIDw9IHJlc3VsdC5wZXJpb2RFbmRcbiAgICAgICksXG4gICAgICBkYWlseUJyZWFrZG93bjogcmVzdWx0LmRldGFpbGVkQnJlYWtkb3duLmZpbHRlcihkYXkgPT4gZGF5LmRheXNVc2VkT25EYXRlID4gMCksXG4gICAgICB2aW9sYXRpb25zOiByZXN1bHQuZGV0YWlsZWRCcmVha2Rvd24uZmlsdGVyKGRheSA9PiBkYXkuaXNWaW9sYXRpb24pLFxuICAgICAgbmV4dFJlc2V0RGF0ZTogdGhpcy5nZXROZXh0UmVzZXREYXRlKHRyaXBzLCByZWZlcmVuY2VEYXRlKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZSBhbmQgbm9ybWFsaXplIHRyaXAgZGF0YSB3aXRoIGVycm9yIGhhbmRsaW5nXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyB2YWxpZGF0ZUFuZE5vcm1hbGl6ZVRyaXBzKHRyaXBzOiBUcmlwW10pOiBUcmlwW10ge1xuICAgIC8vIFJ1biB2YWxpZGF0aW9uIGJ1dCBwcm9jZWVkIHdpdGggZmlsdGVyaW5nXG4gICAgY29uc3QgdmFsaWRhdGlvblJlc3VsdCA9IHRoaXMudmFsaWRhdGVUcmlwcyh0cmlwcylcbiAgICBjb25zdCBjcml0aWNhbEVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHQuZXJyb3JzXG4gICAgXG4gICAgaWYgKGNyaXRpY2FsRXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnNvbGUud2FybignQ3JpdGljYWwgdmFsaWRhdGlvbiBlcnJvcnMgZm91bmQ6JywgY3JpdGljYWxFcnJvcnMpXG4gICAgfVxuXG4gICAgcmV0dXJuIHRyaXBzXG4gICAgICAuZmlsdGVyKHRyaXAgPT4ge1xuICAgICAgICAvLyBPbmx5IGluY2x1ZGUgdHJpcHMgdGhhdCBwYXNzIGJhc2ljIHZhbGlkYXRpb25cbiAgICAgICAgaWYgKCF0cmlwLnN0YXJ0RGF0ZSB8fCAhdHJpcC5lbmREYXRlIHx8ICF0cmlwLmNvdW50cnkpIHJldHVybiBmYWxzZVxuICAgICAgICBcbiAgICAgICAgLy8gRW5oYW5jZWQgZGF0ZSB2YWxpZGF0aW9uXG4gICAgICAgIGlmICghaXNWYWxpZCh0cmlwLnN0YXJ0RGF0ZSkgfHwgIWlzVmFsaWQodHJpcC5lbmREYXRlKSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihgVHJpcCAke3RyaXAuaWR9IGhhcyBpbnZhbGlkIGRhdGVzYClcbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHRyaXAuc3RhcnREYXRlID4gdHJpcC5lbmREYXRlKSByZXR1cm4gZmFsc2VcbiAgICAgICAgXG4gICAgICAgIC8vIEZpbHRlciBvdXQgdHJpcHMgd2l0aCBleGNlc3NpdmUgZHVyYXRpb25cbiAgICAgICAgY29uc3QgZHVyYXRpb24gPSBkaWZmZXJlbmNlSW5EYXlzKHRyaXAuZW5kRGF0ZSwgdHJpcC5zdGFydERhdGUpICsgMVxuICAgICAgICBpZiAoZHVyYXRpb24gPiB0aGlzLk1BWF9EQVlTX0lOX1BFUklPRCkgcmV0dXJuIGZhbHNlXG4gICAgICAgIFxuICAgICAgICAvLyBGaWx0ZXIgb3V0IHRyaXBzIHdpdGggdW5yZWFzb25hYmxlIGRhdGVzXG4gICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKClcbiAgICAgICAgY29uc3QgdmVyeU9sZCA9IHN1YkRheXMobm93LCAzNjUgKiAyMCkgLy8gMjAgeWVhcnMgYWdvXG4gICAgICAgIGNvbnN0IHZlcnlGdXR1cmUgPSBhZGREYXlzKG5vdywgMzY1ICogMTApIC8vIDEwIHllYXJzIGluIGZ1dHVyZVxuICAgICAgICBcbiAgICAgICAgaWYgKHRyaXAuZW5kRGF0ZSA8IHZlcnlPbGQgfHwgdHJpcC5zdGFydERhdGUgPiB2ZXJ5RnV0dXJlKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKGBUcmlwICR7dHJpcC5pZH0gaGFzIHVucmVhc29uYWJsZSBkYXRlc2ApXG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9KVxuICAgICAgLm1hcCh0cmlwID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBub3JtYWxpemVkVHJpcCA9IHtcbiAgICAgICAgICAgIC4uLnRyaXAsXG4gICAgICAgICAgICBzdGFydERhdGU6IHRoaXMubm9ybWFsaXplVG9TdGFydE9mRGF5KHRyaXAuc3RhcnREYXRlKSxcbiAgICAgICAgICAgIGVuZERhdGU6IHRoaXMubm9ybWFsaXplVG9TdGFydE9mRGF5KHRyaXAuZW5kRGF0ZSksXG4gICAgICAgICAgICBkYXlzOiBkaWZmZXJlbmNlSW5EYXlzKHRyaXAuZW5kRGF0ZSwgdHJpcC5zdGFydERhdGUpICsgMVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBWYWxpZGF0ZSBub3JtYWxpemVkIGRhdGVzXG4gICAgICAgICAgaWYgKCFpc1ZhbGlkKG5vcm1hbGl6ZWRUcmlwLnN0YXJ0RGF0ZSkgfHwgIWlzVmFsaWQobm9ybWFsaXplZFRyaXAuZW5kRGF0ZSkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgZGF0ZXMgYWZ0ZXIgbm9ybWFsaXphdGlvbiBmb3IgdHJpcCAke3RyaXAuaWR9YClcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIENoZWNrIGZvciBsZWFwIHllYXIgZWRnZSBjYXNlcyBpbiB0cmlwIGR1cmF0aW9uXG4gICAgICAgICAgY29uc3QgaGFzTGVhcERheSA9IHRoaXMudHJpcENyb3NzZXNMZWFwRGF5KG5vcm1hbGl6ZWRUcmlwLnN0YXJ0RGF0ZSwgbm9ybWFsaXplZFRyaXAuZW5kRGF0ZSlcbiAgICAgICAgICBpZiAoaGFzTGVhcERheSkge1xuICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhgVHJpcCAke3RyaXAuaWR9IGNyb3NzZXMgbGVhcCBkYXlgKVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4gbm9ybWFsaXplZFRyaXBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBub3JtYWxpemluZyB0cmlwICR7dHJpcC5pZH06YCwgZXJyb3IpXG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5maWx0ZXIoKHRyaXApOiB0cmlwIGlzIFRyaXAgPT4gdHJpcCAhPT0gbnVsbClcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBhLnN0YXJ0RGF0ZS5nZXRUaW1lKCkgLSBiLnN0YXJ0RGF0ZS5nZXRUaW1lKCkpXG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGEgbWFwIG9mIGRhaWx5IHN0YXlzIGZvciBlZmZpY2llbnQgbG9va3VwXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBjcmVhdGVEYWlseVN0YXlNYXAoXG4gICAgdHJpcHM6IFRyaXBbXSxcbiAgICBwZXJpb2RTdGFydDogRGF0ZSxcbiAgICBwZXJpb2RFbmQ6IERhdGVcbiAgKTogTWFwPHN0cmluZywgc3RyaW5nW10+IHtcbiAgICBjb25zdCBkYWlseVN0YXlzID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZ1tdPigpXG4gICAgXG4gICAgZm9yIChjb25zdCB0cmlwIG9mIHRyaXBzKSB7XG4gICAgICAvLyBPbmx5IGNvbnNpZGVyIHRyaXBzIHRoYXQgb3ZlcmxhcCB3aXRoIG91ciBwZXJpb2RcbiAgICAgIGlmICh0cmlwLmVuZERhdGUgPCBwZXJpb2RTdGFydCB8fCB0cmlwLnN0YXJ0RGF0ZSA+IHBlcmlvZEVuZCkgY29udGludWVcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIHRoZSBhY3R1YWwgb3ZlcmxhcFxuICAgICAgY29uc3Qgb3ZlcmxhcFN0YXJ0ID0gdHJpcC5zdGFydERhdGUgPiBwZXJpb2RTdGFydCA/IHRyaXAuc3RhcnREYXRlIDogcGVyaW9kU3RhcnRcbiAgICAgIGNvbnN0IG92ZXJsYXBFbmQgPSB0cmlwLmVuZERhdGUgPCBwZXJpb2RFbmQgPyB0cmlwLmVuZERhdGUgOiBwZXJpb2RFbmRcbiAgICAgIFxuICAgICAgLy8gQWRkIGVhY2ggZGF5IG9mIHRoZSB0cmlwXG4gICAgICBsZXQgY3VycmVudERhdGUgPSBuZXcgRGF0ZShvdmVybGFwU3RhcnQpXG4gICAgICB3aGlsZSAoY3VycmVudERhdGUgPD0gb3ZlcmxhcEVuZCkge1xuICAgICAgICBjb25zdCBkYXRlS2V5ID0gY3VycmVudERhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXG4gICAgICAgIFxuICAgICAgICBpZiAoIWRhaWx5U3RheXMuaGFzKGRhdGVLZXkpKSB7XG4gICAgICAgICAgZGFpbHlTdGF5cy5zZXQoZGF0ZUtleSwgW10pXG4gICAgICAgIH1cbiAgICAgICAgZGFpbHlTdGF5cy5nZXQoZGF0ZUtleSkhLnB1c2godHJpcC5pZClcbiAgICAgICAgXG4gICAgICAgIGN1cnJlbnREYXRlID0gYWRkRGF5cyhjdXJyZW50RGF0ZSwgMSlcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGRhaWx5U3RheXNcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgcm9sbGluZyBjb21wbGlhbmNlIGNoZWNrIGZvciBldmVyeSBkYXkgaW4gdGhlIHBlcmlvZFxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgY2FsY3VsYXRlUm9sbGluZ0NvbXBsaWFuY2VGb3JBbGxEYXlzKFxuICAgIGRhaWx5U3RheXM6IE1hcDxzdHJpbmcsIHN0cmluZ1tdPixcbiAgICBwZXJpb2RTdGFydDogRGF0ZSxcbiAgICBwZXJpb2RFbmQ6IERhdGVcbiAgKTogUm9sbGluZ1dpbmRvd0NoZWNrW10ge1xuICAgIGNvbnN0IGNoZWNrczogUm9sbGluZ1dpbmRvd0NoZWNrW10gPSBbXVxuICAgIFxuICAgIGxldCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKHBlcmlvZFN0YXJ0KVxuICAgIHdoaWxlIChjdXJyZW50RGF0ZSA8PSBwZXJpb2RFbmQpIHtcbiAgICAgIGNvbnN0IHdpbmRvd1N0YXJ0ID0gc3ViRGF5cyhjdXJyZW50RGF0ZSwgdGhpcy5ST0xMSU5HX1BFUklPRF9EQVlTIC0gMSlcbiAgICAgIGNvbnN0IHdpbmRvd0VuZCA9IG5ldyBEYXRlKGN1cnJlbnREYXRlKVxuICAgICAgXG4gICAgICAvLyBDb3VudCBkYXlzIGluIHRoaXMgMTgwLWRheSB3aW5kb3dcbiAgICAgIGxldCBkYXlzSW5XaW5kb3cgPSAwXG4gICAgICBsZXQgY2hlY2tEYXRlID0gbmV3IERhdGUod2luZG93U3RhcnQpXG4gICAgICBcbiAgICAgIHdoaWxlIChjaGVja0RhdGUgPD0gd2luZG93RW5kKSB7XG4gICAgICAgIGNvbnN0IGRhdGVLZXkgPSBjaGVja0RhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXG4gICAgICAgIGlmIChkYWlseVN0YXlzLmhhcyhkYXRlS2V5KSkge1xuICAgICAgICAgIGRheXNJbldpbmRvdysrXG4gICAgICAgIH1cbiAgICAgICAgY2hlY2tEYXRlID0gYWRkRGF5cyhjaGVja0RhdGUsIDEpXG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnN0IG92ZXJzdGF5RGF5cyA9IE1hdGgubWF4KDAsIGRheXNJbldpbmRvdyAtIHRoaXMuTUFYX0RBWVNfSU5fUEVSSU9EKVxuICAgICAgXG4gICAgICBjaGVja3MucHVzaCh7XG4gICAgICAgIGRhdGU6IG5ldyBEYXRlKGN1cnJlbnREYXRlKSxcbiAgICAgICAgd2luZG93U3RhcnQ6IG5ldyBEYXRlKHdpbmRvd1N0YXJ0KSxcbiAgICAgICAgd2luZG93RW5kOiBuZXcgRGF0ZSh3aW5kb3dFbmQpLFxuICAgICAgICBkYXlzSW5XaW5kb3csXG4gICAgICAgIGlzQ29tcGxpYW50OiBvdmVyc3RheURheXMgPT09IDAsXG4gICAgICAgIG92ZXJzdGF5RGF5c1xuICAgICAgfSlcbiAgICAgIFxuICAgICAgY3VycmVudERhdGUgPSBhZGREYXlzKGN1cnJlbnREYXRlLCAxKVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY2hlY2tzXG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgZGV0YWlsZWQgZGF5LWJ5LWRheSBicmVha2Rvd25cbiAgICovXG4gIHByaXZhdGUgc3RhdGljIGdlbmVyYXRlRGV0YWlsZWRCcmVha2Rvd24oXG4gICAgZGFpbHlTdGF5czogTWFwPHN0cmluZywgc3RyaW5nW10+LFxuICAgIHJvbGxpbmdDaGVja3M6IFJvbGxpbmdXaW5kb3dDaGVja1tdLFxuICAgIHBlcmlvZFN0YXJ0OiBEYXRlLFxuICAgIHBlcmlvZEVuZDogRGF0ZVxuICApOiBEYXlCcmVha2Rvd25bXSB7XG4gICAgY29uc3QgYnJlYWtkb3duOiBEYXlCcmVha2Rvd25bXSA9IFtdXG4gICAgXG4gICAgbGV0IGN1cnJlbnREYXRlID0gbmV3IERhdGUocGVyaW9kU3RhcnQpXG4gICAgbGV0IGNoZWNrSW5kZXggPSAwXG4gICAgXG4gICAgd2hpbGUgKGN1cnJlbnREYXRlIDw9IHBlcmlvZEVuZCkge1xuICAgICAgY29uc3QgZGF0ZUtleSA9IGN1cnJlbnREYXRlLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXVxuICAgICAgY29uc3Qgc3RheXNPbkRhdGUgPSBkYWlseVN0YXlzLmdldChkYXRlS2V5KSB8fCBbXVxuICAgICAgY29uc3QgZGF5c1VzZWRPbkRhdGUgPSBzdGF5c09uRGF0ZS5sZW5ndGggPiAwID8gMSA6IDBcbiAgICAgIFxuICAgICAgY29uc3Qgcm9sbGluZ0NoZWNrID0gcm9sbGluZ0NoZWNrc1tjaGVja0luZGV4XVxuICAgICAgXG4gICAgICBicmVha2Rvd24ucHVzaCh7XG4gICAgICAgIGRhdGU6IG5ldyBEYXRlKGN1cnJlbnREYXRlKSxcbiAgICAgICAgZGF5c1VzZWRPbkRhdGUsXG4gICAgICAgIGN1bXVsYXRpdmVEYXlzSW5XaW5kb3c6IHJvbGxpbmdDaGVjay5kYXlzSW5XaW5kb3csXG4gICAgICAgIGlzVmlvbGF0aW9uOiAhcm9sbGluZ0NoZWNrLmlzQ29tcGxpYW50LFxuICAgICAgICBjb250cmlidXRpbmdUcmlwczogc3RheXNPbkRhdGVcbiAgICAgIH0pXG4gICAgICBcbiAgICAgIGN1cnJlbnREYXRlID0gYWRkRGF5cyhjdXJyZW50RGF0ZSwgMSlcbiAgICAgIGNoZWNrSW5kZXgrK1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gYnJlYWtkb3duXG4gIH1cblxuICAvKipcbiAgICogRW5oYW5jZWQgZGF0ZSBub3JtYWxpemF0aW9uIHdpdGggdGltZXpvbmUtYWdub3N0aWMgaGFuZGxpbmdcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIG5vcm1hbGl6ZVRvU3RhcnRPZkRheShkYXRlOiBEYXRlKTogRGF0ZSB7XG4gICAgLy8gVXNlIHN0YXJ0T2ZEYXkgYnV0IGVuc3VyZSB3ZSdyZSB3b3JraW5nIHdpdGggbG9jYWwgdGltZSBjb25zaXN0ZW50bHlcbiAgICBjb25zdCBub3JtYWxpemVkID0gc3RhcnRPZkRheShkYXRlKVxuICAgIFxuICAgIC8vIEFkZGl0aW9uYWwgdmFsaWRhdGlvbiBmb3IgZWRnZSBjYXNlc1xuICAgIGlmICghaXNWYWxpZChub3JtYWxpemVkKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gbm9ybWFsaXplIGRhdGU6ICR7ZGF0ZX1gKVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gbm9ybWFsaXplZFxuICB9XG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBwZXJpb2Qgc3RhcnQgd2l0aCBsZWFwIHllYXIgYXdhcmVuZXNzXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBjYWxjdWxhdGVQZXJpb2RTdGFydChyZWZlcmVuY2VEYXRlOiBEYXRlKTogRGF0ZSB7XG4gICAgLy8gU3RhbmRhcmQgMTgwLWRheSB3aW5kb3cgY2FsY3VsYXRpb25cbiAgICBjb25zdCBwZXJpb2RTdGFydCA9IHN1YkRheXMocmVmZXJlbmNlRGF0ZSwgdGhpcy5ST0xMSU5HX1BFUklPRF9EQVlTIC0gMSlcbiAgICBcbiAgICAvLyBWYWxpZGF0ZSB0aGUgY2FsY3VsYXRlZCBwZXJpb2Qgc3RhcnRcbiAgICBpZiAoIWlzVmFsaWQocGVyaW9kU3RhcnQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgcGVyaW9kIHN0YXJ0IGNhbGN1bGF0ZWQgZnJvbSByZWZlcmVuY2UgZGF0ZTogJHtmb3JtYXQocmVmZXJlbmNlRGF0ZSwgJ3l5eXktTU0tZGQnKX1gKVxuICAgIH1cbiAgICBcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBjcm9zc2luZyBsZWFwIHllYXIgYm91bmRhcmllcyBhbmQgbG9nIGZvciBhd2FyZW5lc3NcbiAgICBjb25zdCByZWZZZWFyID0gcmVmZXJlbmNlRGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgY29uc3Qgc3RhcnRZZWFyID0gcGVyaW9kU3RhcnQuZ2V0RnVsbFllYXIoKVxuICAgIFxuICAgIGlmIChyZWZZZWFyICE9PSBzdGFydFllYXIpIHtcbiAgICAgIGNvbnN0IGNyb3NzZXNMZWFwWWVhciA9IGlzTGVhcFllYXIocmVmWWVhcikgfHwgaXNMZWFwWWVhcihzdGFydFllYXIpXG4gICAgICBpZiAoY3Jvc3Nlc0xlYXBZZWFyKSB7XG4gICAgICAgIGNvbnNvbGUuZGVidWcoYDE4MC1kYXkgd2luZG93IGNyb3NzZXMgbGVhcCB5ZWFyIGJvdW5kYXJ5OiAke3N0YXJ0WWVhcn0tJHtyZWZZZWFyfWApXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBwZXJpb2RTdGFydFxuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGEgdHJpcCBjcm9zc2VzIEZlYnJ1YXJ5IDI5dGggaW4gYSBsZWFwIHllYXJcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIHRyaXBDcm9zc2VzTGVhcERheShzdGFydERhdGU6IERhdGUsIGVuZERhdGU6IERhdGUpOiBib29sZWFuIHtcbiAgICBjb25zdCBzdGFydFllYXIgPSBzdGFydERhdGUuZ2V0RnVsbFllYXIoKVxuICAgIGNvbnN0IGVuZFllYXIgPSBlbmREYXRlLmdldEZ1bGxZZWFyKClcbiAgICBcbiAgICAvLyBDaGVjayBlYWNoIHllYXIgdGhlIHRyaXAgc3BhbnNcbiAgICBmb3IgKGxldCB5ZWFyID0gc3RhcnRZZWFyOyB5ZWFyIDw9IGVuZFllYXI7IHllYXIrKykge1xuICAgICAgaWYgKGlzTGVhcFllYXIoeWVhcikpIHtcbiAgICAgICAgY29uc3QgbGVhcERheSA9IG5ldyBEYXRlKHllYXIsIDEsIDI5KSAvLyBGZWJydWFyeSAyOXRoXG4gICAgICAgIGlmIChsZWFwRGF5ID49IHN0YXJ0RGF0ZSAmJiBsZWFwRGF5IDw9IGVuZERhdGUpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBmYWxzZVxuICB9XG59IiwiaW1wb3J0IHsgaXNWYWxpZCwgc3RhcnRPZkRheSwgZW5kT2ZEYXksIGFyZUludGVydmFsc092ZXJsYXBwaW5nLCBkaWZmZXJlbmNlSW5EYXlzIH0gZnJvbSBcImRhdGUtZm5zXCJcbmltcG9ydCB0eXBlIHsgVHJpcCwgVmFsaWRhdGlvbkVycm9yIH0gZnJvbSAnLi4vdHlwZXMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZVJhbmdlIHtcbiAgc3RhcnQ6IERhdGVcbiAgZW5kOiBEYXRlXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvblJlc3VsdCB7XG4gIGlzVmFsaWQ6IGJvb2xlYW5cbiAgY29uZmxpY3RzOiBDb25mbGljdERldGFpbFtdXG4gIG1lc3NhZ2U6IHN0cmluZ1xuICBvY2N1cGllZERhdGVzOiBEYXRlW11cbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25mbGljdERldGFpbCB7XG4gIHRyaXBJZDogc3RyaW5nXG4gIHRyaXBDb3VudHJ5OiBzdHJpbmdcbiAgY29uZmxpY3RTdGFydDogRGF0ZVxuICBjb25mbGljdEVuZDogRGF0ZVxuICBvdmVybGFwRGF5czogbnVtYmVyXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3ZlcmxhcFByZXZlbnRpb25Db25maWcge1xuICBhbGxvd1NhbWVEYXlUcmF2ZWw6IGJvb2xlYW5cbiAgYWxsb3dCb3JkZXJUcmFuc2l0aW9uczogYm9vbGVhblxuICBzdHJpY3RNb2RlOiBib29sZWFuXG59XG5cbi8qKlxuICogRGF0ZSBPdmVybGFwIFZhbGlkYXRvciAtIFByZXZlbnRzIHNlbGVjdGlvbiBvZiBhbHJlYWR5IG9jY3VwaWVkIGRhdGVzXG4gKiBcbiAqIENvcmUgRmVhdHVyZXM6XG4gKiAxLiBEZXRlY3RzIGRhdGUgY29uZmxpY3RzIGJldHdlZW4gbmV3IGFuZCBleGlzdGluZyB0cmlwc1xuICogMi4gUHJvdmlkZXMgdmlzdWFsIGluZGljYXRvcnMgZm9yIG9jY3VwaWVkIGRhdGVzIChncmV5ICsgc3RyaWtldGhyb3VnaClcbiAqIDMuIFJldHVybnMgc3BlY2lmaWMgY29uZmxpY3QgZGV0YWlscyBmb3IgdXNlciBmZWVkYmFja1xuICogNC4gSGFuZGxlcyBlZGdlIGNhc2VzOiBzYW1lLWRheSB0cmF2ZWwsIGJvcmRlciB0cmFuc2l0aW9uc1xuICogNS4gTW9iaWxlLW9wdGltaXplZCB3aXRoIGxhcmdlciB0b3VjaCB0YXJnZXRzXG4gKi9cbmV4cG9ydCBjbGFzcyBEYXRlT3ZlcmxhcFZhbGlkYXRvciB7XG4gIHByaXZhdGUgY29uZmlnOiBPdmVybGFwUHJldmVudGlvbkNvbmZpZ1xuXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogUGFydGlhbDxPdmVybGFwUHJldmVudGlvbkNvbmZpZz4gPSB7fSkge1xuICAgIHRoaXMuY29uZmlnID0ge1xuICAgICAgYWxsb3dTYW1lRGF5VHJhdmVsOiB0cnVlLFxuICAgICAgYWxsb3dCb3JkZXJUcmFuc2l0aW9uczogdHJ1ZSxcbiAgICAgIHN0cmljdE1vZGU6IGZhbHNlLFxuICAgICAgLi4uY29uZmlnXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFZhbGlkYXRlIGlmIGEgZGF0ZSByYW5nZSBjb25mbGljdHMgd2l0aCBleGlzdGluZyB0cmlwc1xuICAgKi9cbiAgdmFsaWRhdGVEYXRlU3BhbihuZXdSYW5nZTogRGF0ZVJhbmdlLCBleGlzdGluZ1RyaXBzOiBUcmlwW10pOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgICAvLyBJbnB1dCB2YWxpZGF0aW9uXG4gICAgaWYgKCF0aGlzLmlzVmFsaWREYXRlUmFuZ2UobmV3UmFuZ2UpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgICAgY29uZmxpY3RzOiBbXSxcbiAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgZGF0ZSByYW5nZSBwcm92aWRlZCcsXG4gICAgICAgIG9jY3VwaWVkRGF0ZXM6IFtdXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTm9ybWFsaXplIGRhdGVzIHRvIHN0YXJ0L2VuZCBvZiBkYXkgZm9yIGNvbnNpc3RlbnQgY29tcGFyaXNvblxuICAgIGNvbnN0IG5vcm1hbGl6ZWROZXdSYW5nZSA9IHtcbiAgICAgIHN0YXJ0OiBzdGFydE9mRGF5KG5ld1JhbmdlLnN0YXJ0KSxcbiAgICAgIGVuZDogZW5kT2ZEYXkobmV3UmFuZ2UuZW5kKVxuICAgIH1cblxuICAgIGNvbnN0IGNvbmZsaWN0czogQ29uZmxpY3REZXRhaWxbXSA9IFtdXG4gICAgY29uc3Qgb2NjdXBpZWREYXRlczogRGF0ZVtdID0gW11cblxuICAgIC8vIENoZWNrIGVhY2ggZXhpc3RpbmcgdHJpcCBmb3IgY29uZmxpY3RzXG4gICAgZm9yIChjb25zdCB0cmlwIG9mIGV4aXN0aW5nVHJpcHMpIHtcbiAgICAgIGlmICghdGhpcy5pc1ZhbGlkVHJpcCh0cmlwKSkgY29udGludWVcblxuICAgICAgY29uc3QgdHJpcFJhbmdlID0ge1xuICAgICAgICBzdGFydDogc3RhcnRPZkRheSh0cmlwLnN0YXJ0RGF0ZSksXG4gICAgICAgIGVuZDogZW5kT2ZEYXkodHJpcC5lbmREYXRlKVxuICAgICAgfVxuXG4gICAgICAvLyBDaGVjayBmb3Igb3ZlcmxhcFxuICAgICAgY29uc3QgaGFzT3ZlcmxhcCA9IHRoaXMucmFuZ2VzT3ZlcmxhcChub3JtYWxpemVkTmV3UmFuZ2UsIHRyaXBSYW5nZSlcbiAgICAgIFxuICAgICAgaWYgKGhhc092ZXJsYXApIHtcbiAgICAgICAgY29uc3QgY29uZmxpY3REZXRhaWwgPSB0aGlzLmNhbGN1bGF0ZUNvbmZsaWN0RGV0YWlsKFxuICAgICAgICAgIG5vcm1hbGl6ZWROZXdSYW5nZSxcbiAgICAgICAgICB0cmlwUmFuZ2UsXG4gICAgICAgICAgdHJpcFxuICAgICAgICApXG5cbiAgICAgICAgLy8gQXBwbHkgY29uZmlndXJhdGlvbiBydWxlc1xuICAgICAgICBpZiAodGhpcy5zaG91bGRSZXBvcnRDb25mbGljdChjb25mbGljdERldGFpbCwgbm9ybWFsaXplZE5ld1JhbmdlLCB0cmlwUmFuZ2UpKSB7XG4gICAgICAgICAgY29uZmxpY3RzLnB1c2goY29uZmxpY3REZXRhaWwpXG4gICAgICAgIH1cblxuICAgICAgICAvLyBBZGQgb2NjdXBpZWQgZGF0ZXMgZm9yIHZpc3VhbCBpbmRpY2F0b3JzXG4gICAgICAgIHRoaXMuYWRkT2NjdXBpZWREYXRlc0Zyb21UcmlwKHRyaXAsIG9jY3VwaWVkRGF0ZXMpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gR2V0IGFsbCBvY2N1cGllZCBkYXRlcyBmb3IgY2FsZW5kYXIgbWFya2luZyAocmVnYXJkbGVzcyBvZiBjb25mbGljdHMpXG4gICAgY29uc3QgYWxsT2NjdXBpZWREYXRlcyA9IHRoaXMuZ2V0QWxsT2NjdXBpZWREYXRlcyhleGlzdGluZ1RyaXBzKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IGNvbmZsaWN0cy5sZW5ndGggPT09IDAsXG4gICAgICBjb25mbGljdHMsXG4gICAgICBtZXNzYWdlOiB0aGlzLmdlbmVyYXRlVmFsaWRhdGlvbk1lc3NhZ2UoY29uZmxpY3RzKSxcbiAgICAgIG9jY3VwaWVkRGF0ZXM6IGFsbE9jY3VwaWVkRGF0ZXNcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IGFsbCBvY2N1cGllZCBkYXRlcyBmcm9tIGV4aXN0aW5nIHRyaXBzIGZvciBjYWxlbmRhciBkaXNwbGF5XG4gICAqL1xuICBnZXRBbGxPY2N1cGllZERhdGVzKHRyaXBzOiBUcmlwW10pOiBEYXRlW10ge1xuICAgIGNvbnN0IG9jY3VwaWVkRGF0ZXM6IERhdGVbXSA9IFtdXG5cbiAgICBmb3IgKGNvbnN0IHRyaXAgb2YgdHJpcHMpIHtcbiAgICAgIGlmICghdGhpcy5pc1ZhbGlkVHJpcCh0cmlwKSkgY29udGludWVcbiAgICAgIHRoaXMuYWRkT2NjdXBpZWREYXRlc0Zyb21UcmlwKHRyaXAsIG9jY3VwaWVkRGF0ZXMpXG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIGR1cGxpY2F0ZXMgYW5kIHNvcnRcbiAgICByZXR1cm4gWy4uLm5ldyBTZXQob2NjdXBpZWREYXRlcy5tYXAoZCA9PiBkLmdldFRpbWUoKSkpXVxuICAgICAgLm1hcCh0aW1lID0+IG5ldyBEYXRlKHRpbWUpKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IGEuZ2V0VGltZSgpIC0gYi5nZXRUaW1lKCkpXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgYSBzcGVjaWZpYyBkYXRlIGlzIG9jY3VwaWVkIGJ5IGV4aXN0aW5nIHRyaXBzXG4gICAqL1xuICBpc0RhdGVPY2N1cGllZChkYXRlOiBEYXRlLCBleGlzdGluZ1RyaXBzOiBUcmlwW10pOiBib29sZWFuIHtcbiAgICBjb25zdCBub3JtYWxpemVkRGF0ZSA9IHN0YXJ0T2ZEYXkoZGF0ZSlcbiAgICBcbiAgICByZXR1cm4gZXhpc3RpbmdUcmlwcy5zb21lKHRyaXAgPT4ge1xuICAgICAgaWYgKCF0aGlzLmlzVmFsaWRUcmlwKHRyaXApKSByZXR1cm4gZmFsc2VcbiAgICAgIFxuICAgICAgY29uc3QgdHJpcFN0YXJ0ID0gc3RhcnRPZkRheSh0cmlwLnN0YXJ0RGF0ZSlcbiAgICAgIGNvbnN0IHRyaXBFbmQgPSBzdGFydE9mRGF5KHRyaXAuZW5kRGF0ZSlcbiAgICAgIFxuICAgICAgcmV0dXJuIG5vcm1hbGl6ZWREYXRlID49IHRyaXBTdGFydCAmJiBub3JtYWxpemVkRGF0ZSA8PSB0cmlwRW5kXG4gICAgfSlcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdHJpcHMgdGhhdCBvY2N1cHkgYSBzcGVjaWZpYyBkYXRlXG4gICAqL1xuICBnZXRUcmlwc09uRGF0ZShkYXRlOiBEYXRlLCBleGlzdGluZ1RyaXBzOiBUcmlwW10pOiBUcmlwW10ge1xuICAgIGNvbnN0IG5vcm1hbGl6ZWREYXRlID0gc3RhcnRPZkRheShkYXRlKVxuICAgIFxuICAgIHJldHVybiBleGlzdGluZ1RyaXBzLmZpbHRlcih0cmlwID0+IHtcbiAgICAgIGlmICghdGhpcy5pc1ZhbGlkVHJpcCh0cmlwKSkgcmV0dXJuIGZhbHNlXG4gICAgICBcbiAgICAgIGNvbnN0IHRyaXBTdGFydCA9IHN0YXJ0T2ZEYXkodHJpcC5zdGFydERhdGUpXG4gICAgICBjb25zdCB0cmlwRW5kID0gc3RhcnRPZkRheSh0cmlwLmVuZERhdGUpXG4gICAgICBcbiAgICAgIHJldHVybiBub3JtYWxpemVkRGF0ZSA+PSB0cmlwU3RhcnQgJiYgbm9ybWFsaXplZERhdGUgPD0gdHJpcEVuZFxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogRmluZCBuZXh0IGF2YWlsYWJsZSBkYXRlIHJhbmdlIG9mIHNwZWNpZmllZCBsZW5ndGhcbiAgICovXG4gIGZpbmROZXh0QXZhaWxhYmxlRGF0ZVNwYW4oXG4gICAgcHJlZmVycmVkU3RhcnQ6IERhdGUsXG4gICAgbGVuZ3RoSW5EYXlzOiBudW1iZXIsXG4gICAgZXhpc3RpbmdUcmlwczogVHJpcFtdLFxuICAgIHNlYXJjaExpbWl0OiBudW1iZXIgPSAzNjVcbiAgKTogRGF0ZVJhbmdlIHwgbnVsbCB7XG4gICAgbGV0IHRlc3REYXRlID0gc3RhcnRPZkRheShwcmVmZXJyZWRTdGFydClcbiAgICBjb25zdCBtYXhTZWFyY2hEYXRlID0gbmV3IERhdGUodGVzdERhdGUuZ2V0VGltZSgpICsgKHNlYXJjaExpbWl0ICogMjQgKiA2MCAqIDYwICogMTAwMCkpXG5cbiAgICB3aGlsZSAodGVzdERhdGUgPD0gbWF4U2VhcmNoRGF0ZSkge1xuICAgICAgY29uc3QgdGVzdFJhbmdlOiBEYXRlUmFuZ2UgPSB7XG4gICAgICAgIHN0YXJ0OiB0ZXN0RGF0ZSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh0ZXN0RGF0ZS5nZXRUaW1lKCkgKyAoKGxlbmd0aEluRGF5cyAtIDEpICogMjQgKiA2MCAqIDYwICogMTAwMCkpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHZhbGlkYXRpb24gPSB0aGlzLnZhbGlkYXRlRGF0ZVNwYW4odGVzdFJhbmdlLCBleGlzdGluZ1RyaXBzKVxuICAgICAgaWYgKHZhbGlkYXRpb24uaXNWYWxpZCkge1xuICAgICAgICByZXR1cm4gdGVzdFJhbmdlXG4gICAgICB9XG5cbiAgICAgIC8vIE1vdmUgdG8gbmV4dCBkYXlcbiAgICAgIHRlc3REYXRlID0gbmV3IERhdGUodGVzdERhdGUuZ2V0VGltZSgpICsgKDI0ICogNjAgKiA2MCAqIDEwMDApKVxuICAgIH1cblxuICAgIHJldHVybiBudWxsXG4gIH1cblxuICAvKipcbiAgICogU3VnZ2VzdCBhbHRlcm5hdGl2ZSBkYXRlcyB3aGVuIGNvbmZsaWN0cyBleGlzdFxuICAgKi9cbiAgc3VnZ2VzdEFsdGVybmF0aXZlRGF0ZXMoXG4gICAgY29uZmxpY3RlZFJhbmdlOiBEYXRlUmFuZ2UsXG4gICAgbGVuZ3RoSW5EYXlzOiBudW1iZXIsXG4gICAgZXhpc3RpbmdUcmlwczogVHJpcFtdXG4gICk6IERhdGVSYW5nZVtdIHtcbiAgICBjb25zdCBzdWdnZXN0aW9uczogRGF0ZVJhbmdlW10gPSBbXVxuICAgIGNvbnN0IGR1cmF0aW9uID0gbGVuZ3RoSW5EYXlzIHx8IGRpZmZlcmVuY2VJbkRheXMoY29uZmxpY3RlZFJhbmdlLmVuZCwgY29uZmxpY3RlZFJhbmdlLnN0YXJ0KSArIDFcblxuICAgIC8vIFRyeSBlYXJsaWVyIGRhdGVzXG4gICAgY29uc3QgZWFybGllckRhdGUgPSBuZXcgRGF0ZShjb25mbGljdGVkUmFuZ2Uuc3RhcnQuZ2V0VGltZSgpIC0gKDMwICogMjQgKiA2MCAqIDYwICogMTAwMCkpXG4gICAgY29uc3QgZWFybGllclJhbmdlID0gdGhpcy5maW5kTmV4dEF2YWlsYWJsZURhdGVTcGFuKGVhcmxpZXJEYXRlLCBkdXJhdGlvbiwgZXhpc3RpbmdUcmlwcywgNjApXG4gICAgaWYgKGVhcmxpZXJSYW5nZSAmJiBlYXJsaWVyUmFuZ2Uuc3RhcnQgPCBjb25mbGljdGVkUmFuZ2Uuc3RhcnQpIHtcbiAgICAgIHN1Z2dlc3Rpb25zLnB1c2goZWFybGllclJhbmdlKVxuICAgIH1cblxuICAgIC8vIFRyeSBsYXRlciBkYXRlc1xuICAgIGNvbnN0IGxhdGVyRGF0ZSA9IG5ldyBEYXRlKGNvbmZsaWN0ZWRSYW5nZS5lbmQuZ2V0VGltZSgpICsgKDI0ICogNjAgKiA2MCAqIDEwMDApKVxuICAgIGNvbnN0IGxhdGVyUmFuZ2UgPSB0aGlzLmZpbmROZXh0QXZhaWxhYmxlRGF0ZVNwYW4obGF0ZXJEYXRlLCBkdXJhdGlvbiwgZXhpc3RpbmdUcmlwcywgNjApXG4gICAgaWYgKGxhdGVyUmFuZ2UpIHtcbiAgICAgIHN1Z2dlc3Rpb25zLnB1c2gobGF0ZXJSYW5nZSlcbiAgICB9XG5cbiAgICByZXR1cm4gc3VnZ2VzdGlvbnMuc2xpY2UoMCwgMykgLy8gUmV0dXJuIG1heCAzIHN1Z2dlc3Rpb25zXG4gIH1cblxuICAvKipcbiAgICogQmF0Y2ggdmFsaWRhdGlvbiBmb3IgbXVsdGlwbGUgZGF0ZSByYW5nZXNcbiAgICovXG4gIHZhbGlkYXRlTXVsdGlwbGVEYXRlU3BhbnMoXG4gICAgbmV3UmFuZ2VzOiBEYXRlUmFuZ2VbXSxcbiAgICBleGlzdGluZ1RyaXBzOiBUcmlwW11cbiAgKTogeyBbaW5kZXg6IG51bWJlcl06IFZhbGlkYXRpb25SZXN1bHQgfSB7XG4gICAgY29uc3QgcmVzdWx0czogeyBbaW5kZXg6IG51bWJlcl06IFZhbGlkYXRpb25SZXN1bHQgfSA9IHt9XG5cbiAgICAvLyBDcmVhdGUgYSBjb21iaW5lZCBsaXN0IG9mIGV4aXN0aW5nIHRyaXBzIHBsdXMgdmFsaWRhdGVkIG5ldyB0cmlwc1xuICAgIGxldCBjb21iaW5lZFRyaXBzID0gWy4uLmV4aXN0aW5nVHJpcHNdXG5cbiAgICBuZXdSYW5nZXMuZm9yRWFjaCgocmFuZ2UsIGluZGV4KSA9PiB7XG4gICAgICAvLyBWYWxpZGF0ZSBhZ2FpbnN0IGV4aXN0aW5nIHRyaXBzIGFuZCBwcmV2aW91c2x5IHZhbGlkYXRlZCBuZXcgdHJpcHNcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMudmFsaWRhdGVEYXRlU3BhbihyYW5nZSwgY29tYmluZWRUcmlwcylcbiAgICAgIHJlc3VsdHNbaW5kZXhdID0gcmVzdWx0XG5cbiAgICAgIC8vIElmIHZhbGlkLCBhZGQgdG8gY29tYmluZWQgdHJpcHMgZm9yIG5leHQgdmFsaWRhdGlvbnNcbiAgICAgIGlmIChyZXN1bHQuaXNWYWxpZCkge1xuICAgICAgICBjb21iaW5lZFRyaXBzLnB1c2goe1xuICAgICAgICAgIGlkOiBgdGVtcC0ke2luZGV4fWAsXG4gICAgICAgICAgY291bnRyeTogJ1RFTVAnLFxuICAgICAgICAgIHN0YXJ0RGF0ZTogcmFuZ2Uuc3RhcnQsXG4gICAgICAgICAgZW5kRGF0ZTogcmFuZ2UuZW5kLFxuICAgICAgICAgIGRheXM6IGRpZmZlcmVuY2VJbkRheXMocmFuZ2UuZW5kLCByYW5nZS5zdGFydCkgKyAxXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiByZXN1bHRzXG4gIH1cblxuICAvKipcbiAgICogUHJpdmF0ZTogQ2hlY2sgaWYgdHdvIGRhdGUgcmFuZ2VzIG92ZXJsYXBcbiAgICovXG4gIHByaXZhdGUgcmFuZ2VzT3ZlcmxhcChyYW5nZTE6IERhdGVSYW5nZSwgcmFuZ2UyOiBEYXRlUmFuZ2UpOiBib29sZWFuIHtcbiAgICByZXR1cm4gYXJlSW50ZXJ2YWxzT3ZlcmxhcHBpbmcoXG4gICAgICB7IHN0YXJ0OiByYW5nZTEuc3RhcnQsIGVuZDogcmFuZ2UxLmVuZCB9LFxuICAgICAgeyBzdGFydDogcmFuZ2UyLnN0YXJ0LCBlbmQ6IHJhbmdlMi5lbmQgfVxuICAgIClcbiAgfVxuXG4gIC8qKlxuICAgKiBQcml2YXRlOiBDYWxjdWxhdGUgZGV0YWlsZWQgY29uZmxpY3QgaW5mb3JtYXRpb25cbiAgICovXG4gIHByaXZhdGUgY2FsY3VsYXRlQ29uZmxpY3REZXRhaWwoXG4gICAgbmV3UmFuZ2U6IERhdGVSYW5nZSxcbiAgICB0cmlwUmFuZ2U6IERhdGVSYW5nZSxcbiAgICB0cmlwOiBUcmlwXG4gICk6IENvbmZsaWN0RGV0YWlsIHtcbiAgICAvLyBDYWxjdWxhdGUgdGhlIGFjdHVhbCBvdmVybGFwIHBlcmlvZFxuICAgIGNvbnN0IGNvbmZsaWN0U3RhcnQgPSBuZXdSYW5nZS5zdGFydCA+IHRyaXBSYW5nZS5zdGFydCA/IG5ld1JhbmdlLnN0YXJ0IDogdHJpcFJhbmdlLnN0YXJ0XG4gICAgY29uc3QgY29uZmxpY3RFbmQgPSBuZXdSYW5nZS5lbmQgPCB0cmlwUmFuZ2UuZW5kID8gbmV3UmFuZ2UuZW5kIDogdHJpcFJhbmdlLmVuZFxuICAgIGNvbnN0IG92ZXJsYXBEYXlzID0gZGlmZmVyZW5jZUluRGF5cyhjb25mbGljdEVuZCwgY29uZmxpY3RTdGFydCkgKyAxXG5cbiAgICByZXR1cm4ge1xuICAgICAgdHJpcElkOiB0cmlwLmlkLFxuICAgICAgdHJpcENvdW50cnk6IHRyaXAuY291bnRyeSxcbiAgICAgIGNvbmZsaWN0U3RhcnQsXG4gICAgICBjb25mbGljdEVuZCxcbiAgICAgIG92ZXJsYXBEYXlzOiBNYXRoLm1heCgwLCBvdmVybGFwRGF5cylcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJpdmF0ZTogRGV0ZXJtaW5lIGlmIGNvbmZsaWN0IHNob3VsZCBiZSByZXBvcnRlZCBiYXNlZCBvbiBjb25maWd1cmF0aW9uXG4gICAqL1xuICBwcml2YXRlIHNob3VsZFJlcG9ydENvbmZsaWN0KFxuICAgIGNvbmZsaWN0OiBDb25mbGljdERldGFpbCxcbiAgICBuZXdSYW5nZTogRGF0ZVJhbmdlLFxuICAgIHRyaXBSYW5nZTogRGF0ZVJhbmdlXG4gICk6IGJvb2xlYW4ge1xuICAgIC8vIEluIHN0cmljdCBtb2RlLCByZXBvcnQgYWxsIGNvbmZsaWN0c1xuICAgIGlmICh0aGlzLmNvbmZpZy5zdHJpY3RNb2RlKSByZXR1cm4gdHJ1ZVxuXG4gICAgLy8gU2FtZS1kYXkgdHJhdmVsIGV4Y2VwdGlvblxuICAgIGlmICh0aGlzLmNvbmZpZy5hbGxvd1NhbWVEYXlUcmF2ZWwpIHtcbiAgICAgIGNvbnN0IGlzU2FtZURheVRyYW5zaXRpb24gPSBcbiAgICAgICAgKG5ld1JhbmdlLnN0YXJ0LmdldFRpbWUoKSA9PT0gdHJpcFJhbmdlLmVuZC5nZXRUaW1lKCkpIHx8XG4gICAgICAgIChuZXdSYW5nZS5lbmQuZ2V0VGltZSgpID09PSB0cmlwUmFuZ2Uuc3RhcnQuZ2V0VGltZSgpKVxuICAgICAgXG4gICAgICBpZiAoaXNTYW1lRGF5VHJhbnNpdGlvbikgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gQm9yZGVyIHRyYW5zaXRpb24gZXhjZXB0aW9uXG4gICAgaWYgKHRoaXMuY29uZmlnLmFsbG93Qm9yZGVyVHJhbnNpdGlvbnMgJiYgY29uZmxpY3Qub3ZlcmxhcERheXMgPD0gMSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8qKlxuICAgKiBQcml2YXRlOiBBZGQgb2NjdXBpZWQgZGF0ZXMgZnJvbSBhIHRyaXAgdG8gdGhlIG9jY3VwaWVkIGRhdGVzIGFycmF5XG4gICAqL1xuICBwcml2YXRlIGFkZE9jY3VwaWVkRGF0ZXNGcm9tVHJpcCh0cmlwOiBUcmlwLCBvY2N1cGllZERhdGVzOiBEYXRlW10pOiB2b2lkIHtcbiAgICBjb25zdCBzdGFydCA9IHN0YXJ0T2ZEYXkodHJpcC5zdGFydERhdGUpXG4gICAgY29uc3QgZW5kID0gc3RhcnRPZkRheSh0cmlwLmVuZERhdGUpXG4gICAgXG4gICAgbGV0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoc3RhcnQpXG4gICAgd2hpbGUgKGN1cnJlbnREYXRlIDw9IGVuZCkge1xuICAgICAgb2NjdXBpZWREYXRlcy5wdXNoKG5ldyBEYXRlKGN1cnJlbnREYXRlKSlcbiAgICAgIGN1cnJlbnREYXRlID0gbmV3IERhdGUoY3VycmVudERhdGUuZ2V0VGltZSgpICsgKDI0ICogNjAgKiA2MCAqIDEwMDApKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBQcml2YXRlOiBHZW5lcmF0ZSBodW1hbi1yZWFkYWJsZSB2YWxpZGF0aW9uIG1lc3NhZ2VcbiAgICovXG4gIHByaXZhdGUgZ2VuZXJhdGVWYWxpZGF0aW9uTWVzc2FnZShjb25mbGljdHM6IENvbmZsaWN0RGV0YWlsW10pOiBzdHJpbmcge1xuICAgIGlmIChjb25mbGljdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gJ0RhdGVzIGFyZSBhdmFpbGFibGUnXG4gICAgfVxuXG4gICAgaWYgKGNvbmZsaWN0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGNvbnN0IGNvbmZsaWN0ID0gY29uZmxpY3RzWzBdXG4gICAgICByZXR1cm4gYERhdGVzIG92ZXJsYXAgd2l0aCBleGlzdGluZyB0cmlwIHRvICR7Y29uZmxpY3QudHJpcENvdW50cnl9ICgke2NvbmZsaWN0Lm92ZXJsYXBEYXlzfSBkYXkke2NvbmZsaWN0Lm92ZXJsYXBEYXlzICE9PSAxID8gJ3MnIDogJyd9KWBcbiAgICB9XG5cbiAgICByZXR1cm4gYERhdGVzIGNvbmZsaWN0IHdpdGggJHtjb25mbGljdHMubGVuZ3RofSBleGlzdGluZyB0cmlwc2BcbiAgfVxuXG4gIC8qKlxuICAgKiBQcml2YXRlOiBWYWxpZGF0ZSBkYXRlIHJhbmdlIGlucHV0XG4gICAqL1xuICBwcml2YXRlIGlzVmFsaWREYXRlUmFuZ2UocmFuZ2U6IERhdGVSYW5nZSk6IGJvb2xlYW4ge1xuICAgIGlmICghcmFuZ2UgfHwgIXJhbmdlLnN0YXJ0IHx8ICFyYW5nZS5lbmQpIHJldHVybiBmYWxzZVxuICAgIGlmICghaXNWYWxpZChyYW5nZS5zdGFydCkgfHwgIWlzVmFsaWQocmFuZ2UuZW5kKSkgcmV0dXJuIGZhbHNlXG4gICAgaWYgKHJhbmdlLnN0YXJ0ID4gcmFuZ2UuZW5kKSByZXR1cm4gZmFsc2VcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgLyoqXG4gICAqIFByaXZhdGU6IFZhbGlkYXRlIHRyaXAgZGF0YVxuICAgKi9cbiAgcHJpdmF0ZSBpc1ZhbGlkVHJpcCh0cmlwOiBUcmlwKTogYm9vbGVhbiB7XG4gICAgaWYgKCF0cmlwIHx8ICF0cmlwLnN0YXJ0RGF0ZSB8fCAhdHJpcC5lbmREYXRlKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoIWlzVmFsaWQodHJpcC5zdGFydERhdGUpIHx8ICFpc1ZhbGlkKHRyaXAuZW5kRGF0ZSkpIHJldHVybiBmYWxzZVxuICAgIGlmICh0cmlwLnN0YXJ0RGF0ZSA+IHRyaXAuZW5kRGF0ZSkgcmV0dXJuIGZhbHNlXG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgY29uZmlndXJhdGlvblxuICAgKi9cbiAgdXBkYXRlQ29uZmlnKG5ld0NvbmZpZzogUGFydGlhbDxPdmVybGFwUHJldmVudGlvbkNvbmZpZz4pOiB2b2lkIHtcbiAgICB0aGlzLmNvbmZpZyA9IHsgLi4udGhpcy5jb25maWcsIC4uLm5ld0NvbmZpZyB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IGN1cnJlbnQgY29uZmlndXJhdGlvblxuICAgKi9cbiAgZ2V0Q29uZmlnKCk6IE92ZXJsYXBQcmV2ZW50aW9uQ29uZmlnIHtcbiAgICByZXR1cm4geyAuLi50aGlzLmNvbmZpZyB9XG4gIH1cbn0iLCIvKipcbiAqIFNjaGVuZ2VuIEFyZWEgQ291bnRyaWVzIERhdGFcbiAqIENvbXBsZXRlIGxpc3Qgb2YgYWxsIDI3IFNjaGVuZ2VuIGNvdW50cmllcyB3aXRoIGZsYWdzIGFuZCBtZXRhZGF0YVxuICogVXBkYXRlZCBhcyBvZiAyMDI0IC0gaW5jbHVkZXMgYWxsIGN1cnJlbnQgbWVtYmVyIHN0YXRlc1xuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2NoZW5nZW5Db3VudHJ5IHtcbiAgY29kZTogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICBmbGFnOiBzdHJpbmdcbiAgam9pbmVkU2NoZW5nZW46IHN0cmluZ1xuICBpc0VVTWVtYmVyOiBib29sZWFuXG4gIGNhcGl0YWw6IHN0cmluZ1xuICB0aW1lem9uZTogc3RyaW5nXG4gIGN1cnJlbmN5OiBzdHJpbmdcbn1cblxuZXhwb3J0IGNvbnN0IFNDSEVOR0VOX0NPVU5UUklFUzogU2NoZW5nZW5Db3VudHJ5W10gPSBbXG4gIHtcbiAgICBjb2RlOiAnQVQnLFxuICAgIG5hbWU6ICdBdXN0cmlhJyxcbiAgICBmbGFnOiAn8J+HpvCfh7knLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnVmllbm5hJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnQkUnLFxuICAgIG5hbWU6ICdCZWxnaXVtJyxcbiAgICBmbGFnOiAn8J+Hp/Cfh6onLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnQnJ1c3NlbHMnLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdCRycsXG4gICAgbmFtZTogJ0J1bGdhcmlhJyxcbiAgICBmbGFnOiAn8J+Hp/Cfh6wnLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMjAyNCcsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnU29maWEnLFxuICAgIHRpbWV6b25lOiAnRUVUJyxcbiAgICBjdXJyZW5jeTogJ0JHTidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdIUicsXG4gICAgbmFtZTogJ0Nyb2F0aWEnLFxuICAgIGZsYWc6ICfwn4et8J+HtycsXG4gICAgam9pbmVkU2NoZW5nZW46ICcyMDIzJyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdaYWdyZWInLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdDWicsXG4gICAgbmFtZTogJ0N6ZWNoIFJlcHVibGljJyxcbiAgICBmbGFnOiAn8J+HqPCfh78nLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMjAwNycsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnUHJhZ3VlJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdDWksnXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnREsnLFxuICAgIG5hbWU6ICdEZW5tYXJrJyxcbiAgICBmbGFnOiAn8J+HqfCfh7AnLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnQ29wZW5oYWdlbicsXG4gICAgdGltZXpvbmU6ICdDRVQnLFxuICAgIGN1cnJlbmN5OiAnREtLJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ0VFJyxcbiAgICBuYW1lOiAnRXN0b25pYScsXG4gICAgZmxhZzogJ/Cfh6rwn4eqJyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzIwMDcnLFxuICAgIGlzRVVNZW1iZXI6IHRydWUsXG4gICAgY2FwaXRhbDogJ1RhbGxpbm4nLFxuICAgIHRpbWV6b25lOiAnRUVUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdGSScsXG4gICAgbmFtZTogJ0ZpbmxhbmQnLFxuICAgIGZsYWc6ICfwn4er8J+HricsXG4gICAgam9pbmVkU2NoZW5nZW46ICcxOTk1JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdIZWxzaW5raScsXG4gICAgdGltZXpvbmU6ICdFRVQnLFxuICAgIGN1cnJlbmN5OiAnRVVSJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ0ZSJyxcbiAgICBuYW1lOiAnRnJhbmNlJyxcbiAgICBmbGFnOiAn8J+Hq/Cfh7cnLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnUGFyaXMnLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdERScsXG4gICAgbmFtZTogJ0dlcm1hbnknLFxuICAgIGZsYWc6ICfwn4ep8J+HqicsXG4gICAgam9pbmVkU2NoZW5nZW46ICcxOTk1JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdCZXJsaW4nLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdHUicsXG4gICAgbmFtZTogJ0dyZWVjZScsXG4gICAgZmxhZzogJ/Cfh6zwn4e3JyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzIwMDAnLFxuICAgIGlzRVVNZW1iZXI6IHRydWUsXG4gICAgY2FwaXRhbDogJ0F0aGVucycsXG4gICAgdGltZXpvbmU6ICdFRVQnLFxuICAgIGN1cnJlbmN5OiAnRVVSJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ0hVJyxcbiAgICBuYW1lOiAnSHVuZ2FyeScsXG4gICAgZmxhZzogJ/Cfh63wn4e6JyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzIwMDcnLFxuICAgIGlzRVVNZW1iZXI6IHRydWUsXG4gICAgY2FwaXRhbDogJ0J1ZGFwZXN0JyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdIVUYnXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnSVMnLFxuICAgIG5hbWU6ICdJY2VsYW5kJyxcbiAgICBmbGFnOiAn8J+HrvCfh7gnLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NicsXG4gICAgaXNFVU1lbWJlcjogZmFsc2UsXG4gICAgY2FwaXRhbDogJ1JleWtqYXZpaycsXG4gICAgdGltZXpvbmU6ICdHTVQnLFxuICAgIGN1cnJlbmN5OiAnSVNLJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ0lUJyxcbiAgICBuYW1lOiAnSXRhbHknLFxuICAgIGZsYWc6ICfwn4eu8J+HuScsXG4gICAgam9pbmVkU2NoZW5nZW46ICcxOTk1JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdSb21lJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnTFYnLFxuICAgIG5hbWU6ICdMYXR2aWEnLFxuICAgIGZsYWc6ICfwn4ex8J+HuycsXG4gICAgam9pbmVkU2NoZW5nZW46ICcyMDA3JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdSaWdhJyxcbiAgICB0aW1lem9uZTogJ0VFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnTEknLFxuICAgIG5hbWU6ICdMaWVjaHRlbnN0ZWluJyxcbiAgICBmbGFnOiAn8J+HsfCfh64nLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMjAxMScsXG4gICAgaXNFVU1lbWJlcjogZmFsc2UsXG4gICAgY2FwaXRhbDogJ1ZhZHV6JyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdDSEYnXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnTFQnLFxuICAgIG5hbWU6ICdMaXRodWFuaWEnLFxuICAgIGZsYWc6ICfwn4ex8J+HuScsXG4gICAgam9pbmVkU2NoZW5nZW46ICcyMDA3JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdWaWxuaXVzJyxcbiAgICB0aW1lem9uZTogJ0VFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnTFUnLFxuICAgIG5hbWU6ICdMdXhlbWJvdXJnJyxcbiAgICBmbGFnOiAn8J+HsfCfh7onLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnTHV4ZW1ib3VyZycsXG4gICAgdGltZXpvbmU6ICdDRVQnLFxuICAgIGN1cnJlbmN5OiAnRVVSJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ01UJyxcbiAgICBuYW1lOiAnTWFsdGEnLFxuICAgIGZsYWc6ICfwn4ey8J+HuScsXG4gICAgam9pbmVkU2NoZW5nZW46ICcyMDA3JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdWYWxsZXR0YScsXG4gICAgdGltZXpvbmU6ICdDRVQnLFxuICAgIGN1cnJlbmN5OiAnRVVSJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ05MJyxcbiAgICBuYW1lOiAnTmV0aGVybGFuZHMnLFxuICAgIGZsYWc6ICfwn4ez8J+HsScsXG4gICAgam9pbmVkU2NoZW5nZW46ICcxOTk1JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdBbXN0ZXJkYW0nLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdOTycsXG4gICAgbmFtZTogJ05vcndheScsXG4gICAgZmxhZzogJ/Cfh7Pwn4e0JyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzE5OTYnLFxuICAgIGlzRVVNZW1iZXI6IGZhbHNlLFxuICAgIGNhcGl0YWw6ICdPc2xvJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdOT0snXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnUEwnLFxuICAgIG5hbWU6ICdQb2xhbmQnLFxuICAgIGZsYWc6ICfwn4e18J+HsScsXG4gICAgam9pbmVkU2NoZW5nZW46ICcyMDA3JyxcbiAgICBpc0VVTWVtYmVyOiB0cnVlLFxuICAgIGNhcGl0YWw6ICdXYXJzYXcnLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ1BMTidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdQVCcsXG4gICAgbmFtZTogJ1BvcnR1Z2FsJyxcbiAgICBmbGFnOiAn8J+HtfCfh7knLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnTGlzYm9uJyxcbiAgICB0aW1lem9uZTogJ1dFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnUk8nLFxuICAgIG5hbWU6ICdSb21hbmlhJyxcbiAgICBmbGFnOiAn8J+Ht/Cfh7QnLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMjAyNCcsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnQnVjaGFyZXN0JyxcbiAgICB0aW1lem9uZTogJ0VFVCcsXG4gICAgY3VycmVuY3k6ICdST04nXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnU0snLFxuICAgIG5hbWU6ICdTbG92YWtpYScsXG4gICAgZmxhZzogJ/Cfh7jwn4ewJyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzIwMDcnLFxuICAgIGlzRVVNZW1iZXI6IHRydWUsXG4gICAgY2FwaXRhbDogJ0JyYXRpc2xhdmEnLFxuICAgIHRpbWV6b25lOiAnQ0VUJyxcbiAgICBjdXJyZW5jeTogJ0VVUidcbiAgfSxcbiAge1xuICAgIGNvZGU6ICdTSScsXG4gICAgbmFtZTogJ1Nsb3ZlbmlhJyxcbiAgICBmbGFnOiAn8J+HuPCfh64nLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMjAwNycsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnTGp1YmxqYW5hJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdFVVInXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnRVMnLFxuICAgIG5hbWU6ICdTcGFpbicsXG4gICAgZmxhZzogJ/Cfh6rwn4e4JyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzE5OTUnLFxuICAgIGlzRVVNZW1iZXI6IHRydWUsXG4gICAgY2FwaXRhbDogJ01hZHJpZCcsXG4gICAgdGltZXpvbmU6ICdDRVQnLFxuICAgIGN1cnJlbmN5OiAnRVVSJ1xuICB9LFxuICB7XG4gICAgY29kZTogJ1NFJyxcbiAgICBuYW1lOiAnU3dlZGVuJyxcbiAgICBmbGFnOiAn8J+HuPCfh6onLFxuICAgIGpvaW5lZFNjaGVuZ2VuOiAnMTk5NScsXG4gICAgaXNFVU1lbWJlcjogdHJ1ZSxcbiAgICBjYXBpdGFsOiAnU3RvY2tob2xtJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdTRUsnXG4gIH0sXG4gIHtcbiAgICBjb2RlOiAnQ0gnLFxuICAgIG5hbWU6ICdTd2l0emVybGFuZCcsXG4gICAgZmxhZzogJ/Cfh6jwn4etJyxcbiAgICBqb2luZWRTY2hlbmdlbjogJzIwMDgnLFxuICAgIGlzRVVNZW1iZXI6IGZhbHNlLFxuICAgIGNhcGl0YWw6ICdCZXJuJyxcbiAgICB0aW1lem9uZTogJ0NFVCcsXG4gICAgY3VycmVuY3k6ICdDSEYnXG4gIH1cbl1cblxuLy8gVXRpbGl0eSBmdW5jdGlvbnMgZm9yIHdvcmtpbmcgd2l0aCBjb3VudHJpZXNcbmV4cG9ydCBjb25zdCBnZXRDb3VudHJ5QnlDb2RlID0gKGNvZGU6IHN0cmluZyk6IFNjaGVuZ2VuQ291bnRyeSB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBTQ0hFTkdFTl9DT1VOVFJJRVMuZmluZChjb3VudHJ5ID0+IGNvdW50cnkuY29kZSA9PT0gY29kZSlcbn1cblxuZXhwb3J0IGNvbnN0IGdldENvdW50cnlCeU5hbWUgPSAobmFtZTogc3RyaW5nKTogU2NoZW5nZW5Db3VudHJ5IHwgdW5kZWZpbmVkID0+IHtcbiAgcmV0dXJuIFNDSEVOR0VOX0NPVU5UUklFUy5maW5kKGNvdW50cnkgPT4gXG4gICAgY291bnRyeS5uYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKVxuICApXG59XG5cbmV4cG9ydCBjb25zdCBnZXRDb3VudHJpZXNGb3JTZWxlY3QgPSAoKSA9PiB7XG4gIHJldHVybiBTQ0hFTkdFTl9DT1VOVFJJRVMubWFwKGNvdW50cnkgPT4gKHtcbiAgICB2YWx1ZTogY291bnRyeS5jb2RlLFxuICAgIGxhYmVsOiBgJHtjb3VudHJ5LmZsYWd9ICR7Y291bnRyeS5uYW1lfWAsXG4gICAgY291bnRyeVxuICB9KSkuc29ydCgoYSwgYikgPT4gYS5jb3VudHJ5Lm5hbWUubG9jYWxlQ29tcGFyZShiLmNvdW50cnkubmFtZSkpXG59XG5cbmV4cG9ydCBjb25zdCBnZXRFVU1lbWJlckNvdW50cmllcyA9ICgpOiBTY2hlbmdlbkNvdW50cnlbXSA9PiB7XG4gIHJldHVybiBTQ0hFTkdFTl9DT1VOVFJJRVMuZmlsdGVyKGNvdW50cnkgPT4gY291bnRyeS5pc0VVTWVtYmVyKVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Tm9uRVVTY2hlbmdlbkNvdW50cmllcyA9ICgpOiBTY2hlbmdlbkNvdW50cnlbXSA9PiB7XG4gIHJldHVybiBTQ0hFTkdFTl9DT1VOVFJJRVMuZmlsdGVyKGNvdW50cnkgPT4gIWNvdW50cnkuaXNFVU1lbWJlcilcbn1cblxuLy8gRXhwb3J0IGNvdW50IGZvciB2YWxpZGF0aW9uXG5leHBvcnQgY29uc3QgU0NIRU5HRU5fQ09VTlRSSUVTX0NPVU5UID0gU0NIRU5HRU5fQ09VTlRSSUVTLmxlbmd0aCJdLCJuYW1lcyI6WyJSb2J1c3RTY2hlbmdlbkNhbGN1bGF0b3IiLCJjYWxjdWxhdGVFeGFjdENvbXBsaWFuY2UiLCJ0cmlwcyIsInJlZmVyZW5jZURhdGUiLCJEYXRlIiwiQXJyYXkiLCJpc0FycmF5IiwiRXJyb3IiLCJpc1ZhbGlkIiwibm93IiwidGVuWWVhcnNBZ28iLCJzdWJEYXlzIiwiZml2ZVllYXJzRnJvbU5vdyIsImFkZERheXMiLCJjb25zb2xlIiwid2FybiIsImZvcm1hdCIsIm5vcm1hbGl6ZWRSZWZEYXRlIiwibm9ybWFsaXplVG9TdGFydE9mRGF5IiwicGVyaW9kU3RhcnQiLCJjYWxjdWxhdGVQZXJpb2RTdGFydCIsInZhbGlkVHJpcHMiLCJ2YWxpZGF0ZUFuZE5vcm1hbGl6ZVRyaXBzIiwibGVuZ3RoIiwidG90YWxEYXlzVXNlZCIsImRheXNSZW1haW5pbmciLCJNQVhfREFZU19JTl9QRVJJT0QiLCJpc0NvbXBsaWFudCIsIm92ZXJzdGF5RGF5cyIsInBlcmlvZEVuZCIsImRldGFpbGVkQnJlYWtkb3duIiwiZGFpbHlTdGF5cyIsImNyZWF0ZURhaWx5U3RheU1hcCIsInJvbGxpbmdDaGVja3MiLCJjYWxjdWxhdGVSb2xsaW5nQ29tcGxpYW5jZUZvckFsbERheXMiLCJtYXhWaW9sYXRpb24iLCJNYXRoIiwibWF4IiwibWFwIiwiY2hlY2siLCJjdXJyZW50Q29tcGxpYW5jZSIsImdlbmVyYXRlRGV0YWlsZWRCcmVha2Rvd24iLCJyZXN1bHQiLCJkYXlzSW5XaW5kb3ciLCJlcnJvciIsInN0YXJ0T2ZEYXkiLCJST0xMSU5HX1BFUklPRF9EQVlTIiwiY2FsY3VsYXRlRGF5c0luV2luZG93IiwiZW5kRGF0ZSIsIm5vcm1hbGl6ZWRFbmREYXRlIiwid2luZG93U3RhcnQiLCJ0b3RhbERheXMiLCJ0cmlwIiwic3RhcnREYXRlIiwiaWQiLCJ0cmlwU3RhcnQiLCJ0cmlwRW5kIiwib3ZlcmxhcFN0YXJ0Iiwib3ZlcmxhcEVuZCIsImRheXNJbk92ZXJsYXAiLCJkaWZmZXJlbmNlSW5EYXlzIiwidmFsaWRhdGVQbGFubmVkVHJpcCIsImV4aXN0aW5nVHJpcHMiLCJwbGFubmVkVHJpcCIsImFsbFRyaXBzIiwiY3VycmVudERhdGUiLCJ2aW9sYXRpb25EYXRlIiwib3ZlcnN0YXkiLCJ2aW9sYXRpb25EYXlzIiwiZmluZExhdGVzdFZhbGlkU3RhcnREYXRlIiwidHJpcExlbmd0aCIsImVhcmxpZXN0U3RhcnQiLCJsYXRlc3RTdGFydCIsInRlc3REYXRlIiwibWluRGF0ZSIsInRlc3RUcmlwIiwiY291bnRyeSIsImRheXMiLCJ2YWxpZGF0aW9uIiwiY2FsY3VsYXRlTWF4Q29uc2VjdXRpdmVEYXlzIiwibWF4RGF5cyIsInRlc3RMZW5ndGgiLCJtYXhUZXN0TGVuZ3RoIiwibWluIiwidmFsaWRhdGVUcmlwcyIsImVycm9ycyIsIndhcm5pbmdzIiwic2VlbklkcyIsIlNldCIsImZvckVhY2giLCJpbmRleCIsImhhcyIsInB1c2giLCJmaWVsZCIsIm1lc3NhZ2UiLCJzZXZlcml0eSIsInRyaXBJZCIsImFkZCIsInRyaW0iLCJkdXJhdGlvbiIsImFicyIsImkiLCJqIiwidHJpcDEiLCJ0cmlwMiIsIm92ZXJsYXAiLCJnZXROZXh0UmVzZXREYXRlIiwiY3VycmVudFdpbmRvdyIsImVhcmxpZXN0UmVsZXZhbnREYXRlIiwiY2hlY2tEYXRlIiwiZGVidWdSb2xsaW5nV2luZG93Iiwic3VtbWFyeSIsInRyaXBzSW5QZXJpb2QiLCJmaWx0ZXIiLCJkYWlseUJyZWFrZG93biIsImRheSIsImRheXNVc2VkT25EYXRlIiwidmlvbGF0aW9ucyIsImlzVmlvbGF0aW9uIiwibmV4dFJlc2V0RGF0ZSIsInZhbGlkYXRpb25SZXN1bHQiLCJjcml0aWNhbEVycm9ycyIsInZlcnlPbGQiLCJ2ZXJ5RnV0dXJlIiwibm9ybWFsaXplZFRyaXAiLCJoYXNMZWFwRGF5IiwidHJpcENyb3NzZXNMZWFwRGF5IiwiZGVidWciLCJzb3J0IiwiYSIsImIiLCJnZXRUaW1lIiwiTWFwIiwiZGF0ZUtleSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJzZXQiLCJnZXQiLCJjaGVja3MiLCJ3aW5kb3dFbmQiLCJkYXRlIiwiYnJlYWtkb3duIiwiY2hlY2tJbmRleCIsInN0YXlzT25EYXRlIiwicm9sbGluZ0NoZWNrIiwiY3VtdWxhdGl2ZURheXNJbldpbmRvdyIsImNvbnRyaWJ1dGluZ1RyaXBzIiwibm9ybWFsaXplZCIsInJlZlllYXIiLCJnZXRGdWxsWWVhciIsInN0YXJ0WWVhciIsImNyb3NzZXNMZWFwWWVhciIsImlzTGVhcFllYXIiLCJlbmRZZWFyIiwieWVhciIsImxlYXBEYXkiLCJEYXRlT3ZlcmxhcFZhbGlkYXRvciIsInZhbGlkYXRlRGF0ZVNwYW4iLCJuZXdSYW5nZSIsImlzVmFsaWREYXRlUmFuZ2UiLCJjb25mbGljdHMiLCJvY2N1cGllZERhdGVzIiwibm9ybWFsaXplZE5ld1JhbmdlIiwic3RhcnQiLCJlbmQiLCJlbmRPZkRheSIsImlzVmFsaWRUcmlwIiwidHJpcFJhbmdlIiwiaGFzT3ZlcmxhcCIsInJhbmdlc092ZXJsYXAiLCJjb25mbGljdERldGFpbCIsImNhbGN1bGF0ZUNvbmZsaWN0RGV0YWlsIiwic2hvdWxkUmVwb3J0Q29uZmxpY3QiLCJhZGRPY2N1cGllZERhdGVzRnJvbVRyaXAiLCJhbGxPY2N1cGllZERhdGVzIiwiZ2V0QWxsT2NjdXBpZWREYXRlcyIsImdlbmVyYXRlVmFsaWRhdGlvbk1lc3NhZ2UiLCJkIiwidGltZSIsImlzRGF0ZU9jY3VwaWVkIiwibm9ybWFsaXplZERhdGUiLCJzb21lIiwiZ2V0VHJpcHNPbkRhdGUiLCJmaW5kTmV4dEF2YWlsYWJsZURhdGVTcGFuIiwicHJlZmVycmVkU3RhcnQiLCJsZW5ndGhJbkRheXMiLCJzZWFyY2hMaW1pdCIsIm1heFNlYXJjaERhdGUiLCJ0ZXN0UmFuZ2UiLCJzdWdnZXN0QWx0ZXJuYXRpdmVEYXRlcyIsImNvbmZsaWN0ZWRSYW5nZSIsInN1Z2dlc3Rpb25zIiwiZWFybGllckRhdGUiLCJlYXJsaWVyUmFuZ2UiLCJsYXRlckRhdGUiLCJsYXRlclJhbmdlIiwic2xpY2UiLCJ2YWxpZGF0ZU11bHRpcGxlRGF0ZVNwYW5zIiwibmV3UmFuZ2VzIiwicmVzdWx0cyIsImNvbWJpbmVkVHJpcHMiLCJyYW5nZSIsInJhbmdlMSIsInJhbmdlMiIsImFyZUludGVydmFsc092ZXJsYXBwaW5nIiwiY29uZmxpY3RTdGFydCIsImNvbmZsaWN0RW5kIiwib3ZlcmxhcERheXMiLCJ0cmlwQ291bnRyeSIsImNvbmZsaWN0IiwiY29uZmlnIiwic3RyaWN0TW9kZSIsImFsbG93U2FtZURheVRyYXZlbCIsImlzU2FtZURheVRyYW5zaXRpb24iLCJhbGxvd0JvcmRlclRyYW5zaXRpb25zIiwidXBkYXRlQ29uZmlnIiwibmV3Q29uZmlnIiwiZ2V0Q29uZmlnIiwiU0NIRU5HRU5fQ09VTlRSSUVTIiwiY29kZSIsIm5hbWUiLCJmbGFnIiwiam9pbmVkU2NoZW5nZW4iLCJpc0VVTWVtYmVyIiwiY2FwaXRhbCIsInRpbWV6b25lIiwiY3VycmVuY3kiLCJnZXRDb3VudHJ5QnlDb2RlIiwiZmluZCIsImdldENvdW50cnlCeU5hbWUiLCJ0b0xvd2VyQ2FzZSIsImdldENvdW50cmllc0ZvclNlbGVjdCIsInZhbHVlIiwibGFiZWwiLCJsb2NhbGVDb21wYXJlIiwiZ2V0RVVNZW1iZXJDb3VudHJpZXMiLCJnZXROb25FVVNjaGVuZ2VuQ291bnRyaWVzIiwiU0NIRU5HRU5fQ09VTlRSSUVTX0NPVU5UIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../calculator/dist/index.esm.js\n");

/***/ }),

/***/ "(ssr)/../ui/dist/index.esm.js":
/*!*******************************!*\
  !*** ../ui/dist/index.esm.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Badge: () => (/* binding */ Badge),\n/* harmony export */   Button: () => (/* binding */ Button$1),\n/* harmony export */   Calendar: () => (/* binding */ Calendar),\n/* harmony export */   CalendarModal: () => (/* binding */ CalendarModal),\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   CardContent: () => (/* binding */ CardContent),\n/* harmony export */   CardDescription: () => (/* binding */ CardDescription),\n/* harmony export */   CardFooter: () => (/* binding */ CardFooter),\n/* harmony export */   CardHeader: () => (/* binding */ CardHeader),\n/* harmony export */   CardTitle: () => (/* binding */ CardTitle),\n/* harmony export */   CircularProgress: () => (/* binding */ CircularProgress),\n/* harmony export */   DateOverlapValidator: () => (/* binding */ DateOverlapValidator),\n/* harmony export */   Header: () => (/* binding */ Header),\n/* harmony export */   Input: () => (/* binding */ Input),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   addDays: () => (/* binding */ addDays),\n/* harmony export */   badgeVariants: () => (/* binding */ badgeVariants),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants),\n/* harmony export */   cn: () => (/* binding */ cn),\n/* harmony export */   daysBetween: () => (/* binding */ daysBetween),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   endOfDay: () => (/* binding */ endOfDay),\n/* harmony export */   formatDateKey: () => (/* binding */ formatDateKey),\n/* harmony export */   formatDateRange: () => (/* binding */ formatDateRange),\n/* harmony export */   formatDisplayDate: () => (/* binding */ formatDisplayDate),\n/* harmony export */   generateId: () => (/* binding */ generateId),\n/* harmony export */   getDateRange: () => (/* binding */ getDateRange),\n/* harmony export */   isDateInRange: () => (/* binding */ isDateInRange),\n/* harmony export */   isFutureDate: () => (/* binding */ isFutureDate),\n/* harmony export */   isMobile: () => (/* binding */ isMobile),\n/* harmony export */   isPastDate: () => (/* binding */ isPastDate),\n/* harmony export */   isSameDay: () => (/* binding */ isSameDay),\n/* harmony export */   isToday: () => (/* binding */ isToday),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   labelVariants: () => (/* binding */ labelVariants),\n/* harmony export */   startOfDay: () => (/* binding */ startOfDay),\n/* harmony export */   subtractDays: () => (/* binding */ subtractDays),\n/* harmony export */   throttle: () => (/* binding */ throttle),\n/* harmony export */   useDateOverlapPrevention: () => (/* binding */ useDateOverlapPrevention)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/../../node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/../../node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/../../node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/addDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/addMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/addWeeks.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/addYears.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/differenceInCalendarDays.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/differenceInCalendarMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/eachMonthOfInterval.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/endOfISOWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/endOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/endOfWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/endOfYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/format.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/getISOWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/getMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/getYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/getWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isAfter.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isBefore.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isDate.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isSameDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isSameMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isSameYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/max.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/min.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/setMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/setYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/startOfDay.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/startOfISOWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/startOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/startOfWeek.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/startOfYear.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/subMonths.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/eachDayOfInterval.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,eachDayOfInterval,eachMonthOfInterval,endOfISOWeek,endOfMonth,endOfWeek,endOfYear,format,getISOWeek,getMonth,getWeek,getYear,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,isToday,max,min,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subMonths!=!date-fns */ \"(ssr)/../ui/node_modules/date-fns/isToday.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n\n\n\n\n\n\n\n\n/**\n * Utility function to merge Tailwind CSS classes with conditional logic\n */ function cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_5__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n/**\n * Format a date to ISO string for consistent date comparisons\n */ function formatDateKey(date) {\n    return date.toISOString().split('T')[0];\n}\n/**\n * Check if two dates are the same day (ignoring time)\n */ function isSameDay(date1, date2) {\n    return formatDateKey(date1) === formatDateKey(date2);\n}\n/**\n * Check if a date is within a date range (inclusive)\n */ function isDateInRange(date, start, end) {\n    const dateKey = formatDateKey(date);\n    const startKey = formatDateKey(start);\n    const endKey = formatDateKey(end);\n    return dateKey >= startKey && dateKey <= endKey;\n}\n/**\n * Generate array of dates between start and end (inclusive)\n */ function getDateRange(start, end) {\n    const dates = [];\n    const current = new Date(start);\n    while(current <= end){\n        dates.push(new Date(current));\n        current.setDate(current.getDate() + 1);\n    }\n    return dates;\n}\n/**\n * Check if date is today\n */ function isToday(date) {\n    return isSameDay(date, new Date());\n}\n/**\n * Check if date is in the past\n */ function isPastDate(date) {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return date < today;\n}\n/**\n * Check if date is in the future\n */ function isFutureDate(date) {\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    return date > today;\n}\n/**\n * Format date for display in UI components\n */ function formatDisplayDate(date, options) {\n    return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        ...options\n    });\n}\n/**\n * Format date range for display\n */ function formatDateRange(start, end) {\n    if (isSameDay(start, end)) {\n        return formatDisplayDate(start);\n    }\n    return `${formatDisplayDate(start)} - ${formatDisplayDate(end)}`;\n}\n/**\n * Calculate number of days between two dates\n */ function daysBetween(start, end) {\n    const startTime = new Date(start).setHours(0, 0, 0, 0);\n    const endTime = new Date(end).setHours(0, 0, 0, 0);\n    return Math.ceil((endTime - startTime) / (1000 * 60 * 60 * 24));\n}\n/**\n * Add days to a date\n */ function addDays(date, days) {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n/**\n * Subtract days from a date\n */ function subtractDays(date, days) {\n    const result = new Date(date);\n    result.setDate(result.getDate() - days);\n    return result;\n}\n/**\n * Get the start of day for consistent date comparisons\n */ function startOfDay(date) {\n    const result = new Date(date);\n    result.setHours(0, 0, 0, 0);\n    return result;\n}\n/**\n * Get the end of day\n */ function endOfDay(date) {\n    const result = new Date(date);\n    result.setHours(23, 59, 59, 999);\n    return result;\n}\n/**\n * Debounce function for performance optimization\n */ function debounce(func, wait) {\n    let timeout = null;\n    return (...args)=>{\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(()=>{\n            func(...args);\n        }, wait);\n    };\n}\n/**\n * Throttle function for performance optimization\n */ function throttle(func, limit) {\n    let inThrottle = false;\n    return (...args)=>{\n        if (!inThrottle) {\n            func(...args);\n            inThrottle = true;\n            setTimeout(()=>{\n                inThrottle = false;\n            }, limit);\n        }\n    };\n}\n/**\n * Generate a unique ID for components\n */ function generateId(prefix = 'schengen') {\n    return `${prefix}-${Math.random().toString(36).substr(2, 9)}`;\n}\n/**\n * Check if device is mobile based on viewport width\n */ function isMobile() {\n    return  false && 0;\n}\n/**\n * Check if device has touch capability\n */ function isTouchDevice() {\n    return  false && 0;\n}\n// packages/react/compose-refs/src/compose-refs.tsx\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        return ref(value);\n    } else if (ref !== null && ref !== void 0) {\n        ref.current = value;\n    }\n}\nfunction composeRefs(...refs) {\n    return (node)=>{\n        let hasCleanup = false;\n        const cleanups = refs.map((ref)=>{\n            const cleanup = setRef(ref, node);\n            if (!hasCleanup && typeof cleanup == \"function\") {\n                hasCleanup = true;\n            }\n            return cleanup;\n        });\n        if (hasCleanup) {\n            return ()=>{\n                for(let i = 0; i < cleanups.length; i++){\n                    const cleanup = cleanups[i];\n                    if (typeof cleanup == \"function\") {\n                        cleanup();\n                    } else {\n                        setRef(refs[i], null);\n                    }\n                }\n            };\n        }\n    };\n}\n// src/slot.tsx\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n    const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n    const Slot2 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef)=>{\n        const { children, ...slotProps } = props;\n        const childrenArray = react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(children);\n        const slottable = childrenArray.find(isSlottable);\n        if (slottable) {\n            const newElement = slottable.props.children;\n            const newChildren = childrenArray.map((child)=>{\n                if (child === slottable) {\n                    if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null);\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(newElement) ? newElement.props.children : null;\n                } else {\n                    return child;\n                }\n            });\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SlotClone, {\n                ...slotProps,\n                ref: forwardedRef,\n                children: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(newElement) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(newElement, void 0, newChildren) : null\n            });\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SlotClone, {\n            ...slotProps,\n            ref: forwardedRef,\n            children\n        });\n    });\n    Slot2.displayName = `${ownerName}.Slot`;\n    return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n    const SlotClone = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef)=>{\n        const { children, ...slotProps } = props;\n        if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(children)) {\n            const childrenRef = getElementRef(children);\n            const props2 = mergeProps(slotProps, children.props);\n            if (children.type !== react__WEBPACK_IMPORTED_MODULE_1__.Fragment) {\n                props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(children, props2);\n        }\n        return react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null) : null;\n    });\n    SlotClone.displayName = `${ownerName}.SlotClone`;\n    return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\nfunction isSlottable(child) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            if (slotPropValue && childPropValue) {\n                overrideProps[propName] = (...args)=>{\n                    const result = childPropValue(...args);\n                    slotPropValue(...args);\n                    return result;\n                };\n            } else if (slotPropValue) {\n                overrideProps[propName] = slotPropValue;\n            }\n        } else if (propName === \"style\") {\n            overrideProps[propName] = {\n                ...slotPropValue,\n                ...childPropValue\n            };\n        } else if (propName === \"className\") {\n            overrideProps[propName] = [\n                slotPropValue,\n                childPropValue\n            ].filter(Boolean).join(\" \");\n        }\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\nfunction getElementRef(element) {\n    let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n    let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.ref;\n    }\n    getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n    mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n    if (mayWarn) {\n        return element.props.ref;\n    }\n    return element.props.ref || element.ref;\n}\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_3__.cva)(\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/50 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90 schengen-shadow\",\n            destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n            outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\",\n            // Schengen-specific variants\n            brand: \"schengen-brand-gradient text-white shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\",\n            cream: \"bg-cream text-gray-800 shadow hover:bg-cream/90 border border-primary/20\",\n            success: \"bg-green-500 text-white shadow hover:bg-green-600\",\n            warning: \"bg-yellow-500 text-white shadow hover:bg-yellow-600\"\n        },\n        size: {\n            default: \"h-9 px-4 py-2\",\n            sm: \"h-8 rounded-md px-3 text-xs\",\n            lg: \"h-10 rounded-md px-8\",\n            xl: \"h-12 rounded-lg px-10 text-base\",\n            icon: \"h-9 w-9\",\n            // Mobile-optimized sizes\n            mobile: \"h-11 px-6 py-3 text-base min-h-[44px]\",\n            \"mobile-sm\": \"h-10 px-4 py-2 text-sm min-h-[44px]\",\n            \"mobile-lg\": \"h-12 px-8 py-4 text-lg min-h-[44px]\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, size, asChild = false, loading = false, loadingText, leftIcon, rightIcon, children, disabled, ...props }, ref)=>{\n    const Comp = asChild ? Slot : \"button\";\n    const isDisabled = disabled || loading;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Comp, {\n        className: cn(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        disabled: isDisabled,\n        ...props\n    }, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", {\n        className: \"animate-spin -ml-1 mr-2 h-4 w-4\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"circle\", {\n        className: \"opacity-25\",\n        cx: \"12\",\n        cy: \"12\",\n        r: \"10\",\n        stroke: \"currentColor\",\n        strokeWidth: \"4\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n        className: \"opacity-75\",\n        fill: \"currentColor\",\n        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    })), !loading && leftIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        className: \"mr-1\",\n        \"aria-hidden\": \"true\"\n    }, leftIcon), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", null, loading ? loadingText || 'Loading...' : children), !loading && rightIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        className: \"ml-1\",\n        \"aria-hidden\": \"true\"\n    }, rightIcon));\n});\nButton$1.displayName = \"Button\";\n/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string)=>string.replace(/^([A-Z])|[\\s-_]+(\\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());\nconst toPascalCase = (string)=>{\n    const camelCase = toCamelCase(string);\n    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes)=>classes.filter((className, index, array)=>{\n        return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n    }).join(\" \").trim();\nconst hasA11yProp = (props)=>{\n    for(const prop in props){\n        if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n            return true;\n        }\n    }\n};\n/**\n * @license lucide-react v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\nconst Icon = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, iconNode, ...rest }, ref)=>/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\"svg\", {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...!children && !hasA11yProp(rest) && {\n            \"aria-hidden\": \"true\"\n        },\n        ...rest\n    }, [\n        ...iconNode.map(([tag, attrs])=>/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(tag, attrs)),\n        ...Array.isArray(children) ? children : [\n            children\n        ]\n    ]));\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(Icon, {\n            ref,\n            iconNode,\n            className: mergeClasses(`lucide-${toKebabCase(toPascalCase(iconName))}`, `lucide-${iconName}`, className),\n            ...props\n        }));\n    Component.displayName = toPascalCase(iconName);\n    return Component;\n};\nconst __iconNode$5 = [\n    [\n        \"path\",\n        {\n            d: \"m15 18-6-6 6-6\",\n            key: \"1wnfg3\"\n        }\n    ]\n];\nconst ChevronLeft = createLucideIcon(\"chevron-left\", __iconNode$5);\nconst __iconNode$4 = [\n    [\n        \"path\",\n        {\n            d: \"m9 18 6-6-6-6\",\n            key: \"mthhwq\"\n        }\n    ]\n];\nconst ChevronRight = createLucideIcon(\"chevron-right\", __iconNode$4);\nconst __iconNode$3 = [\n    [\n        \"path\",\n        {\n            d: \"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\",\n            key: \"1r0f0z\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\",\n            key: \"ilqhr7\"\n        }\n    ]\n];\nconst MapPin = createLucideIcon(\"map-pin\", __iconNode$3);\nconst __iconNode$2 = [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"8\",\n            y2: \"14\",\n            key: \"1bvyxn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1shjgl\"\n        }\n    ]\n];\nconst UserPlus = createLucideIcon(\"user-plus\", __iconNode$2);\nconst __iconNode$1 = [\n    [\n        \"path\",\n        {\n            d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\",\n            key: \"975kel\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"17ys0d\"\n        }\n    ]\n];\nconst User = createLucideIcon(\"user\", __iconNode$1);\nconst __iconNode = [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n];\nconst X = createLucideIcon(\"x\", __iconNode);\n/**\n * Time zone name format.\n */ /**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */ function tzName(timeZone, date, format = \"long\") {\n    return new Intl.DateTimeFormat(\"en-US\", {\n        // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n        hour: \"numeric\",\n        timeZone: timeZone,\n        timeZoneName: format\n    }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n    .slice(2) // Skip the hour and AM/PM parts\n    .join(\" \");\n}\nconst offsetFormatCache = {};\nconst offsetCache = {};\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */ function tzOffset(timeZone, date) {\n    try {\n        var _offsetFormatCache, _timeZone;\n        const format = (_offsetFormatCache = offsetFormatCache)[_timeZone = timeZone] || (_offsetFormatCache[_timeZone] = new Intl.DateTimeFormat(\"en-US\", {\n            timeZone,\n            timeZoneName: \"longOffset\"\n        }).format);\n        const offsetStr = format(date).split(\"GMT\")[1];\n        if (offsetStr in offsetCache) return offsetCache[offsetStr];\n        return calcOffset(offsetStr, offsetStr.split(\":\"));\n    } catch  {\n        // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n        // See: https://github.com/nodejs/node/issues/53419\n        if (timeZone in offsetCache) return offsetCache[timeZone];\n        const captures = timeZone?.match(offsetRe);\n        if (captures) return calcOffset(timeZone, captures.slice(1));\n        return NaN;\n    }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n    const hours = +(values[0] || 0);\n    const minutes = +(values[1] || 0);\n    // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n    const seconds = +(values[2] || 0) / 60;\n    return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}\nclass TZDateMini extends Date {\n    static tz(tz, ...args) {\n        return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n    }\n    //#endregion\n    //#region time zone\n    withTimeZone(timeZone) {\n        return new TZDateMini(+this, timeZone);\n    }\n    getTimezoneOffset() {\n        const offset = -tzOffset(this.timeZone, this);\n        // Remove the seconds offset\n        // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n        return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n    }\n    //#endregion\n    //#region time\n    setTime(time) {\n        Date.prototype.setTime.apply(this, arguments);\n        syncToInternal(this);\n        return +this;\n    }\n    //#endregion\n    //#region date-fns integration\n    [Symbol.for(\"constructDateFrom\")](date) {\n        return new TZDateMini(+new Date(date), this.timeZone);\n    }\n    //#region static\n    constructor(...args){\n        super();\n        if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n            this.timeZone = args.pop();\n        }\n        this.internal = new Date();\n        if (isNaN(tzOffset(this.timeZone, this))) {\n            this.setTime(NaN);\n        } else {\n            if (!args.length) {\n                this.setTime(Date.now());\n            } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n                this.setTime(args[0]);\n            } else if (typeof args[0] === \"string\") {\n                this.setTime(+new Date(args[0]));\n            } else if (args[0] instanceof Date) {\n                this.setTime(+args[0]);\n            } else {\n                this.setTime(+new Date(...args));\n                adjustToSystemTZ(this);\n                syncToInternal(this);\n            }\n        }\n    }\n}\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach((method)=>{\n    if (!re.test(method)) return;\n    const utcMethod = method.replace(re, \"$1UTC\");\n    // Filter out methods without UTC counterparts\n    if (!TZDateMini.prototype[utcMethod]) return;\n    if (method.startsWith(\"get\")) {\n        // Delegate to internal date's UTC method\n        TZDateMini.prototype[method] = function() {\n            return this.internal[utcMethod]();\n        };\n    } else {\n        // Assign regular setter\n        TZDateMini.prototype[method] = function() {\n            Date.prototype[utcMethod].apply(this.internal, arguments);\n            syncFromInternal(this);\n            return +this;\n        };\n        // Assign UTC setter\n        TZDateMini.prototype[utcMethod] = function() {\n            Date.prototype[utcMethod].apply(this, arguments);\n            syncToInternal(this);\n            return +this;\n        };\n    }\n});\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */ function syncToInternal(date) {\n    date.internal.setTime(+date);\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-tzOffset(date.timeZone, date) * 60));\n}\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */ function syncFromInternal(date) {\n    // First we transpose the internal values\n    Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n    Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n    // Now we have to adjust the date to the system time zone\n    adjustToSystemTZ(date);\n}\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */ function adjustToSystemTZ(date) {\n    // Save the time zone offset before all the adjustments\n    const baseOffset = tzOffset(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n    //#region System DST adjustment\n    // The biggest problem with using the system time zone is that when we create\n    // a date from internal values stored in UTC, the system time zone might end\n    // up on the DST hour:\n    //\n    //   $ TZ=America/New_York node\n    //   > new Date(2020, 2, 8, 1).toString()\n    //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n    //   > new Date(2020, 2, 8, 2).toString()\n    //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n    //   > new Date(2020, 2, 8, 3).toString()\n    //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n    //   > new Date(2020, 2, 8, 4).toString()\n    //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n    //\n    // Here we get the same hour for both 2 and 3, because the system time zone\n    // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n    // to adjust the internal date to reflect that.\n    //\n    // However we want to adjust only if that's the DST hour the change happenes,\n    // not the hour where DST moves to.\n    // We calculate the previous hour to see if the time zone offset has changed\n    // and we have landed on the DST hour.\n    const prevHour = new Date(+date);\n    // We use UTC methods here as we don't want to land on the same hour again\n    // in case of DST.\n    prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n    // Calculate if we are on the system DST hour.\n    const systemOffset = -new Date(+date).getTimezoneOffset();\n    const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n    const systemDSTChange = systemOffset - prevHourSystemOffset;\n    // Detect the DST shift. System DST change will occur both on\n    const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n    // Move the internal date when we are on the system DST hour.\n    if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n    //#endregion\n    //#region System diff adjustment\n    // Now we need to adjust the date, since we just applied internal values.\n    // We need to calculate the difference between the system and date time zones\n    // and apply it to the date.\n    const offsetDiff = systemOffset - offset;\n    if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n    //#endregion\n    //#region Seconds System diff adjustment\n    const systemDate = new Date(+date);\n    // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n    systemDate.setUTCSeconds(0);\n    // For negative systemOffset, invert the seconds.\n    const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n    // Calculate the seconds offset based on the timezone offset.\n    const secondsOffset = Math.round(-(tzOffset(date.timeZone, date) * 60)) % 60;\n    if (secondsOffset || systemSecondsOffset) {\n        date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n        Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n    }\n    //#endregion\n    //#region Post-adjustment DST fix\n    const postBaseOffset = tzOffset(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n    const postSystemOffset = -new Date(+date).getTimezoneOffset();\n    const postOffsetDiff = postSystemOffset - postOffset;\n    const offsetChanged = postOffset !== offset;\n    const postDiff = postOffsetDiff - offsetDiff;\n    if (offsetChanged && postDiff) {\n        Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n        // Now we need to check if got offset change during the post-adjustment.\n        // If so, we also need both dates to reflect that.\n        const newBaseOffset = tzOffset(date.timeZone, date);\n        // Remove the seconds offset\n        // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n        const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n        const offsetChange = postOffset - newOffset;\n        if (offsetChange) {\n            date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n            Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n        }\n    }\n//#endregion\n}\nclass TZDate extends TZDateMini {\n    //#region static\n    static tz(tz, ...args) {\n        return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n    }\n    //#endregion\n    //#region representation\n    toISOString() {\n        const [sign, hours, minutes] = this.tzComponents();\n        const tz = `${sign}${hours}:${minutes}`;\n        return this.internal.toISOString().slice(0, -1) + tz;\n    }\n    toString() {\n        // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n        return `${this.toDateString()} ${this.toTimeString()}`;\n    }\n    toDateString() {\n        // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n        const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n        // \"Tue Aug 13 2024\"\n        return `${day?.slice(0, -1)} ${month} ${date} ${year}`;\n    }\n    toTimeString() {\n        // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n        const time = this.internal.toUTCString().split(\" \")[4];\n        const [sign, hours, minutes] = this.tzComponents();\n        // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n        return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n    }\n    toLocaleString(locales, options) {\n        return Date.prototype.toLocaleString.call(this, locales, {\n            ...options,\n            timeZone: options?.timeZone || this.timeZone\n        });\n    }\n    toLocaleDateString(locales, options) {\n        return Date.prototype.toLocaleDateString.call(this, locales, {\n            ...options,\n            timeZone: options?.timeZone || this.timeZone\n        });\n    }\n    toLocaleTimeString(locales, options) {\n        return Date.prototype.toLocaleTimeString.call(this, locales, {\n            ...options,\n            timeZone: options?.timeZone || this.timeZone\n        });\n    }\n    //#endregion\n    //#region private\n    tzComponents() {\n        const offset = this.getTimezoneOffset();\n        const sign = offset > 0 ? \"-\" : \"+\";\n        const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n        const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n        return [\n            sign,\n            hours,\n            minutes\n        ];\n    }\n    //#endregion\n    withTimeZone(timeZone) {\n        return new TZDate(+this, timeZone);\n    }\n    //#region date-fns integration\n    [Symbol.for(\"constructDateFrom\")](date) {\n        return new TZDate(+new Date(date), this.timeZone);\n    }\n}\nconst formatDistanceLocale = {\n    lessThanXSeconds: {\n        one: \"less than a second\",\n        other: \"less than {{count}} seconds\"\n    },\n    xSeconds: {\n        one: \"1 second\",\n        other: \"{{count}} seconds\"\n    },\n    halfAMinute: \"half a minute\",\n    lessThanXMinutes: {\n        one: \"less than a minute\",\n        other: \"less than {{count}} minutes\"\n    },\n    xMinutes: {\n        one: \"1 minute\",\n        other: \"{{count}} minutes\"\n    },\n    aboutXHours: {\n        one: \"about 1 hour\",\n        other: \"about {{count}} hours\"\n    },\n    xHours: {\n        one: \"1 hour\",\n        other: \"{{count}} hours\"\n    },\n    xDays: {\n        one: \"1 day\",\n        other: \"{{count}} days\"\n    },\n    aboutXWeeks: {\n        one: \"about 1 week\",\n        other: \"about {{count}} weeks\"\n    },\n    xWeeks: {\n        one: \"1 week\",\n        other: \"{{count}} weeks\"\n    },\n    aboutXMonths: {\n        one: \"about 1 month\",\n        other: \"about {{count}} months\"\n    },\n    xMonths: {\n        one: \"1 month\",\n        other: \"{{count}} months\"\n    },\n    aboutXYears: {\n        one: \"about 1 year\",\n        other: \"about {{count}} years\"\n    },\n    xYears: {\n        one: \"1 year\",\n        other: \"{{count}} years\"\n    },\n    overXYears: {\n        one: \"over 1 year\",\n        other: \"over {{count}} years\"\n    },\n    almostXYears: {\n        one: \"almost 1 year\",\n        other: \"almost {{count}} years\"\n    }\n};\nconst formatDistance = (token, count, options)=>{\n    let result;\n    const tokenValue = formatDistanceLocale[token];\n    if (typeof tokenValue === \"string\") {\n        result = tokenValue;\n    } else if (count === 1) {\n        result = tokenValue.one;\n    } else {\n        result = tokenValue.other.replace(\"{{count}}\", count.toString());\n    }\n    if (options?.addSuffix) {\n        if (options.comparison && options.comparison > 0) {\n            return \"in \" + result;\n        } else {\n            return result + \" ago\";\n        }\n    }\n    return result;\n};\nfunction buildFormatLongFn(args) {\n    return (options = {})=>{\n        // TODO: Remove String()\n        const width = options.width ? String(options.width) : args.defaultWidth;\n        const format = args.formats[width] || args.formats[args.defaultWidth];\n        return format;\n    };\n}\nconst dateFormats = {\n    full: \"EEEE, MMMM do, y\",\n    long: \"MMMM do, y\",\n    medium: \"MMM d, y\",\n    short: \"MM/dd/yyyy\"\n};\nconst timeFormats = {\n    full: \"h:mm:ss a zzzz\",\n    long: \"h:mm:ss a z\",\n    medium: \"h:mm:ss a\",\n    short: \"h:mm a\"\n};\nconst dateTimeFormats = {\n    full: \"{{date}} 'at' {{time}}\",\n    long: \"{{date}} 'at' {{time}}\",\n    medium: \"{{date}}, {{time}}\",\n    short: \"{{date}}, {{time}}\"\n};\nconst formatLong = {\n    date: buildFormatLongFn({\n        formats: dateFormats,\n        defaultWidth: \"full\"\n    }),\n    time: buildFormatLongFn({\n        formats: timeFormats,\n        defaultWidth: \"full\"\n    }),\n    dateTime: buildFormatLongFn({\n        formats: dateTimeFormats,\n        defaultWidth: \"full\"\n    })\n};\nconst formatRelativeLocale = {\n    lastWeek: \"'last' eeee 'at' p\",\n    yesterday: \"'yesterday at' p\",\n    today: \"'today at' p\",\n    tomorrow: \"'tomorrow at' p\",\n    nextWeek: \"eeee 'at' p\",\n    other: \"P\"\n};\nconst formatRelative = (token, _date, _baseDate, _options)=>formatRelativeLocale[token];\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */ /**\n * The map of localized values for each width.\n */ /**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */ /**\n * Converts the unit value to the tuple of values.\n */ /**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */ /**\n * The tuple of localized quarter values. The first element represents Q1.\n */ /**\n * The tuple of localized day values. The first element represents Sunday.\n */ /**\n * The tuple of localized month values. The first element represents January.\n */ function buildLocalizeFn(args) {\n    return (value, options)=>{\n        const context = options?.context ? String(options.context) : \"standalone\";\n        let valuesArray;\n        if (context === \"formatting\" && args.formattingValues) {\n            const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n            const width = options?.width ? String(options.width) : defaultWidth;\n            valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n        } else {\n            const defaultWidth = args.defaultWidth;\n            const width = options?.width ? String(options.width) : args.defaultWidth;\n            valuesArray = args.values[width] || args.values[defaultWidth];\n        }\n        const index = args.argumentCallback ? args.argumentCallback(value) : value;\n        // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n        return valuesArray[index];\n    };\n}\nconst eraValues = {\n    narrow: [\n        \"B\",\n        \"A\"\n    ],\n    abbreviated: [\n        \"BC\",\n        \"AD\"\n    ],\n    wide: [\n        \"Before Christ\",\n        \"Anno Domini\"\n    ]\n};\nconst quarterValues = {\n    narrow: [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\"\n    ],\n    abbreviated: [\n        \"Q1\",\n        \"Q2\",\n        \"Q3\",\n        \"Q4\"\n    ],\n    wide: [\n        \"1st quarter\",\n        \"2nd quarter\",\n        \"3rd quarter\",\n        \"4th quarter\"\n    ]\n};\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n    narrow: [\n        \"J\",\n        \"F\",\n        \"M\",\n        \"A\",\n        \"M\",\n        \"J\",\n        \"J\",\n        \"A\",\n        \"S\",\n        \"O\",\n        \"N\",\n        \"D\"\n    ],\n    abbreviated: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n    ],\n    wide: [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ]\n};\nconst dayValues = {\n    narrow: [\n        \"S\",\n        \"M\",\n        \"T\",\n        \"W\",\n        \"T\",\n        \"F\",\n        \"S\"\n    ],\n    short: [\n        \"Su\",\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\"\n    ],\n    abbreviated: [\n        \"Sun\",\n        \"Mon\",\n        \"Tue\",\n        \"Wed\",\n        \"Thu\",\n        \"Fri\",\n        \"Sat\"\n    ],\n    wide: [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\"\n    ]\n};\nconst dayPeriodValues = {\n    narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    },\n    abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    },\n    wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n    }\n};\nconst formattingDayPeriodValues = {\n    narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    },\n    abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    },\n    wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n    }\n};\nconst ordinalNumber = (dirtyNumber, _options)=>{\n    const number = Number(dirtyNumber);\n    // If ordinal numbers depend on context, for example,\n    // if they are different for different grammatical genders,\n    // use `options.unit`.\n    //\n    // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n    // 'day', 'hour', 'minute', 'second'.\n    const rem100 = number % 100;\n    if (rem100 > 20 || rem100 < 10) {\n        switch(rem100 % 10){\n            case 1:\n                return number + \"st\";\n            case 2:\n                return number + \"nd\";\n            case 3:\n                return number + \"rd\";\n        }\n    }\n    return number + \"th\";\n};\nconst localize = {\n    ordinalNumber,\n    era: buildLocalizeFn({\n        values: eraValues,\n        defaultWidth: \"wide\"\n    }),\n    quarter: buildLocalizeFn({\n        values: quarterValues,\n        defaultWidth: \"wide\",\n        argumentCallback: (quarter)=>quarter - 1\n    }),\n    month: buildLocalizeFn({\n        values: monthValues,\n        defaultWidth: \"wide\"\n    }),\n    day: buildLocalizeFn({\n        values: dayValues,\n        defaultWidth: \"wide\"\n    }),\n    dayPeriod: buildLocalizeFn({\n        values: dayPeriodValues,\n        defaultWidth: \"wide\",\n        formattingValues: formattingDayPeriodValues,\n        defaultFormattingWidth: \"wide\"\n    })\n};\nfunction buildMatchFn(args) {\n    return (string, options = {})=>{\n        const width = options.width;\n        const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n        const matchResult = string.match(matchPattern);\n        if (!matchResult) {\n            return null;\n        }\n        const matchedString = matchResult[0];\n        const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n        const key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, (pattern)=>pattern.test(matchedString)) : findKey(parsePatterns, (pattern)=>pattern.test(matchedString));\n        let value;\n        value = args.valueCallback ? args.valueCallback(key) : key;\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        const rest = string.slice(matchedString.length);\n        return {\n            value,\n            rest\n        };\n    };\n}\nfunction findKey(object, predicate) {\n    for(const key in object){\n        if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {\n            return key;\n        }\n    }\n    return undefined;\n}\nfunction findIndex(array, predicate) {\n    for(let key = 0; key < array.length; key++){\n        if (predicate(array[key])) {\n            return key;\n        }\n    }\n    return undefined;\n}\nfunction buildMatchPatternFn(args) {\n    return (string, options = {})=>{\n        const matchResult = string.match(args.matchPattern);\n        if (!matchResult) return null;\n        const matchedString = matchResult[0];\n        const parseResult = string.match(args.parsePattern);\n        if (!parseResult) return null;\n        let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n        // [TODO] I challenge you to fix the type\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        const rest = string.slice(matchedString.length);\n        return {\n            value,\n            rest\n        };\n    };\n}\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\nconst matchEraPatterns = {\n    narrow: /^(b|a)/i,\n    abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n    wide: /^(before christ|before common era|anno domini|common era)/i\n};\nconst parseEraPatterns = {\n    any: [\n        /^b/i,\n        /^(a|c)/i\n    ]\n};\nconst matchQuarterPatterns = {\n    narrow: /^[1234]/i,\n    abbreviated: /^q[1234]/i,\n    wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nconst parseQuarterPatterns = {\n    any: [\n        /1/i,\n        /2/i,\n        /3/i,\n        /4/i\n    ]\n};\nconst matchMonthPatterns = {\n    narrow: /^[jfmasond]/i,\n    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nconst parseMonthPatterns = {\n    narrow: [\n        /^j/i,\n        /^f/i,\n        /^m/i,\n        /^a/i,\n        /^m/i,\n        /^j/i,\n        /^j/i,\n        /^a/i,\n        /^s/i,\n        /^o/i,\n        /^n/i,\n        /^d/i\n    ],\n    any: [\n        /^ja/i,\n        /^f/i,\n        /^mar/i,\n        /^ap/i,\n        /^may/i,\n        /^jun/i,\n        /^jul/i,\n        /^au/i,\n        /^s/i,\n        /^o/i,\n        /^n/i,\n        /^d/i\n    ]\n};\nconst matchDayPatterns = {\n    narrow: /^[smtwf]/i,\n    short: /^(su|mo|tu|we|th|fr|sa)/i,\n    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nconst parseDayPatterns = {\n    narrow: [\n        /^s/i,\n        /^m/i,\n        /^t/i,\n        /^w/i,\n        /^t/i,\n        /^f/i,\n        /^s/i\n    ],\n    any: [\n        /^su/i,\n        /^m/i,\n        /^tu/i,\n        /^w/i,\n        /^th/i,\n        /^f/i,\n        /^sa/i\n    ]\n};\nconst matchDayPeriodPatterns = {\n    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n    any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nconst parseDayPeriodPatterns = {\n    any: {\n        am: /^a/i,\n        pm: /^p/i,\n        midnight: /^mi/i,\n        noon: /^no/i,\n        morning: /morning/i,\n        afternoon: /afternoon/i,\n        evening: /evening/i,\n        night: /night/i\n    }\n};\nconst match = {\n    ordinalNumber: buildMatchPatternFn({\n        matchPattern: matchOrdinalNumberPattern,\n        parsePattern: parseOrdinalNumberPattern,\n        valueCallback: (value)=>parseInt(value, 10)\n    }),\n    era: buildMatchFn({\n        matchPatterns: matchEraPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseEraPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    quarter: buildMatchFn({\n        matchPatterns: matchQuarterPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseQuarterPatterns,\n        defaultParseWidth: \"any\",\n        valueCallback: (index)=>index + 1\n    }),\n    month: buildMatchFn({\n        matchPatterns: matchMonthPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseMonthPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    day: buildMatchFn({\n        matchPatterns: matchDayPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseDayPatterns,\n        defaultParseWidth: \"any\"\n    }),\n    dayPeriod: buildMatchFn({\n        matchPatterns: matchDayPeriodPatterns,\n        defaultMatchWidth: \"any\",\n        parsePatterns: parseDayPeriodPatterns,\n        defaultParseWidth: \"any\"\n    })\n};\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */ const enUS = {\n    code: \"en-US\",\n    formatDistance: formatDistance,\n    formatLong: formatLong,\n    formatRelative: formatRelative,\n    localize: localize,\n    match: match,\n    options: {\n        weekStartsOn: 0 /* Sunday */ ,\n        firstWeekContainsDate: 1\n    }\n};\nconst FIVE_WEEKS = 5;\nconst FOUR_WEEKS = 4;\n/**\n * Returns the number of weeks to display in the broadcast calendar for a given\n * month.\n *\n * The broadcast calendar may have either 4 or 5 weeks in a month, depending on\n * the start and end dates of the broadcast weeks.\n *\n * @since 9.4.0\n * @param month The month for which to calculate the number of weeks.\n * @param dateLib The date library to use for date manipulation.\n * @returns The number of weeks in the broadcast calendar (4 or 5).\n */ function getBroadcastWeeksInMonth(month, dateLib) {\n    // Get the first day of the month\n    const firstDayOfMonth = dateLib.startOfMonth(month);\n    // Get the day of the week for the first day of the month (1-7, where 1 is Monday)\n    const firstDayOfWeek = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7;\n    const broadcastStartDate = dateLib.addDays(month, -firstDayOfWeek + 1);\n    const lastDateOfLastWeek = dateLib.addDays(broadcastStartDate, FIVE_WEEKS * 7 - 1);\n    const numberOfWeeks = dateLib.getMonth(month) === dateLib.getMonth(lastDateOfLastWeek) ? FIVE_WEEKS : FOUR_WEEKS;\n    return numberOfWeeks;\n}\n/**\n * Returns the start date of the week in the broadcast calendar.\n *\n * The broadcast week starts on Monday. If the first day of the month is not a\n * Monday, this function calculates the previous Monday as the start of the\n * broadcast week.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the start of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The start date of the broadcast week.\n */ function startOfBroadcastWeek(date, dateLib) {\n    const firstOfMonth = dateLib.startOfMonth(date);\n    const dayOfWeek = firstOfMonth.getDay();\n    if (dayOfWeek === 1) {\n        return firstOfMonth;\n    } else if (dayOfWeek === 0) {\n        return dateLib.addDays(firstOfMonth, -1 * 6);\n    } else {\n        return dateLib.addDays(firstOfMonth, -1 * (dayOfWeek - 1));\n    }\n}\n/**\n * Returns the end date of the week in the broadcast calendar.\n *\n * The broadcast week ends on the last day of the last broadcast week for the\n * given date.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the end of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The end date of the broadcast week.\n */ function endOfBroadcastWeek(date, dateLib) {\n    const startDate = startOfBroadcastWeek(date, dateLib);\n    const numberOfWeeks = getBroadcastWeeksInMonth(date, dateLib);\n    const endDate = dateLib.addDays(startDate, numberOfWeeks * 7 - 1);\n    return endDate;\n}\n/**\n * A wrapper class around [date-fns](http://date-fns.org) that provides utility\n * methods for date manipulation and formatting.\n *\n * @since 9.2.0\n * @example\n *   const dateLib = new DateLib({ locale: es });\n *   const newDate = dateLib.addDays(new Date(), 5);\n */ class DateLib {\n    /**\n     * Generates a mapping of Arabic digits (0-9) to the target numbering system\n     * digits.\n     *\n     * @since 9.5.0\n     * @returns A record mapping Arabic digits to the target numerals.\n     */ getDigitMap() {\n        const { numerals = \"latn\" } = this.options;\n        // Use Intl.NumberFormat to create a formatter with the specified numbering system\n        const formatter = new Intl.NumberFormat(\"en-US\", {\n            numberingSystem: numerals\n        });\n        // Map Arabic digits (0-9) to the target numerals\n        const digitMap = {};\n        for(let i = 0; i < 10; i++){\n            digitMap[i.toString()] = formatter.format(i);\n        }\n        return digitMap;\n    }\n    /**\n     * Replaces Arabic digits in a string with the target numbering system digits.\n     *\n     * @since 9.5.0\n     * @param input The string containing Arabic digits.\n     * @returns The string with digits replaced.\n     */ replaceDigits(input) {\n        const digitMap = this.getDigitMap();\n        return input.replace(/\\d/g, (digit)=>digitMap[digit] || digit);\n    }\n    /**\n     * Formats a number using the configured numbering system.\n     *\n     * @since 9.5.0\n     * @param value The number to format.\n     * @returns The formatted number as a string.\n     */ formatNumber(value) {\n        return this.replaceDigits(value.toString());\n    }\n    /**\n     * Creates an instance of `DateLib`.\n     *\n     * @param options Configuration options for the date library.\n     * @param overrides Custom overrides for the date library functions.\n     */ constructor(options, overrides){\n        /**\n         * Reference to the built-in Date constructor.\n         *\n         * @deprecated Use `newDate()` or `today()`.\n         */ this.Date = Date;\n        /**\n         * Creates a new `Date` object representing today's date.\n         *\n         * @since 9.5.0\n         * @returns A `Date` object for today's date.\n         */ this.today = ()=>{\n            if (this.overrides?.today) {\n                return this.overrides.today();\n            }\n            if (this.options.timeZone) {\n                return TZDate.tz(this.options.timeZone);\n            }\n            return new this.Date();\n        };\n        /**\n         * Creates a new `Date` object with the specified year, month, and day.\n         *\n         * @since 9.5.0\n         * @param year The year.\n         * @param monthIndex The month (0-11).\n         * @param date The day of the month.\n         * @returns A new `Date` object.\n         */ this.newDate = (year, monthIndex, date)=>{\n            if (this.overrides?.newDate) {\n                return this.overrides.newDate(year, monthIndex, date);\n            }\n            if (this.options.timeZone) {\n                return new TZDate(year, monthIndex, date, this.options.timeZone);\n            }\n            return new Date(year, monthIndex, date);\n        };\n        /**\n         * Adds the specified number of days to the given date.\n         *\n         * @param date The date to add days to.\n         * @param amount The number of days to add.\n         * @returns The new date with the days added.\n         */ this.addDays = (date, amount)=>{\n            return this.overrides?.addDays ? this.overrides.addDays(date, amount) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_6__.addDays)(date, amount);\n        };\n        /**\n         * Adds the specified number of months to the given date.\n         *\n         * @param date The date to add months to.\n         * @param amount The number of months to add.\n         * @returns The new date with the months added.\n         */ this.addMonths = (date, amount)=>{\n            return this.overrides?.addMonths ? this.overrides.addMonths(date, amount) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_7__.addMonths)(date, amount);\n        };\n        /**\n         * Adds the specified number of weeks to the given date.\n         *\n         * @param date The date to add weeks to.\n         * @param amount The number of weeks to add.\n         * @returns The new date with the weeks added.\n         */ this.addWeeks = (date, amount)=>{\n            return this.overrides?.addWeeks ? this.overrides.addWeeks(date, amount) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_8__.addWeeks)(date, amount);\n        };\n        /**\n         * Adds the specified number of years to the given date.\n         *\n         * @param date The date to add years to.\n         * @param amount The number of years to add.\n         * @returns The new date with the years added.\n         */ this.addYears = (date, amount)=>{\n            return this.overrides?.addYears ? this.overrides.addYears(date, amount) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_9__.addYears)(date, amount);\n        };\n        /**\n         * Returns the number of calendar days between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar days between the dates.\n         */ this.differenceInCalendarDays = (dateLeft, dateRight)=>{\n            return this.overrides?.differenceInCalendarDays ? this.overrides.differenceInCalendarDays(dateLeft, dateRight) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarDays)(dateLeft, dateRight);\n        };\n        /**\n         * Returns the number of calendar months between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar months between the dates.\n         */ this.differenceInCalendarMonths = (dateLeft, dateRight)=>{\n            return this.overrides?.differenceInCalendarMonths ? this.overrides.differenceInCalendarMonths(dateLeft, dateRight) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_11__.differenceInCalendarMonths)(dateLeft, dateRight);\n        };\n        /**\n         * Returns the months between the given dates.\n         *\n         * @param interval The interval to get the months for.\n         */ this.eachMonthOfInterval = (interval)=>{\n            return this.overrides?.eachMonthOfInterval ? this.overrides.eachMonthOfInterval(interval) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_12__.eachMonthOfInterval)(interval);\n        };\n        /**\n         * Returns the end of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the broadcast week.\n         */ this.endOfBroadcastWeek = (date)=>{\n            return this.overrides?.endOfBroadcastWeek ? this.overrides.endOfBroadcastWeek(date) : endOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the end of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the ISO week.\n         */ this.endOfISOWeek = (date)=>{\n            return this.overrides?.endOfISOWeek ? this.overrides.endOfISOWeek(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_13__.endOfISOWeek)(date);\n        };\n        /**\n         * Returns the end of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the month.\n         */ this.endOfMonth = (date)=>{\n            return this.overrides?.endOfMonth ? this.overrides.endOfMonth(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_14__.endOfMonth)(date);\n        };\n        /**\n         * Returns the end of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the week.\n         */ this.endOfWeek = (date, options)=>{\n            return this.overrides?.endOfWeek ? this.overrides.endOfWeek(date, options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_15__.endOfWeek)(date, this.options);\n        };\n        /**\n         * Returns the end of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the year.\n         */ this.endOfYear = (date)=>{\n            return this.overrides?.endOfYear ? this.overrides.endOfYear(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_16__.endOfYear)(date);\n        };\n        /**\n         * Formats the given date using the specified format string.\n         *\n         * @param date The date to format.\n         * @param formatStr The format string.\n         * @returns The formatted date string.\n         */ this.format = (date, formatStr, _options)=>{\n            const formatted = this.overrides?.format ? this.overrides.format(date, formatStr, this.options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_17__.format)(date, formatStr, this.options);\n            if (this.options.numerals && this.options.numerals !== \"latn\") {\n                return this.replaceDigits(formatted);\n            }\n            return formatted;\n        };\n        /**\n         * Returns the ISO week number for the given date.\n         *\n         * @param date The date to get the ISO week number for.\n         * @returns The ISO week number.\n         */ this.getISOWeek = (date)=>{\n            return this.overrides?.getISOWeek ? this.overrides.getISOWeek(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_18__.getISOWeek)(date);\n        };\n        /**\n         * Returns the month of the given date.\n         *\n         * @param date The date to get the month for.\n         * @returns The month.\n         */ this.getMonth = (date, _options)=>{\n            return this.overrides?.getMonth ? this.overrides.getMonth(date, this.options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_19__.getMonth)(date, this.options);\n        };\n        /**\n         * Returns the year of the given date.\n         *\n         * @param date The date to get the year for.\n         * @returns The year.\n         */ this.getYear = (date, _options)=>{\n            return this.overrides?.getYear ? this.overrides.getYear(date, this.options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_20__.getYear)(date, this.options);\n        };\n        /**\n         * Returns the local week number for the given date.\n         *\n         * @param date The date to get the week number for.\n         * @returns The week number.\n         */ this.getWeek = (date, _options)=>{\n            return this.overrides?.getWeek ? this.overrides.getWeek(date, this.options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_21__.getWeek)(date, this.options);\n        };\n        /**\n         * Checks if the first date is after the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is after the second date.\n         */ this.isAfter = (date, dateToCompare)=>{\n            return this.overrides?.isAfter ? this.overrides.isAfter(date, dateToCompare) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_22__.isAfter)(date, dateToCompare);\n        };\n        /**\n         * Checks if the first date is before the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is before the second date.\n         */ this.isBefore = (date, dateToCompare)=>{\n            return this.overrides?.isBefore ? this.overrides.isBefore(date, dateToCompare) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_23__.isBefore)(date, dateToCompare);\n        };\n        /**\n         * Checks if the given value is a Date object.\n         *\n         * @param value The value to check.\n         * @returns True if the value is a Date object.\n         */ this.isDate = (value)=>{\n            return this.overrides?.isDate ? this.overrides.isDate(value) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_24__.isDate)(value);\n        };\n        /**\n         * Checks if the given dates are on the same day.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are on the same day.\n         */ this.isSameDay = (dateLeft, dateRight)=>{\n            return this.overrides?.isSameDay ? this.overrides.isSameDay(dateLeft, dateRight) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same month.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same month.\n         */ this.isSameMonth = (dateLeft, dateRight)=>{\n            return this.overrides?.isSameMonth ? this.overrides.isSameMonth(dateLeft, dateRight) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_26__.isSameMonth)(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same year.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same year.\n         */ this.isSameYear = (dateLeft, dateRight)=>{\n            return this.overrides?.isSameYear ? this.overrides.isSameYear(dateLeft, dateRight) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_27__.isSameYear)(dateLeft, dateRight);\n        };\n        /**\n         * Returns the latest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The latest date.\n         */ this.max = (dates)=>{\n            return this.overrides?.max ? this.overrides.max(dates) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_28__.max)(dates);\n        };\n        /**\n         * Returns the earliest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The earliest date.\n         */ this.min = (dates)=>{\n            return this.overrides?.min ? this.overrides.min(dates) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_29__.min)(dates);\n        };\n        /**\n         * Sets the month of the given date.\n         *\n         * @param date The date to set the month on.\n         * @param month The month to set (0-11).\n         * @returns The new date with the month set.\n         */ this.setMonth = (date, month)=>{\n            return this.overrides?.setMonth ? this.overrides.setMonth(date, month) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_30__.setMonth)(date, month);\n        };\n        /**\n         * Sets the year of the given date.\n         *\n         * @param date The date to set the year on.\n         * @param year The year to set.\n         * @returns The new date with the year set.\n         */ this.setYear = (date, year)=>{\n            return this.overrides?.setYear ? this.overrides.setYear(date, year) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_31__.setYear)(date, year);\n        };\n        /**\n         * Returns the start of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the broadcast week.\n         */ this.startOfBroadcastWeek = (date, _dateLib)=>{\n            return this.overrides?.startOfBroadcastWeek ? this.overrides.startOfBroadcastWeek(date, this) : startOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the start of the day for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the day.\n         */ this.startOfDay = (date)=>{\n            return this.overrides?.startOfDay ? this.overrides.startOfDay(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_32__.startOfDay)(date);\n        };\n        /**\n         * Returns the start of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the ISO week.\n         */ this.startOfISOWeek = (date)=>{\n            return this.overrides?.startOfISOWeek ? this.overrides.startOfISOWeek(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_33__.startOfISOWeek)(date);\n        };\n        /**\n         * Returns the start of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the month.\n         */ this.startOfMonth = (date)=>{\n            return this.overrides?.startOfMonth ? this.overrides.startOfMonth(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_34__.startOfMonth)(date);\n        };\n        /**\n         * Returns the start of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the week.\n         */ this.startOfWeek = (date, _options)=>{\n            return this.overrides?.startOfWeek ? this.overrides.startOfWeek(date, this.options) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_35__.startOfWeek)(date, this.options);\n        };\n        /**\n         * Returns the start of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the year.\n         */ this.startOfYear = (date)=>{\n            return this.overrides?.startOfYear ? this.overrides.startOfYear(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_36__.startOfYear)(date);\n        };\n        this.options = {\n            locale: enUS,\n            ...options\n        };\n        this.overrides = overrides;\n    }\n}\n/**\n * The default date library with English locale.\n *\n * @since 9.2.0\n */ const defaultDateLib = new DateLib();\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */ class CalendarDay {\n    /**\n     * Checks if this day is equal to another `CalendarDay`, considering both the\n     * date and the displayed month.\n     *\n     * @param day The `CalendarDay` to compare with.\n     * @returns `true` if the days are equal, otherwise `false`.\n     */ isEqualTo(day) {\n        return this.dateLib.isSameDay(day.date, this.date) && this.dateLib.isSameMonth(day.displayMonth, this.displayMonth);\n    }\n    constructor(date, displayMonth, dateLib = defaultDateLib){\n        this.date = date;\n        this.displayMonth = displayMonth;\n        this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n        this.dateLib = dateLib;\n    }\n}\n/**\n * Represents a month in a calendar year.\n *\n * A `CalendarMonth` contains the weeks within the month and the date of the\n * month.\n */ class CalendarMonth {\n    constructor(month, weeks){\n        this.date = month;\n        this.weeks = weeks;\n    }\n}\n/**\n * Represents a week in a calendar month.\n *\n * A `CalendarWeek` contains the days within the week and the week number.\n */ class CalendarWeek {\n    constructor(weekNumber, days){\n        this.days = days;\n        this.weekNumber = weekNumber;\n    }\n}\n/**\n * Render the button elements in the calendar.\n *\n * @private\n * @deprecated Use `PreviousMonthButton` or `@link NextMonthButton` instead.\n */ function Button(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"button\", {\n        ...props\n    });\n}\n/**\n * Render the label in the month caption.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function CaptionLabel(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        ...props\n    });\n}\n/**\n * Render the chevron icon used in the navigation buttons and dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Chevron(props) {\n    const { size = 24, orientation = \"left\", className } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", {\n        className: className,\n        width: size,\n        height: size,\n        viewBox: \"0 0 24 24\"\n    }, orientation === \"up\" && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"polygon\", {\n        points: \"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28\"\n    }), orientation === \"down\" && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"polygon\", {\n        points: \"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72\"\n    }), orientation === \"left\" && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"polygon\", {\n        points: \"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20\"\n    }), orientation === \"right\" && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"polygon\", {\n        points: \"8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20\"\n    }));\n}\n/**\n * Render a grid cell for a specific day in the calendar.\n *\n * Handles interaction and focus for the day. If you only need to change the\n * content of the day cell, consider swapping the `DayButton` component\n * instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Day(props) {\n    const { day, modifiers, ...tdProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"td\", {\n        ...tdProps\n    });\n}\n/**\n * Render a button for a specific day in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function DayButton(props) {\n    const { day, modifiers, ...buttonProps } = props;\n    const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect({\n        \"DayButton.useEffect\": ()=>{\n            if (modifiers.focused) ref.current?.focus();\n        }\n    }[\"DayButton.useEffect\"], [\n        modifiers.focused\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"button\", {\n        ref: ref,\n        ...buttonProps\n    });\n}\n/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */ var UI;\n(function(UI) {\n    /** The root component displaying the months and the navigation bar. */ UI[\"Root\"] = \"root\";\n    /** The Chevron SVG element used by navigation buttons and dropdowns. */ UI[\"Chevron\"] = \"chevron\";\n    /**\n     * The grid cell with the day's date. Extended by {@link DayFlag} and\n     * {@link SelectionState}.\n     */ UI[\"Day\"] = \"day\";\n    /** The button containing the formatted day's date, inside the grid cell. */ UI[\"DayButton\"] = \"day_button\";\n    /** The caption label of the month (when not showing the dropdown navigation). */ UI[\"CaptionLabel\"] = \"caption_label\";\n    /** The container of the dropdown navigation (when enabled). */ UI[\"Dropdowns\"] = \"dropdowns\";\n    /** The dropdown element to select for years and months. */ UI[\"Dropdown\"] = \"dropdown\";\n    /** The container element of the dropdown. */ UI[\"DropdownRoot\"] = \"dropdown_root\";\n    /** The root element of the footer. */ UI[\"Footer\"] = \"footer\";\n    /** The month grid. */ UI[\"MonthGrid\"] = \"month_grid\";\n    /** Contains the dropdown navigation or the caption label. */ UI[\"MonthCaption\"] = \"month_caption\";\n    /** The dropdown with the months. */ UI[\"MonthsDropdown\"] = \"months_dropdown\";\n    /** Wrapper of the month grid. */ UI[\"Month\"] = \"month\";\n    /** The container of the displayed months. */ UI[\"Months\"] = \"months\";\n    /** The navigation bar with the previous and next buttons. */ UI[\"Nav\"] = \"nav\";\n    /**\n     * The next month button in the navigation. *\n     *\n     * @since 9.1.0\n     */ UI[\"NextMonthButton\"] = \"button_next\";\n    /**\n     * The previous month button in the navigation.\n     *\n     * @since 9.1.0\n     */ UI[\"PreviousMonthButton\"] = \"button_previous\";\n    /** The row containing the week. */ UI[\"Week\"] = \"week\";\n    /** The group of row weeks in a month (`tbody`). */ UI[\"Weeks\"] = \"weeks\";\n    /** The column header with the weekday. */ UI[\"Weekday\"] = \"weekday\";\n    /** The row grouping the weekdays in the column headers. */ UI[\"Weekdays\"] = \"weekdays\";\n    /** The cell containing the week number. */ UI[\"WeekNumber\"] = \"week_number\";\n    /** The cell header of the week numbers column. */ UI[\"WeekNumberHeader\"] = \"week_number_header\";\n    /** The dropdown with the years. */ UI[\"YearsDropdown\"] = \"years_dropdown\";\n})(UI || (UI = {}));\n/** Enum representing flags for the {@link UI.Day} element. */ var DayFlag;\n(function(DayFlag) {\n    /** The day is disabled. */ DayFlag[\"disabled\"] = \"disabled\";\n    /** The day is hidden. */ DayFlag[\"hidden\"] = \"hidden\";\n    /** The day is outside the current month. */ DayFlag[\"outside\"] = \"outside\";\n    /** The day is focused. */ DayFlag[\"focused\"] = \"focused\";\n    /** The day is today. */ DayFlag[\"today\"] = \"today\";\n})(DayFlag || (DayFlag = {}));\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */ var SelectionState;\n(function(SelectionState) {\n    /** The day is at the end of a selected range. */ SelectionState[\"range_end\"] = \"range_end\";\n    /** The day is at the middle of a selected range. */ SelectionState[\"range_middle\"] = \"range_middle\";\n    /** The day is at the start of a selected range. */ SelectionState[\"range_start\"] = \"range_start\";\n    /** The day is selected. */ SelectionState[\"selected\"] = \"selected\";\n})(SelectionState || (SelectionState = {}));\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */ var Animation;\n(function(Animation) {\n    /** The entering weeks when they appear before the exiting month. */ Animation[\"weeks_before_enter\"] = \"weeks_before_enter\";\n    /** The exiting weeks when they disappear before the entering month. */ Animation[\"weeks_before_exit\"] = \"weeks_before_exit\";\n    /** The entering weeks when they appear after the exiting month. */ Animation[\"weeks_after_enter\"] = \"weeks_after_enter\";\n    /** The exiting weeks when they disappear after the entering month. */ Animation[\"weeks_after_exit\"] = \"weeks_after_exit\";\n    /** The entering caption when it appears after the exiting month. */ Animation[\"caption_after_enter\"] = \"caption_after_enter\";\n    /** The exiting caption when it disappears after the entering month. */ Animation[\"caption_after_exit\"] = \"caption_after_exit\";\n    /** The entering caption when it appears before the exiting month. */ Animation[\"caption_before_enter\"] = \"caption_before_enter\";\n    /** The exiting caption when it disappears before the entering month. */ Animation[\"caption_before_exit\"] = \"caption_before_exit\";\n})(Animation || (Animation = {}));\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Dropdown(props) {\n    const { options, className, components, classNames, ...selectProps } = props;\n    const cssClassSelect = [\n        classNames[UI.Dropdown],\n        className\n    ].join(\" \");\n    const selectedOption = options?.find(({ value })=>value === selectProps.value);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        \"data-disabled\": selectProps.disabled,\n        className: classNames[UI.DropdownRoot]\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Select, {\n        className: cssClassSelect,\n        ...selectProps\n    }, options?.map(({ value, label, disabled })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Option, {\n            key: value,\n            value: value,\n            disabled: disabled\n        }, label))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        className: classNames[UI.CaptionLabel],\n        \"aria-hidden\": true\n    }, selectedOption?.label, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Chevron, {\n        orientation: \"down\",\n        size: 18,\n        className: classNames[UI.Chevron]\n    })));\n}\n/**\n * Render the navigation dropdowns for the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function DropdownNav(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...props\n    });\n}\n/**\n * Render the footer of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Footer(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...props\n    });\n}\n/**\n * Render the grid with the weekday header row and the weeks for a specific\n * month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Month(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...divProps\n    }, props.children);\n}\n/**\n * Render the caption for a month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function MonthCaption(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...divProps\n    });\n}\n/**\n * Render the grid of days for a specific month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function MonthGrid(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"table\", {\n        ...props\n    });\n}\n/**\n * Render a container wrapping the month grids.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Months(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...props\n    });\n}\n/** @ignore */ const dayPickerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n/**\n * Provides access to the DayPicker context, which includes properties and\n * methods to interact with the DayPicker component. This hook must be used\n * within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */ function useDayPicker() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(dayPickerContext);\n    if (context === undefined) {\n        throw new Error(\"useDayPicker() must be used within a custom component.\");\n    }\n    return context;\n}\n/**\n * Render a dropdown to navigate between months in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function MonthsDropdown(props) {\n    const { components } = useDayPicker();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Dropdown, {\n        ...props\n    });\n}\n/**\n * Render the navigation toolbar with buttons to navigate between months.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Nav(props) {\n    const { onPreviousClick, onNextClick, previousMonth, nextMonth, ...navProps } = props;\n    const { components, classNames, labels: { labelPrevious, labelNext } } = useDayPicker();\n    const handleNextClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Nav.useCallback[handleNextClick]\": (e)=>{\n            if (nextMonth) {\n                onNextClick?.(e);\n            }\n        }\n    }[\"Nav.useCallback[handleNextClick]\"], [\n        nextMonth,\n        onNextClick\n    ]);\n    const handlePreviousClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Nav.useCallback[handlePreviousClick]\": (e)=>{\n            if (previousMonth) {\n                onPreviousClick?.(e);\n            }\n        }\n    }[\"Nav.useCallback[handlePreviousClick]\"], [\n        previousMonth,\n        onPreviousClick\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"nav\", {\n        ...navProps\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.PreviousMonthButton, {\n        type: \"button\",\n        className: classNames[UI.PreviousMonthButton],\n        tabIndex: previousMonth ? undefined : -1,\n        \"aria-disabled\": previousMonth ? undefined : true,\n        \"aria-label\": labelPrevious(previousMonth),\n        onClick: handlePreviousClick\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Chevron, {\n        disabled: previousMonth ? undefined : true,\n        className: classNames[UI.Chevron],\n        orientation: \"left\"\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.NextMonthButton, {\n        type: \"button\",\n        className: classNames[UI.NextMonthButton],\n        tabIndex: nextMonth ? undefined : -1,\n        \"aria-disabled\": nextMonth ? undefined : true,\n        \"aria-label\": labelNext(nextMonth),\n        onClick: handleNextClick\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Chevron, {\n        disabled: nextMonth ? undefined : true,\n        orientation: \"right\",\n        className: classNames[UI.Chevron]\n    })));\n}\n/**\n * Render the button to navigate to the next month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function NextMonthButton(props) {\n    const { components } = useDayPicker();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Button, {\n        ...props\n    });\n}\n/**\n * Render an `option` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Option(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"option\", {\n        ...props\n    });\n}\n/**\n * Render the button to navigate to the previous month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function PreviousMonthButton(props) {\n    const { components } = useDayPicker();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Button, {\n        ...props\n    });\n}\n/**\n * Render the root element of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Root$1(props) {\n    const { rootRef, ...rest } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ...rest,\n        ref: rootRef\n    });\n}\n/**\n * Render a `select` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Select(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"select\", {\n        ...props\n    });\n}\n/**\n * Render a table row representing a week in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Week(props) {\n    const { week, ...trProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"tr\", {\n        ...trProps\n    });\n}\n/**\n * Render a table header cell with the name of a weekday (e.g., \"Mo\", \"Tu\").\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Weekday(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"th\", {\n        ...props\n    });\n}\n/**\n * Render the table row containing the weekday names.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Weekdays(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"thead\", {\n        \"aria-hidden\": true\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"tr\", {\n        ...props\n    }));\n}\n/**\n * Render a table cell displaying the number of the week.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function WeekNumber(props) {\n    const { week, ...thProps } = props;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"th\", {\n        ...thProps\n    });\n}\n/**\n * Render the header cell for the week numbers column.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function WeekNumberHeader(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"th\", {\n        ...props\n    });\n}\n/**\n * Render the container for the weeks in the month grid.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function Weeks(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"tbody\", {\n        ...props\n    });\n}\n/**\n * Render a dropdown to navigate between years in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */ function YearsDropdown(props) {\n    const { components } = useDayPicker();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Dropdown, {\n        ...props\n    });\n}\nvar components = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Button: Button,\n    CaptionLabel: CaptionLabel,\n    Chevron: Chevron,\n    Day: Day,\n    DayButton: DayButton,\n    Dropdown: Dropdown,\n    DropdownNav: DropdownNav,\n    Footer: Footer,\n    Month: Month,\n    MonthCaption: MonthCaption,\n    MonthGrid: MonthGrid,\n    Months: Months,\n    MonthsDropdown: MonthsDropdown,\n    Nav: Nav,\n    NextMonthButton: NextMonthButton,\n    Option: Option,\n    PreviousMonthButton: PreviousMonthButton,\n    Root: Root$1,\n    Select: Select,\n    Week: Week,\n    WeekNumber: WeekNumber,\n    WeekNumberHeader: WeekNumberHeader,\n    Weekday: Weekday,\n    Weekdays: Weekdays,\n    Weeks: Weeks,\n    YearsDropdown: YearsDropdown\n});\n/**\n * Checks if a given date is within a specified date range.\n *\n * @since 9.0.0\n * @param range - The date range to check against.\n * @param date - The date to check.\n * @param excludeEnds - If `true`, the range's start and end dates are excluded.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date is within the range, otherwise `false`.\n * @group Utilities\n */ function rangeIncludesDate(range, date, excludeEnds = false, dateLib = defaultDateLib) {\n    let { from, to } = range;\n    const { differenceInCalendarDays, isSameDay } = dateLib;\n    if (from && to) {\n        const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n        if (isRangeInverted) {\n            [from, to] = [\n                to,\n                from\n            ];\n        }\n        const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) && differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n        return isInRange;\n    }\n    if (!excludeEnds && to) {\n        return isSameDay(to, date);\n    }\n    if (!excludeEnds && from) {\n        return isSameDay(from, date);\n    }\n    return false;\n}\n/**\n * Checks if the given value is of type {@link DateInterval}.\n *\n * @param matcher - The value to check.\n * @returns `true` if the value is a {@link DateInterval}, otherwise `false`.\n * @group Utilities\n */ function isDateInterval(matcher) {\n    return Boolean(matcher && typeof matcher === \"object\" && \"before\" in matcher && \"after\" in matcher);\n}\n/**\n * Checks if the given value is of type {@link DateRange}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateRange}, otherwise `false`.\n * @group Utilities\n */ function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateAfter}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateAfter}, otherwise `false`.\n * @group Utilities\n */ function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateBefore}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateBefore}, otherwise `false`.\n * @group Utilities\n */ function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Checks if the given value is of type {@link DayOfWeek}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DayOfWeek}, otherwise `false`.\n * @group Utilities\n */ function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Checks if the given value is an array of valid dates.\n *\n * @private\n * @param value - The value to check.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the value is an array of valid dates, otherwise `false`.\n */ function isDatesArray(value, dateLib) {\n    return Array.isArray(value) && value.every(dateLib.isDate);\n}\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */ function dateMatchModifiers(date, matchers, dateLib = defaultDateLib) {\n    const matchersArr = !Array.isArray(matchers) ? [\n        matchers\n    ] : matchers;\n    const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n    return matchersArr.some((matcher)=>{\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (dateLib.isDate(matcher)) {\n            return isSameDay(date, matcher);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.includes(date);\n        }\n        if (isDateRange(matcher)) {\n            return rangeIncludesDate(matcher, date, false, dateLib);\n        }\n        if (isDayOfWeekType(matcher)) {\n            if (!Array.isArray(matcher.dayOfWeek)) {\n                return matcher.dayOfWeek === date.getDay();\n            }\n            return matcher.dayOfWeek.includes(date.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            const diffBefore = differenceInCalendarDays(matcher.before, date);\n            const diffAfter = differenceInCalendarDays(matcher.after, date);\n            const isDayBefore = diffBefore > 0;\n            const isDayAfter = diffAfter < 0;\n            const isClosedInterval = isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            } else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return differenceInCalendarDays(date, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return differenceInCalendarDays(matcher.before, date) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(date);\n        }\n        return false;\n    });\n}\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */ function createGetModifiers(days, props, navStart, navEnd, dateLib) {\n    const { disabled, hidden, modifiers, showOutsideDays, broadcastCalendar, today } = props;\n    const { isSameDay, isSameMonth, startOfMonth, isBefore, endOfMonth, isAfter } = dateLib;\n    const computedNavStart = navStart && startOfMonth(navStart);\n    const computedNavEnd = navEnd && endOfMonth(navEnd);\n    const internalModifiersMap = {\n        [DayFlag.focused]: [],\n        [DayFlag.outside]: [],\n        [DayFlag.disabled]: [],\n        [DayFlag.hidden]: [],\n        [DayFlag.today]: []\n    };\n    const customModifiersMap = {};\n    for (const day of days){\n        const { date, displayMonth } = day;\n        const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n        const isBeforeNavStart = Boolean(computedNavStart && isBefore(date, computedNavStart));\n        const isAfterNavEnd = Boolean(computedNavEnd && isAfter(date, computedNavEnd));\n        const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n        const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) || isBeforeNavStart || isAfterNavEnd || // Broadcast calendar will show outside days as default\n        !broadcastCalendar && !showOutsideDays && isOutside || broadcastCalendar && showOutsideDays === false && isOutside;\n        const isToday = isSameDay(date, today ?? dateLib.today());\n        if (isOutside) internalModifiersMap.outside.push(day);\n        if (isDisabled) internalModifiersMap.disabled.push(day);\n        if (isHidden) internalModifiersMap.hidden.push(day);\n        if (isToday) internalModifiersMap.today.push(day);\n        // Add custom modifiers\n        if (modifiers) {\n            Object.keys(modifiers).forEach((name)=>{\n                const modifierValue = modifiers?.[name];\n                const isMatch = modifierValue ? dateMatchModifiers(date, modifierValue, dateLib) : false;\n                if (!isMatch) return;\n                if (customModifiersMap[name]) {\n                    customModifiersMap[name].push(day);\n                } else {\n                    customModifiersMap[name] = [\n                        day\n                    ];\n                }\n            });\n        }\n    }\n    return (day)=>{\n        // Initialize all the modifiers to false\n        const dayFlags = {\n            [DayFlag.focused]: false,\n            [DayFlag.disabled]: false,\n            [DayFlag.hidden]: false,\n            [DayFlag.outside]: false,\n            [DayFlag.today]: false\n        };\n        const customModifiers = {};\n        // Find the modifiers for the given day\n        for(const name in internalModifiersMap){\n            const days = internalModifiersMap[name];\n            dayFlags[name] = days.some((d)=>d === day);\n        }\n        for(const name in customModifiersMap){\n            customModifiers[name] = customModifiersMap[name].some((d)=>d === day);\n        }\n        return {\n            ...dayFlags,\n            // custom modifiers should override all the previous ones\n            ...customModifiers\n        };\n    };\n}\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */ function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n    const modifierClassNames = Object.entries(modifiers).filter(([, active])=>active === true).reduce((previousValue, [key])=>{\n        if (modifiersClassNames[key]) {\n            previousValue.push(modifiersClassNames[key]);\n        } else if (classNames[DayFlag[key]]) {\n            previousValue.push(classNames[DayFlag[key]]);\n        } else if (classNames[SelectionState[key]]) {\n            previousValue.push(classNames[SelectionState[key]]);\n        }\n        return previousValue;\n    }, [\n        classNames[UI.Day]\n    ]);\n    return modifierClassNames;\n}\n/**\n * Merges custom components from the props with the default components.\n *\n * This function ensures that any custom components provided in the props\n * override the default components.\n *\n * @param customComponents The custom components provided in the DayPicker\n *   props.\n * @returns An object containing the merged components.\n */ function getComponents(customComponents) {\n    return {\n        ...components,\n        ...customComponents\n    };\n}\n/**\n * Extracts `data-` attributes from the DayPicker props.\n *\n * This function collects all `data-` attributes from the props and adds\n * additional attributes based on the DayPicker configuration.\n *\n * @param props The DayPicker props.\n * @returns An object containing the `data-` attributes.\n */ function getDataAttributes(props) {\n    const dataAttributes = {\n        \"data-mode\": props.mode ?? undefined,\n        \"data-required\": \"required\" in props ? props.required : undefined,\n        \"data-multiple-months\": props.numberOfMonths && props.numberOfMonths > 1 || undefined,\n        \"data-week-numbers\": props.showWeekNumber || undefined,\n        \"data-broadcast-calendar\": props.broadcastCalendar || undefined,\n        \"data-nav-layout\": props.navLayout || undefined\n    };\n    Object.entries(props).forEach(([key, val])=>{\n        if (key.startsWith(\"data-\")) {\n            dataAttributes[key] = val;\n        }\n    });\n    return dataAttributes;\n}\n/**\n * Returns the default class names for the UI elements.\n *\n * This function generates a mapping of default class names for various UI\n * elements, day flags, selection states, and animations.\n *\n * @returns An object containing the default class names.\n * @group Utilities\n */ function getDefaultClassNames() {\n    const classNames = {};\n    for(const key in UI){\n        classNames[UI[key]] = `rdp-${UI[key]}`;\n    }\n    for(const key in DayFlag){\n        classNames[DayFlag[key]] = `rdp-${DayFlag[key]}`;\n    }\n    for(const key in SelectionState){\n        classNames[SelectionState[key]] = `rdp-${SelectionState[key]}`;\n    }\n    for(const key in Animation){\n        classNames[Animation[key]] = `rdp-${Animation[key]}`;\n    }\n    return classNames;\n}\n/**\n * Formats the caption of the month.\n *\n * @defaultValue `LLLL y` (e.g., \"November 2022\").\n * @param month The date representing the month.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted caption as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatCaption(month, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(month, \"LLLL y\");\n}\n/**\n * @private\n * @deprecated Use {@link formatCaption} instead.\n * @group Formatters\n */ const formatMonthCaption = formatCaption;\n/**\n * Formats the day date shown in the day cell.\n *\n * @defaultValue `d` (e.g., \"1\").\n * @param date The date to format.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted day as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatDay(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"d\");\n}\n/**\n * Formats the month for the dropdown option label.\n *\n * @defaultValue The localized full month name.\n * @param month The date representing the month.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted month name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatMonthDropdown(month, dateLib = defaultDateLib) {\n    return dateLib.format(month, \"LLLL\");\n}\n/**\n * Formats the name of a weekday to be displayed in the weekdays header.\n *\n * @defaultValue `cccccc` (e.g., \"Mo\" for Monday).\n * @param weekday The date representing the weekday.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted weekday name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatWeekdayName(weekday, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(weekday, \"cccccc\");\n}\n/**\n * Formats the week number.\n *\n * @defaultValue The week number as a string, with a leading zero for single-digit numbers.\n * @param weekNumber The week number to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted week number as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatWeekNumber(weekNumber, dateLib = defaultDateLib) {\n    if (weekNumber < 10) {\n        return dateLib.formatNumber(`0${weekNumber.toLocaleString()}`);\n    }\n    return dateLib.formatNumber(`${weekNumber.toLocaleString()}`);\n}\n/**\n * Formats the header for the week number column.\n *\n * @defaultValue An empty string `\"\"`.\n * @returns The formatted week number header as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatWeekNumberHeader() {\n    return ``;\n}\n/**\n * Formats the year for the dropdown option label.\n *\n * @param year The year to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted year as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */ function formatYearDropdown(year, dateLib = defaultDateLib) {\n    return dateLib.format(year, \"yyyy\");\n}\n/**\n * @private\n * @deprecated Use `formatYearDropdown` instead.\n * @group Formatters\n */ const formatYearCaption = formatYearDropdown;\nvar defaultFormatters = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    formatCaption: formatCaption,\n    formatDay: formatDay,\n    formatMonthCaption: formatMonthCaption,\n    formatMonthDropdown: formatMonthDropdown,\n    formatWeekNumber: formatWeekNumber,\n    formatWeekNumberHeader: formatWeekNumberHeader,\n    formatWeekdayName: formatWeekdayName,\n    formatYearCaption: formatYearCaption,\n    formatYearDropdown: formatYearDropdown\n});\n/**\n * Merges custom formatters from the props with the default formatters.\n *\n * @param customFormatters The custom formatters provided in the DayPicker\n *   props.\n * @returns The merged formatters object.\n */ function getFormatters(customFormatters) {\n    if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {\n        customFormatters.formatCaption = customFormatters.formatMonthCaption;\n    }\n    if (customFormatters?.formatYearCaption && !customFormatters.formatYearDropdown) {\n        customFormatters.formatYearDropdown = customFormatters.formatYearCaption;\n    }\n    return {\n        ...defaultFormatters,\n        ...customFormatters\n    };\n}\n/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */ function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n    const { startOfMonth, startOfYear, endOfYear, eachMonthOfInterval, getMonth } = dateLib;\n    const months = eachMonthOfInterval({\n        start: startOfYear(displayMonth),\n        end: endOfYear(displayMonth)\n    });\n    const options = months.map((month)=>{\n        const label = formatters.formatMonthDropdown(month, dateLib);\n        const value = getMonth(month);\n        const disabled = navStart && month < startOfMonth(navStart) || navEnd && month > startOfMonth(navEnd) || false;\n        return {\n            value,\n            label,\n            disabled\n        };\n    });\n    return options;\n}\n/**\n * Returns the computed style for a day based on its modifiers.\n *\n * This function merges the base styles for the day with any styles associated\n * with active modifiers.\n *\n * @param dayModifiers The modifiers applied to the day.\n * @param styles The base styles for the calendar elements.\n * @param modifiersStyles The styles associated with specific modifiers.\n * @returns The computed style for the day.\n */ function getStyleForModifiers(dayModifiers, styles = {}, modifiersStyles = {}) {\n    let style = {\n        ...styles?.[UI.Day]\n    };\n    Object.entries(dayModifiers).filter(([, active])=>active === true).forEach(([modifier])=>{\n        style = {\n            ...style,\n            ...modifiersStyles?.[modifier]\n        };\n    });\n    return style;\n}\n/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */ function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {\n    const today = dateLib.today();\n    const start = ISOWeek ? dateLib.startOfISOWeek(today) : dateLib.startOfWeek(today);\n    const days = [];\n    for(let i = 0; i < 7; i++){\n        const day = dateLib.addDays(start, i);\n        days.push(day);\n    }\n    return days;\n}\n/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @param reverse If true, reverses the order of the years (descending).\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */ function getYearOptions(navStart, navEnd, formatters, dateLib, reverse = false) {\n    if (!navStart) return undefined;\n    if (!navEnd) return undefined;\n    const { startOfYear, endOfYear, addYears, getYear, isBefore, isSameYear } = dateLib;\n    const firstNavYear = startOfYear(navStart);\n    const lastNavYear = endOfYear(navEnd);\n    const years = [];\n    let year = firstNavYear;\n    while(isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)){\n        years.push(year);\n        year = addYears(year, 1);\n    }\n    if (reverse) years.reverse();\n    return years.map((year)=>{\n        const label = formatters.formatYearDropdown(year, dateLib);\n        return {\n            value: getYear(year),\n            label,\n            disabled: false\n        };\n    });\n}\n/**\n * Generates the ARIA label for a day button.\n *\n * Use the `modifiers` argument to provide additional context for the label,\n * such as indicating if the day is \"today\" or \"selected.\"\n *\n * @defaultValue The formatted date.\n * @param date - The date to format.\n * @param modifiers - The modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the day button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelDayButton(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers.today) label = `Today, ${label}`;\n    if (modifiers.selected) label = `${label}, selected`;\n    return label;\n}\n/**\n * @ignore\n * @deprecated Use `labelDayButton` instead.\n */ const labelDay = labelDayButton;\n/**\n * Generates the ARIA label for the month grid, which is announced when entering\n * the grid.\n *\n * @defaultValue `LLLL y` (e.g., \"November 2022\").\n * @param date - The date representing the month.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the month grid.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelGrid(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"LLLL y\");\n}\n/**\n * @ignore\n * @deprecated Use {@link labelGrid} instead.\n */ const labelCaption = labelGrid;\n/**\n * Generates the label for a day grid cell when the calendar is not interactive.\n *\n * @param date - The date to format.\n * @param modifiers - Optional modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The label for the day grid cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelGridcell(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers?.today) {\n        label = `Today, ${label}`;\n    }\n    return label;\n}\n/**\n * Generates the ARIA label for the months dropdown.\n *\n * @defaultValue `\"Choose the Month\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the months dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelMonthDropdown(_options) {\n    return \"Choose the Month\";\n}\n/**\n * Generates the ARIA label for the navigation toolbar.\n *\n * @defaultValue `\"\"`\n * @returns The ARIA label for the navigation toolbar.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelNav() {\n    return \"\";\n}\n/**\n * Generates the ARIA label for the \"next month\" button.\n *\n * @defaultValue `\"Go to the Next Month\"`\n * @param month - The date representing the next month, or `undefined` if there\n *   is no next month.\n * @returns The ARIA label for the \"next month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelNext(_month) {\n    return \"Go to the Next Month\";\n}\n/**\n * Generates the ARIA label for the \"previous month\" button.\n *\n * @defaultValue `\"Go to the Previous Month\"`\n * @param month - The date representing the previous month, or `undefined` if\n *   there is no previous month.\n * @returns The ARIA label for the \"previous month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelPrevious(_month) {\n    return \"Go to the Previous Month\";\n}\n/**\n * Generates the ARIA label for a weekday column header.\n *\n * @defaultValue `\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"`\n * @param date - The date representing the weekday.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the weekday column header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelWeekday(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"cccc\");\n}\n/**\n * Generates the ARIA label for the week number cell (the first cell in a row).\n *\n * @defaultValue `Week ${weekNumber}`\n * @param weekNumber - The number of the week.\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelWeekNumber(weekNumber, _options) {\n    return `Week ${weekNumber}`;\n}\n/**\n * Generates the ARIA label for the week number header element.\n *\n * @defaultValue `\"Week Number\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelWeekNumberHeader(_options) {\n    return \"Week Number\";\n}\n/**\n * Generates the ARIA label for the years dropdown.\n *\n * @defaultValue `\"Choose the Year\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the years dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */ function labelYearDropdown(_options) {\n    return \"Choose the Year\";\n}\nvar defaultLabels = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    labelCaption: labelCaption,\n    labelDay: labelDay,\n    labelDayButton: labelDayButton,\n    labelGrid: labelGrid,\n    labelGridcell: labelGridcell,\n    labelMonthDropdown: labelMonthDropdown,\n    labelNav: labelNav,\n    labelNext: labelNext,\n    labelPrevious: labelPrevious,\n    labelWeekNumber: labelWeekNumber,\n    labelWeekNumberHeader: labelWeekNumberHeader,\n    labelWeekday: labelWeekday,\n    labelYearDropdown: labelYearDropdown\n});\nconst asHtmlElement = (element)=>{\n    if (element instanceof HTMLElement) return element;\n    return null;\n};\nconst queryMonthEls = (element)=>[\n        ...element.querySelectorAll(\"[data-animated-month]\") ?? []\n    ];\nconst queryMonthEl = (element)=>asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element)=>asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element)=>asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element)=>asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element)=>asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */ function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib }) {\n    const previousRootElSnapshotRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const previousMonthsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(months);\n    const animatingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)({\n        \"useAnimation.useLayoutEffect\": ()=>{\n            // get previous months before updating the previous months ref\n            const previousMonths = previousMonthsRef.current;\n            // update previous months ref for next effect trigger\n            previousMonthsRef.current = months;\n            if (!enabled || !rootElRef.current || // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) || // validation required for the animation to work as expected\n            months.length === 0 || previousMonths.length === 0 || months.length !== previousMonths.length) {\n                return;\n            }\n            const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n            const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n            const captionAnimationClass = isAfterPreviousMonth ? classNames[Animation.caption_after_enter] : classNames[Animation.caption_before_enter];\n            const weeksAnimationClass = isAfterPreviousMonth ? classNames[Animation.weeks_after_enter] : classNames[Animation.weeks_before_enter];\n            // get previous root element snapshot before updating the snapshot ref\n            const previousRootElSnapshot = previousRootElSnapshotRef.current;\n            // update snapshot for next effect trigger\n            const rootElSnapshot = rootElRef.current.cloneNode(true);\n            if (rootElSnapshot instanceof HTMLElement) {\n                // if this effect is triggered while animating, we need to clean up the new root snapshot\n                // to put it in the same state as when not animating, to correctly animate the next month change\n                const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n                currentMonthElsSnapshot.forEach({\n                    \"useAnimation.useLayoutEffect\": (currentMonthElSnapshot)=>{\n                        if (!(currentMonthElSnapshot instanceof HTMLElement)) return;\n                        // remove the old month snapshots from the new root snapshot\n                        const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                        if (previousMonthElSnapshot && currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                            currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                        }\n                        // remove animation classes from the new month snapshots\n                        const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                        if (captionEl) {\n                            captionEl.classList.remove(captionAnimationClass);\n                        }\n                        const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                        if (weeksEl) {\n                            weeksEl.classList.remove(weeksAnimationClass);\n                        }\n                    }\n                }[\"useAnimation.useLayoutEffect\"]);\n                previousRootElSnapshotRef.current = rootElSnapshot;\n            } else {\n                previousRootElSnapshotRef.current = null;\n            }\n            if (animatingRef.current || isSameMonth || // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n                return;\n            }\n            const previousMonthEls = previousRootElSnapshot instanceof HTMLElement ? queryMonthEls(previousRootElSnapshot) : [];\n            const currentMonthEls = queryMonthEls(rootElRef.current);\n            if (currentMonthEls?.every({\n                \"useAnimation.useLayoutEffect\": (el)=>el instanceof HTMLElement\n            }[\"useAnimation.useLayoutEffect\"]) && previousMonthEls && previousMonthEls.every({\n                \"useAnimation.useLayoutEffect\": (el)=>el instanceof HTMLElement\n            }[\"useAnimation.useLayoutEffect\"])) {\n                animatingRef.current = true;\n                // set isolation to isolate to isolate the stacking context during animation\n                rootElRef.current.style.isolation = \"isolate\";\n                // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n                const navEl = queryNavEl(rootElRef.current);\n                if (navEl) {\n                    navEl.style.zIndex = \"1\";\n                }\n                currentMonthEls.forEach({\n                    \"useAnimation.useLayoutEffect\": (currentMonthEl, index)=>{\n                        const previousMonthEl = previousMonthEls[index];\n                        if (!previousMonthEl) {\n                            return;\n                        }\n                        // animate new displayed month\n                        currentMonthEl.style.position = \"relative\";\n                        currentMonthEl.style.overflow = \"hidden\";\n                        const captionEl = queryCaptionEl(currentMonthEl);\n                        if (captionEl) {\n                            captionEl.classList.add(captionAnimationClass);\n                        }\n                        const weeksEl = queryWeeksEl(currentMonthEl);\n                        if (weeksEl) {\n                            weeksEl.classList.add(weeksAnimationClass);\n                        }\n                        // animate new displayed month end\n                        const cleanUp = {\n                            \"useAnimation.useLayoutEffect.cleanUp\": ()=>{\n                                animatingRef.current = false;\n                                if (rootElRef.current) {\n                                    rootElRef.current.style.isolation = \"\";\n                                }\n                                if (navEl) {\n                                    navEl.style.zIndex = \"\";\n                                }\n                                if (captionEl) {\n                                    captionEl.classList.remove(captionAnimationClass);\n                                }\n                                if (weeksEl) {\n                                    weeksEl.classList.remove(weeksAnimationClass);\n                                }\n                                currentMonthEl.style.position = \"\";\n                                currentMonthEl.style.overflow = \"\";\n                                if (currentMonthEl.contains(previousMonthEl)) {\n                                    currentMonthEl.removeChild(previousMonthEl);\n                                }\n                            }\n                        }[\"useAnimation.useLayoutEffect.cleanUp\"];\n                        // animate old displayed month\n                        previousMonthEl.style.pointerEvents = \"none\";\n                        previousMonthEl.style.position = \"absolute\";\n                        previousMonthEl.style.overflow = \"hidden\";\n                        previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                        // hide the weekdays container of the old month and only the new one\n                        const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                        if (previousWeekdaysEl) {\n                            previousWeekdaysEl.style.opacity = \"0\";\n                        }\n                        const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                        if (previousCaptionEl) {\n                            previousCaptionEl.classList.add(isAfterPreviousMonth ? classNames[Animation.caption_before_exit] : classNames[Animation.caption_after_exit]);\n                            previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                        }\n                        const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                        if (previousWeeksEl) {\n                            previousWeeksEl.classList.add(isAfterPreviousMonth ? classNames[Animation.weeks_before_exit] : classNames[Animation.weeks_after_exit]);\n                        }\n                        currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n                    }\n                }[\"useAnimation.useLayoutEffect\"]);\n            }\n        }\n    }[\"useAnimation.useLayoutEffect\"]);\n}\n/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */ function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const startWeekFirstDate = broadcastCalendar ? startOfBroadcastWeek(firstMonth, dateLib) : ISOWeek ? startOfISOWeek(firstMonth) : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar ? endOfBroadcastWeek(lastMonth) : ISOWeek ? endOfISOWeek(endOfMonth(lastMonth)) : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for(let i = 0; i <= nOfDays; i++){\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for(let i = 0; i < daysToAdd; i++){\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n/**\n * Returns all the days belonging to the calendar by merging the days in the\n * weeks for each month.\n *\n * @param calendarMonths The array of calendar months.\n * @returns An array of `CalendarDay` objects representing all the days in the\n *   calendar.\n */ function getDays(calendarMonths) {\n    const initialDays = [];\n    return calendarMonths.reduce((days, month)=>{\n        const weekDays = month.weeks.reduce((weekDays, week)=>{\n            return weekDays.concat(week.days.slice());\n        }, initialDays.slice());\n        return days.concat(weekDays.slice());\n    }, initialDays.slice());\n}\n/**\n * Returns the months to display in the calendar.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including `numberOfMonths`.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates representing the months to display.\n */ function getDisplayMonths(firstDisplayedMonth, calendarEndMonth, props, dateLib) {\n    const { numberOfMonths = 1 } = props;\n    const months = [];\n    for(let i = 0; i < numberOfMonths; i++){\n        const month = dateLib.addMonths(firstDisplayedMonth, i);\n        if (calendarEndMonth && month > calendarEndMonth) {\n            break;\n        }\n        months.push(month);\n    }\n    return months;\n}\n/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */ function getInitialMonth(props, navStart, navEnd, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1 } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    if (navEnd && differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(navEnd, offset);\n    }\n    if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n        initialMonth = navStart;\n    }\n    return startOfMonth(initialMonth);\n}\n/**\n * Returns the months to display in the calendar.\n *\n * This function generates `CalendarMonth` objects for each month to be\n * displayed, including their weeks and days, based on the provided display\n * months and dates.\n *\n * @param displayMonths The months (as dates) to display in the calendar.\n * @param dates The dates to display in the calendar.\n * @param props Options from the DayPicker props context.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of `CalendarMonth` objects representing the months to\n *   display.\n */ function getMonths(displayMonths, dates, props, dateLib) {\n    const { addDays, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, getISOWeek, getWeek, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const dayPickerMonths = displayMonths.reduce((months, month)=>{\n        const firstDateOfFirstWeek = props.broadcastCalendar ? startOfBroadcastWeek(month, dateLib) : props.ISOWeek ? startOfISOWeek(month) : startOfWeek(month);\n        const lastDateOfLastWeek = props.broadcastCalendar ? endOfBroadcastWeek(month) : props.ISOWeek ? endOfISOWeek(endOfMonth(month)) : endOfWeek(endOfMonth(month));\n        /** The dates to display in the month. */ const monthDates = dates.filter((date)=>{\n            return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;\n        });\n        const nrOfDaysWithFixedWeeks = props.broadcastCalendar ? 35 : 42;\n        if (props.fixedWeeks && monthDates.length < nrOfDaysWithFixedWeeks) {\n            const extraDates = dates.filter((date)=>{\n                const daysToAdd = nrOfDaysWithFixedWeeks - monthDates.length;\n                return date > lastDateOfLastWeek && date <= addDays(lastDateOfLastWeek, daysToAdd);\n            });\n            monthDates.push(...extraDates);\n        }\n        const weeks = monthDates.reduce((weeks, date)=>{\n            const weekNumber = props.ISOWeek ? getISOWeek(date) : getWeek(date);\n            const week = weeks.find((week)=>week.weekNumber === weekNumber);\n            const day = new CalendarDay(date, month, dateLib);\n            if (!week) {\n                weeks.push(new CalendarWeek(weekNumber, [\n                    day\n                ]));\n            } else {\n                week.days.push(day);\n            }\n            return weeks;\n        }, []);\n        const dayPickerMonth = new CalendarMonth(month, weeks);\n        months.push(dayPickerMonth);\n        return months;\n    }, []);\n    if (!props.reverseMonths) {\n        return dayPickerMonths;\n    } else {\n        return dayPickerMonths.reverse();\n    }\n}\n/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */ function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" || props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    } else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    } else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    } else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    } else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth\n    ];\n}\n/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */ function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths = 1 } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarEndMonth) {\n        return addMonths(month, offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    return addMonths(month, offset);\n}\n/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */ function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths ?? 1 : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarStartMonth) {\n        return addMonths(month, -offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    return addMonths(month, -offset);\n}\n/**\n * Returns an array of calendar weeks from an array of calendar months.\n *\n * @param months The array of calendar months.\n * @returns An array of calendar weeks.\n */ function getWeeks(months) {\n    const initialWeeks = [];\n    return months.reduce((weeks, month)=>{\n        return weeks.concat(month.weeks.slice());\n    }, initialWeeks.slice());\n}\n/**\n * A custom hook for managing both controlled and uncontrolled component states.\n *\n * This hook allows a component to support both controlled and uncontrolled\n * states by determining whether the `controlledValue` is provided. If it is\n * undefined, the hook falls back to using the internal state.\n *\n * @example\n *   // Uncontrolled usage\n *   const [value, setValue] = useControlledValue(0, undefined);\n *\n *   // Controlled usage\n *   const [value, setValue] = useControlledValue(0, props.value);\n *\n * @template T - The type of the value.\n * @param defaultValue The initial value for the uncontrolled state.\n * @param controlledValue The value for the controlled state. If undefined, the\n *   component will use the uncontrolled state.\n * @returns A tuple where the first element is the current value (either\n *   controlled or uncontrolled) and the second element is a setter function to\n *   update the value.\n */ function useControlledValue(defaultValue, controlledValue) {\n    const [uncontrolledValue, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultValue);\n    const value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [\n        value,\n        setValue\n    ];\n}\n/**\n * Provides the calendar object to work with the calendar in custom components.\n *\n * @private\n * @param props - The DayPicker props related to calendar configuration.\n * @param dateLib - The date utility library instance.\n * @returns The calendar object containing displayed days, weeks, months, and\n *   navigation methods.\n */ function useCalendar(props, dateLib) {\n    const [navStart, navEnd] = getNavMonths(props, dateLib);\n    const { startOfMonth, endOfMonth } = dateLib;\n    const initialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n    const [firstMonth, setFirstMonth] = useControlledValue(initialMonth, props.month ? initialMonth : undefined);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: change the initial month when the time zone changes.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useCalendar.useEffect\": ()=>{\n            const newInitialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n            setFirstMonth(newInitialMonth);\n        }\n    }[\"useCalendar.useEffect\"], [\n        props.timeZone\n    ]);\n    /** The months displayed in the calendar. */ const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);\n    /** The dates displayed in the calendar. */ const dates = getDates(displayMonths, props.endMonth ? endOfMonth(props.endMonth) : undefined, props, dateLib);\n    /** The Months displayed in the calendar. */ const months = getMonths(displayMonths, dates, props, dateLib);\n    /** The Weeks displayed in the calendar. */ const weeks = getWeeks(months);\n    /** The Days displayed in the calendar. */ const days = getDays(months);\n    const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);\n    const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);\n    const { disableNavigation, onMonthChange } = props;\n    const isDayInCalendar = (day)=>weeks.some((week)=>week.days.some((d)=>d.isEqualTo(day)));\n    const goToMonth = (date)=>{\n        if (disableNavigation) {\n            return;\n        }\n        let newMonth = startOfMonth(date);\n        // if month is before start, use the first month instead\n        if (navStart && newMonth < startOfMonth(navStart)) {\n            newMonth = startOfMonth(navStart);\n        }\n        // if month is after endMonth, use the last month instead\n        if (navEnd && newMonth > startOfMonth(navEnd)) {\n            newMonth = startOfMonth(navEnd);\n        }\n        setFirstMonth(newMonth);\n        onMonthChange?.(newMonth);\n    };\n    const goToDay = (day)=>{\n        // is this check necessary?\n        if (isDayInCalendar(day)) {\n            return;\n        }\n        goToMonth(day.date);\n    };\n    const calendar = {\n        months,\n        weeks,\n        days,\n        navStart,\n        navEnd,\n        previousMonth,\n        nextMonth,\n        goToMonth,\n        goToDay\n    };\n    return calendar;\n}\nvar FocusTargetPriority;\n(function(FocusTargetPriority) {\n    FocusTargetPriority[FocusTargetPriority[\"Today\"] = 0] = \"Today\";\n    FocusTargetPriority[FocusTargetPriority[\"Selected\"] = 1] = \"Selected\";\n    FocusTargetPriority[FocusTargetPriority[\"LastFocused\"] = 2] = \"LastFocused\";\n    FocusTargetPriority[FocusTargetPriority[\"FocusedModifier\"] = 3] = \"FocusedModifier\";\n})(FocusTargetPriority || (FocusTargetPriority = {}));\n/**\n * Determines if a day is focusable based on its modifiers.\n *\n * A day is considered focusable if it is not disabled, hidden, or outside the\n * displayed month.\n *\n * @param modifiers The modifiers applied to the day.\n * @returns `true` if the day is focusable, otherwise `false`.\n */ function isFocusableDay(modifiers) {\n    return !modifiers[DayFlag.disabled] && !modifiers[DayFlag.hidden] && !modifiers[DayFlag.outside];\n}\n/**\n * Calculates the focus target day based on priority.\n *\n * This function determines the day that should receive focus in the calendar,\n * prioritizing days with specific modifiers (e.g., \"focused\", \"today\") or\n * selection states.\n *\n * @param days The array of `CalendarDay` objects to evaluate.\n * @param getModifiers A function to retrieve the modifiers for a given day.\n * @param isSelected A function to determine if a day is selected.\n * @param lastFocused The last focused day, if any.\n * @returns The `CalendarDay` that should receive focus, or `undefined` if no\n *   focusable day is found.\n */ function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {\n    let focusTarget;\n    let foundFocusTargetPriority = -1;\n    for (const day of days){\n        const modifiers = getModifiers(day);\n        if (isFocusableDay(modifiers)) {\n            if (modifiers[DayFlag.focused] && foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;\n            } else if (lastFocused?.isEqualTo(day) && foundFocusTargetPriority < FocusTargetPriority.LastFocused) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.LastFocused;\n            } else if (isSelected(day.date) && foundFocusTargetPriority < FocusTargetPriority.Selected) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Selected;\n            } else if (modifiers[DayFlag.today] && foundFocusTargetPriority < FocusTargetPriority.Today) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Today;\n            }\n        }\n    }\n    if (!focusTarget) {\n        // Return the first day that is focusable\n        focusTarget = days.find((day)=>isFocusableDay(getModifiers(day)));\n    }\n    return focusTarget;\n}\n/**\n * Calculates the next date that should be focused in the calendar.\n *\n * This function determines the next focusable date based on the movement\n * direction, constraints, and calendar configuration.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDate The reference date from which to calculate the next focusable\n *   date.\n * @param navStart The earliest date the user can navigate to.\n * @param navEnd The latest date the user can navigate to.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next focusable date.\n */ function getFocusableDate(moveBy, moveDir, refDate, navStart, navEnd, props, dateLib) {\n    const { ISOWeek, broadcastCalendar } = props;\n    const { addDays, addMonths, addWeeks, addYears, endOfBroadcastWeek, endOfISOWeek, endOfWeek, max, min, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const moveFns = {\n        day: addDays,\n        week: addWeeks,\n        month: addMonths,\n        year: addYears,\n        startOfWeek: (date)=>broadcastCalendar ? startOfBroadcastWeek(date, dateLib) : ISOWeek ? startOfISOWeek(date) : startOfWeek(date),\n        endOfWeek: (date)=>broadcastCalendar ? endOfBroadcastWeek(date) : ISOWeek ? endOfISOWeek(date) : endOfWeek(date)\n    };\n    let focusableDate = moveFns[moveBy](refDate, moveDir === \"after\" ? 1 : -1);\n    if (moveDir === \"before\" && navStart) {\n        focusableDate = max([\n            navStart,\n            focusableDate\n        ]);\n    } else if (moveDir === \"after\" && navEnd) {\n        focusableDate = min([\n            navEnd,\n            focusableDate\n        ]);\n    }\n    return focusableDate;\n}\n/**\n * Determines the next focusable day in the calendar.\n *\n * This function recursively calculates the next focusable day based on the\n * movement direction and modifiers applied to the days.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDay The currently focused day.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @param attempt The current recursion attempt (used to limit recursion depth).\n * @returns The next focusable day, or `undefined` if no focusable day is found.\n */ function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n/**\n * Manages focus behavior for the DayPicker component, including setting,\n * moving, and blurring focus on calendar days.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param calendar - The calendar object containing the displayed days and\n *   months.\n * @param getModifiers - A function to retrieve modifiers for a given day.\n * @param isSelected - A function to check if a date is selected.\n * @param dateLib - The date utility library instance.\n * @returns An object containing focus-related methods and the currently focused\n *   day.\n */ function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (()=>false), lastFocused);\n    const [focusedDay, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(autoFocus ? focusTarget : undefined);\n    const blur = ()=>{\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir)=>{\n        if (!focusedDay) return;\n        const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus) return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day)=>{\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus\n    };\n    return useFocus;\n}\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */ function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date)=>{\n        return selected?.some((d)=>isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e)=>{\n        let newDates = [\n            ...selected ?? []\n        ];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d)=>!isSameDay(d, triggerDate));\n        } else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [\n                    triggerDate\n                ];\n            } else {\n                // Add the date to the selection\n                newDates = [\n                    ...newDates,\n                    triggerDate\n                ];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n/**\n * Adds a date to an existing range, considering constraints like minimum and\n * maximum range size.\n *\n * @param date - The date to add to the range.\n * @param initialRange - The initial range to which the date will be added.\n * @param min - The minimum number of days in the range.\n * @param max - The maximum number of days in the range.\n * @param required - Whether the range must always include at least one date.\n * @param dateLib - The date utility library instance.\n * @returns The updated date range, or `undefined` if the range is cleared.\n * @group Utilities\n */ function addToRange(date, initialRange, min = 0, max = 0, required = false, dateLib = defaultDateLib) {\n    const { from, to } = initialRange || {};\n    const { isSameDay, isAfter, isBefore } = dateLib;\n    let range;\n    if (!from && !to) {\n        // the range is empty, add the date\n        range = {\n            from: date,\n            to: min > 0 ? undefined : date\n        };\n    } else if (from && !to) {\n        // adding date to an incomplete range\n        if (isSameDay(from, date)) {\n            // adding a date equal to the start of the range\n            if (min === 0) {\n                range = {\n                    from,\n                    to: date\n                };\n            } else if (required) {\n                range = {\n                    from,\n                    to: undefined\n                };\n            } else {\n                range = undefined;\n            }\n        } else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = {\n                from: date,\n                to: from\n            };\n        } else {\n            // adding a date after the start of the range\n            range = {\n                from,\n                to: date\n            };\n        }\n    } else if (from && to) {\n        // adding date to a complete range\n        if (isSameDay(from, date) && isSameDay(to, date)) {\n            // adding a date that is equal to both start and end of the range\n            if (required) {\n                range = {\n                    from,\n                    to\n                };\n            } else {\n                range = undefined;\n            }\n        } else if (isSameDay(from, date)) {\n            // adding a date equal to the the start of the range\n            range = {\n                from,\n                to: min > 0 ? undefined : date\n            };\n        } else if (isSameDay(to, date)) {\n            // adding a dare equal to the end of the range\n            range = {\n                from: date,\n                to: min > 0 ? undefined : date\n            };\n        } else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = {\n                from: date,\n                to: to\n            };\n        } else if (isAfter(date, from)) {\n            // adding a date after the start of the range\n            range = {\n                from,\n                to: date\n            };\n        } else if (isAfter(date, to)) {\n            // adding a date after the end of the range\n            range = {\n                from,\n                to: date\n            };\n        } else {\n            throw new Error(\"Invalid range\");\n        }\n    }\n    // check for min / max\n    if (range?.from && range?.to) {\n        const diff = dateLib.differenceInCalendarDays(range.to, range.from);\n        if (max > 0 && diff > max) {\n            range = {\n                from: date,\n                to: undefined\n            };\n        } else if (min > 1 && diff < min) {\n            range = {\n                from: date,\n                to: undefined\n            };\n        }\n    }\n    return range;\n}\n/**\n * Checks if a date range contains one or more specified days of the week.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param dayOfWeek - The day(s) of the week to check for (`0-6`, where `0` is\n *   Sunday).\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains the specified day(s) of the week,\n *   otherwise `false`.\n * @group Utilities\n */ function rangeContainsDayOfWeek(range, dayOfWeek, dateLib = defaultDateLib) {\n    const dayOfWeekArr = !Array.isArray(dayOfWeek) ? [\n        dayOfWeek\n    ] : dayOfWeek;\n    let date = range.from;\n    const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n    // iterate at maximum one week or the total days if the range is shorter than one week\n    const totalDaysLimit = Math.min(totalDays, 6);\n    for(let i = 0; i <= totalDaysLimit; i++){\n        if (dayOfWeekArr.includes(date.getDay())) {\n            return true;\n        }\n        date = dateLib.addDays(date, 1);\n    }\n    return false;\n}\n/**\n * Determines if two date ranges overlap.\n *\n * @since 9.2.2\n * @param rangeLeft - The first date range.\n * @param rangeRight - The second date range.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the ranges overlap, otherwise `false`.\n * @group Utilities\n */ function rangeOverlaps(rangeLeft, rangeRight, dateLib = defaultDateLib) {\n    return rangeIncludesDate(rangeLeft, rangeRight.from, false, dateLib) || rangeIncludesDate(rangeLeft, rangeRight.to, false, dateLib) || rangeIncludesDate(rangeRight, rangeLeft.from, false, dateLib) || rangeIncludesDate(rangeRight, rangeLeft.to, false, dateLib);\n}\n/**\n * Checks if a date range contains dates that match the given modifiers.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param modifiers - The modifiers to match against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains matching dates, otherwise `false`.\n * @group Utilities\n */ function rangeContainsModifiers(range, modifiers, dateLib = defaultDateLib) {\n    const matchers = Array.isArray(modifiers) ? modifiers : [\n        modifiers\n    ];\n    // Defer function matchers evaluation as they are the least performant.\n    const nonFunctionMatchers = matchers.filter((matcher)=>typeof matcher !== \"function\");\n    const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher)=>{\n        if (typeof matcher === \"boolean\") return matcher;\n        if (dateLib.isDate(matcher)) {\n            return rangeIncludesDate(range, matcher, false, dateLib);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.some((date)=>rangeIncludesDate(range, date, false, dateLib));\n        }\n        if (isDateRange(matcher)) {\n            if (matcher.from && matcher.to) {\n                return rangeOverlaps(range, {\n                    from: matcher.from,\n                    to: matcher.to\n                }, dateLib);\n            }\n            return false;\n        }\n        if (isDayOfWeekType(matcher)) {\n            return rangeContainsDayOfWeek(range, matcher.dayOfWeek, dateLib);\n        }\n        if (isDateInterval(matcher)) {\n            const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return rangeOverlaps(range, {\n                    from: dateLib.addDays(matcher.after, 1),\n                    to: dateLib.addDays(matcher.before, -1)\n                }, dateLib);\n            }\n            return dateMatchModifiers(range.from, matcher, dateLib) || dateMatchModifiers(range.to, matcher, dateLib);\n        }\n        if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {\n            return dateMatchModifiers(range.from, matcher, dateLib) || dateMatchModifiers(range.to, matcher, dateLib);\n        }\n        return false;\n    });\n    if (nonFunctionMatchersResult) {\n        return true;\n    }\n    const functionMatchers = matchers.filter((matcher)=>typeof matcher === \"function\");\n    if (functionMatchers.length) {\n        let date = range.from;\n        const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n        for(let i = 0; i <= totalDays; i++){\n            if (functionMatchers.some((matcher)=>matcher(date))) {\n                return true;\n            }\n            date = dateLib.addDays(date, 1);\n        }\n    }\n    return false;\n}\n/**\n * Hook to manage range selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected range, a function to select a\n *   range, and a function to check if a date is within the range.\n */ function useRange(props, dateLib) {\n    const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const isSelected = (date)=>selected && rangeIncludesDate(selected, date, false, dateLib);\n    const select = (triggerDate, modifiers, e)=>{\n        const { min, max } = props;\n        const newRange = triggerDate ? addToRange(triggerDate, selected, min, max, required, dateLib) : undefined;\n        if (excludeDisabled && disabled && newRange?.from && newRange.to) {\n            if (rangeContainsModifiers({\n                from: newRange.from,\n                to: newRange.to\n            }, disabled, dateLib)) {\n                // if a disabled days is found, the range is reset\n                newRange.from = triggerDate;\n                newRange.to = undefined;\n            }\n        }\n        if (!onSelect) {\n            setSelected(newRange);\n        }\n        onSelect?.(newRange, triggerDate, modifiers, e);\n        return newRange;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */ function useSingle(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (compareDate)=>{\n        return selected ? isSameDay(selected, compareDate) : false;\n    };\n    const select = (triggerDate, modifiers, e)=>{\n        let newDate = triggerDate;\n        if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n            // If the date is the same, clear the selection.\n            newDate = undefined;\n        }\n        if (!onSelect) {\n            setSelected(newDate);\n        }\n        if (required) {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        } else {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        return newDate;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */ function useSelection(props, dateLib) {\n    const single = useSingle(props, dateLib);\n    const multi = useMulti(props, dateLib);\n    const range = useRange(props, dateLib);\n    switch(props.mode){\n        case \"single\":\n            return single;\n        case \"multiple\":\n            return multi;\n        case \"range\":\n            return range;\n        default:\n            return undefined;\n    }\n}\n/**\n * Renders the DayPicker calendar component.\n *\n * @param initialProps - The props for the DayPicker component.\n * @returns The rendered DayPicker component.\n * @group DayPicker\n * @see https://daypicker.dev\n */ function DayPicker(initialProps) {\n    let props = initialProps;\n    if (props.timeZone) {\n        props = {\n            ...initialProps\n        };\n        if (props.today) {\n            props.today = new TZDate(props.today, props.timeZone);\n        }\n        if (props.month) {\n            props.month = new TZDate(props.month, props.timeZone);\n        }\n        if (props.defaultMonth) {\n            props.defaultMonth = new TZDate(props.defaultMonth, props.timeZone);\n        }\n        if (props.startMonth) {\n            props.startMonth = new TZDate(props.startMonth, props.timeZone);\n        }\n        if (props.endMonth) {\n            props.endMonth = new TZDate(props.endMonth, props.timeZone);\n        }\n        if (props.mode === \"single\" && props.selected) {\n            props.selected = new TZDate(props.selected, props.timeZone);\n        } else if (props.mode === \"multiple\" && props.selected) {\n            props.selected = props.selected?.map((date)=>new TZDate(date, props.timeZone));\n        } else if (props.mode === \"range\" && props.selected) {\n            props.selected = {\n                from: props.selected.from ? new TZDate(props.selected.from, props.timeZone) : undefined,\n                to: props.selected.to ? new TZDate(props.selected.to, props.timeZone) : undefined\n            };\n        }\n    }\n    const { components, formatters, labels, dateLib, locale, classNames } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DayPicker.useMemo\": ()=>{\n            const locale = {\n                ...enUS,\n                ...props.locale\n            };\n            const dateLib = new DateLib({\n                locale,\n                weekStartsOn: props.broadcastCalendar ? 1 : props.weekStartsOn,\n                firstWeekContainsDate: props.firstWeekContainsDate,\n                useAdditionalWeekYearTokens: props.useAdditionalWeekYearTokens,\n                useAdditionalDayOfYearTokens: props.useAdditionalDayOfYearTokens,\n                timeZone: props.timeZone,\n                numerals: props.numerals\n            }, props.dateLib);\n            return {\n                dateLib,\n                components: getComponents(props.components),\n                formatters: getFormatters(props.formatters),\n                labels: {\n                    ...defaultLabels,\n                    ...props.labels\n                },\n                locale,\n                classNames: {\n                    ...getDefaultClassNames(),\n                    ...props.classNames\n                }\n            };\n        }\n    }[\"DayPicker.useMemo\"], [\n        props.locale,\n        props.broadcastCalendar,\n        props.weekStartsOn,\n        props.firstWeekContainsDate,\n        props.useAdditionalWeekYearTokens,\n        props.useAdditionalDayOfYearTokens,\n        props.timeZone,\n        props.numerals,\n        props.dateLib,\n        props.components,\n        props.formatters,\n        props.labels,\n        props.classNames\n    ]);\n    const { captionLayout, mode, navLayout, numberOfMonths = 1, onDayBlur, onDayClick, onDayFocus, onDayKeyDown, onDayMouseEnter, onDayMouseLeave, onNextClick, onPrevClick, showWeekNumber, styles } = props;\n    const { formatCaption, formatDay, formatMonthDropdown, formatWeekNumber, formatWeekNumberHeader, formatWeekdayName, formatYearDropdown } = formatters;\n    const calendar = useCalendar(props, dateLib);\n    const { days, months, navStart, navEnd, previousMonth, nextMonth, goToMonth } = calendar;\n    const getModifiers = createGetModifiers(days, props, navStart, navEnd, dateLib);\n    const { isSelected, select, selected: selectedValue } = useSelection(props, dateLib) ?? {};\n    const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(props, calendar, getModifiers, isSelected ?? ({\n        \"DayPicker.useFocus\": ()=>false\n    })[\"DayPicker.useFocus\"], dateLib);\n    const { labelDayButton, labelGridcell, labelGrid, labelMonthDropdown, labelNav, labelPrevious, labelNext, labelWeekday, labelWeekNumber, labelWeekNumberHeader, labelYearDropdown } = labels;\n    const weekdays = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DayPicker.useMemo[weekdays]\": ()=>getWeekdays(dateLib, props.ISOWeek)\n    }[\"DayPicker.useMemo[weekdays]\"], [\n        dateLib,\n        props.ISOWeek\n    ]);\n    const isInteractive = mode !== undefined || onDayClick !== undefined;\n    const handlePreviousClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handlePreviousClick]\": ()=>{\n            if (!previousMonth) return;\n            goToMonth(previousMonth);\n            onPrevClick?.(previousMonth);\n        }\n    }[\"DayPicker.useCallback[handlePreviousClick]\"], [\n        previousMonth,\n        goToMonth,\n        onPrevClick\n    ]);\n    const handleNextClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleNextClick]\": ()=>{\n            if (!nextMonth) return;\n            goToMonth(nextMonth);\n            onNextClick?.(nextMonth);\n        }\n    }[\"DayPicker.useCallback[handleNextClick]\"], [\n        goToMonth,\n        nextMonth,\n        onNextClick\n    ]);\n    const handleDayClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayClick]\": (day, m)=>({\n                \"DayPicker.useCallback[handleDayClick]\": (e)=>{\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setFocused(day);\n                    select?.(day.date, m, e);\n                    onDayClick?.(day.date, m, e);\n                }\n            })[\"DayPicker.useCallback[handleDayClick]\"]\n    }[\"DayPicker.useCallback[handleDayClick]\"], [\n        select,\n        onDayClick,\n        setFocused\n    ]);\n    const handleDayFocus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayFocus]\": (day, m)=>({\n                \"DayPicker.useCallback[handleDayFocus]\": (e)=>{\n                    setFocused(day);\n                    onDayFocus?.(day.date, m, e);\n                }\n            })[\"DayPicker.useCallback[handleDayFocus]\"]\n    }[\"DayPicker.useCallback[handleDayFocus]\"], [\n        onDayFocus,\n        setFocused\n    ]);\n    const handleDayBlur = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayBlur]\": (day, m)=>({\n                \"DayPicker.useCallback[handleDayBlur]\": (e)=>{\n                    blur();\n                    onDayBlur?.(day.date, m, e);\n                }\n            })[\"DayPicker.useCallback[handleDayBlur]\"]\n    }[\"DayPicker.useCallback[handleDayBlur]\"], [\n        blur,\n        onDayBlur\n    ]);\n    const handleDayKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayKeyDown]\": (day, modifiers)=>({\n                \"DayPicker.useCallback[handleDayKeyDown]\": (e)=>{\n                    const keyMap = {\n                        ArrowLeft: [\n                            e.shiftKey ? \"month\" : \"day\",\n                            props.dir === \"rtl\" ? \"after\" : \"before\"\n                        ],\n                        ArrowRight: [\n                            e.shiftKey ? \"month\" : \"day\",\n                            props.dir === \"rtl\" ? \"before\" : \"after\"\n                        ],\n                        ArrowDown: [\n                            e.shiftKey ? \"year\" : \"week\",\n                            \"after\"\n                        ],\n                        ArrowUp: [\n                            e.shiftKey ? \"year\" : \"week\",\n                            \"before\"\n                        ],\n                        PageUp: [\n                            e.shiftKey ? \"year\" : \"month\",\n                            \"before\"\n                        ],\n                        PageDown: [\n                            e.shiftKey ? \"year\" : \"month\",\n                            \"after\"\n                        ],\n                        Home: [\n                            \"startOfWeek\",\n                            \"before\"\n                        ],\n                        End: [\n                            \"endOfWeek\",\n                            \"after\"\n                        ]\n                    };\n                    if (keyMap[e.key]) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        const [moveBy, moveDir] = keyMap[e.key];\n                        moveFocus(moveBy, moveDir);\n                    }\n                    onDayKeyDown?.(day.date, modifiers, e);\n                }\n            })[\"DayPicker.useCallback[handleDayKeyDown]\"]\n    }[\"DayPicker.useCallback[handleDayKeyDown]\"], [\n        moveFocus,\n        onDayKeyDown,\n        props.dir\n    ]);\n    const handleDayMouseEnter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayMouseEnter]\": (day, modifiers)=>({\n                \"DayPicker.useCallback[handleDayMouseEnter]\": (e)=>{\n                    onDayMouseEnter?.(day.date, modifiers, e);\n                }\n            })[\"DayPicker.useCallback[handleDayMouseEnter]\"]\n    }[\"DayPicker.useCallback[handleDayMouseEnter]\"], [\n        onDayMouseEnter\n    ]);\n    const handleDayMouseLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleDayMouseLeave]\": (day, modifiers)=>({\n                \"DayPicker.useCallback[handleDayMouseLeave]\": (e)=>{\n                    onDayMouseLeave?.(day.date, modifiers, e);\n                }\n            })[\"DayPicker.useCallback[handleDayMouseLeave]\"]\n    }[\"DayPicker.useCallback[handleDayMouseLeave]\"], [\n        onDayMouseLeave\n    ]);\n    const handleMonthChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleMonthChange]\": (date)=>({\n                \"DayPicker.useCallback[handleMonthChange]\": (e)=>{\n                    const selectedMonth = Number(e.target.value);\n                    const month = dateLib.setMonth(dateLib.startOfMonth(date), selectedMonth);\n                    goToMonth(month);\n                }\n            })[\"DayPicker.useCallback[handleMonthChange]\"]\n    }[\"DayPicker.useCallback[handleMonthChange]\"], [\n        dateLib,\n        goToMonth\n    ]);\n    const handleYearChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DayPicker.useCallback[handleYearChange]\": (date)=>({\n                \"DayPicker.useCallback[handleYearChange]\": (e)=>{\n                    const selectedYear = Number(e.target.value);\n                    const month = dateLib.setYear(dateLib.startOfMonth(date), selectedYear);\n                    goToMonth(month);\n                }\n            })[\"DayPicker.useCallback[handleYearChange]\"]\n    }[\"DayPicker.useCallback[handleYearChange]\"], [\n        dateLib,\n        goToMonth\n    ]);\n    const { className, style } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DayPicker.useMemo\": ()=>({\n                className: [\n                    classNames[UI.Root],\n                    props.className\n                ].filter(Boolean).join(\" \"),\n                style: {\n                    ...styles?.[UI.Root],\n                    ...props.style\n                }\n            })\n    }[\"DayPicker.useMemo\"], [\n        classNames,\n        props.className,\n        props.style,\n        styles\n    ]);\n    const dataAttributes = getDataAttributes(props);\n    const rootElRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    useAnimation(rootElRef, Boolean(props.animate), {\n        classNames,\n        months,\n        focused,\n        dateLib\n    });\n    const contextValue = {\n        dayPickerProps: props,\n        selected: selectedValue,\n        select: select,\n        isSelected,\n        months,\n        nextMonth,\n        previousMonth,\n        goToMonth,\n        getModifiers,\n        components,\n        classNames,\n        styles,\n        labels,\n        formatters\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(dayPickerContext.Provider, {\n        value: contextValue\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Root, {\n        rootRef: props.animate ? rootElRef : undefined,\n        className: className,\n        style: style,\n        dir: props.dir,\n        id: props.id,\n        lang: props.lang,\n        nonce: props.nonce,\n        title: props.title,\n        role: props.role,\n        \"aria-label\": props[\"aria-label\"],\n        ...dataAttributes\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Months, {\n        className: classNames[UI.Months],\n        style: styles?.[UI.Months]\n    }, !props.hideNavigation && !navLayout && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Nav, {\n        \"data-animated-nav\": props.animate ? \"true\" : undefined,\n        className: classNames[UI.Nav],\n        style: styles?.[UI.Nav],\n        \"aria-label\": labelNav(),\n        onPreviousClick: handlePreviousClick,\n        onNextClick: handleNextClick,\n        previousMonth: previousMonth,\n        nextMonth: nextMonth\n    }), months.map((calendarMonth, displayIndex)=>{\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Month, {\n            \"data-animated-month\": props.animate ? \"true\" : undefined,\n            className: classNames[UI.Month],\n            style: styles?.[UI.Month],\n            // biome-ignore lint/suspicious/noArrayIndexKey: breaks animation\n            key: displayIndex,\n            displayIndex: displayIndex,\n            calendarMonth: calendarMonth\n        }, navLayout === \"around\" && !props.hideNavigation && displayIndex === 0 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.PreviousMonthButton, {\n            type: \"button\",\n            className: classNames[UI.PreviousMonthButton],\n            tabIndex: previousMonth ? undefined : -1,\n            \"aria-disabled\": previousMonth ? undefined : true,\n            \"aria-label\": labelPrevious(previousMonth),\n            onClick: handlePreviousClick,\n            \"data-animated-button\": props.animate ? \"true\" : undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Chevron, {\n            disabled: previousMonth ? undefined : true,\n            className: classNames[UI.Chevron],\n            orientation: props.dir === \"rtl\" ? \"right\" : \"left\"\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.MonthCaption, {\n            \"data-animated-caption\": props.animate ? \"true\" : undefined,\n            className: classNames[UI.MonthCaption],\n            style: styles?.[UI.MonthCaption],\n            calendarMonth: calendarMonth,\n            displayIndex: displayIndex\n        }, captionLayout?.startsWith(\"dropdown\") ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.DropdownNav, {\n            className: classNames[UI.Dropdowns],\n            style: styles?.[UI.Dropdowns]\n        }, captionLayout === \"dropdown\" || captionLayout === \"dropdown-months\" ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.MonthsDropdown, {\n            className: classNames[UI.MonthsDropdown],\n            \"aria-label\": labelMonthDropdown(),\n            classNames: classNames,\n            components: components,\n            disabled: Boolean(props.disableNavigation),\n            onChange: handleMonthChange(calendarMonth.date),\n            options: getMonthOptions(calendarMonth.date, navStart, navEnd, formatters, dateLib),\n            style: styles?.[UI.Dropdown],\n            value: dateLib.getMonth(calendarMonth.date)\n        }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", null, formatMonthDropdown(calendarMonth.date, dateLib)), captionLayout === \"dropdown\" || captionLayout === \"dropdown-years\" ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.YearsDropdown, {\n            className: classNames[UI.YearsDropdown],\n            \"aria-label\": labelYearDropdown(dateLib.options),\n            classNames: classNames,\n            components: components,\n            disabled: Boolean(props.disableNavigation),\n            onChange: handleYearChange(calendarMonth.date),\n            options: getYearOptions(navStart, navEnd, formatters, dateLib, Boolean(props.reverseYears)),\n            style: styles?.[UI.Dropdown],\n            value: dateLib.getYear(calendarMonth.date)\n        }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", null, formatYearDropdown(calendarMonth.date, dateLib)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n            role: \"status\",\n            \"aria-live\": \"polite\",\n            style: {\n                border: 0,\n                clip: \"rect(0 0 0 0)\",\n                height: \"1px\",\n                margin: \"-1px\",\n                overflow: \"hidden\",\n                padding: 0,\n                position: \"absolute\",\n                width: \"1px\",\n                whiteSpace: \"nowrap\",\n                wordWrap: \"normal\"\n            }\n        }, formatCaption(calendarMonth.date, dateLib.options, dateLib))) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.CaptionLabel, {\n            className: classNames[UI.CaptionLabel],\n            role: \"status\",\n            \"aria-live\": \"polite\"\n        }, formatCaption(calendarMonth.date, dateLib.options, dateLib))), navLayout === \"around\" && !props.hideNavigation && displayIndex === numberOfMonths - 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.NextMonthButton, {\n            type: \"button\",\n            className: classNames[UI.NextMonthButton],\n            tabIndex: nextMonth ? undefined : -1,\n            \"aria-disabled\": nextMonth ? undefined : true,\n            \"aria-label\": labelNext(nextMonth),\n            onClick: handleNextClick,\n            \"data-animated-button\": props.animate ? \"true\" : undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Chevron, {\n            disabled: nextMonth ? undefined : true,\n            className: classNames[UI.Chevron],\n            orientation: props.dir === \"rtl\" ? \"left\" : \"right\"\n        })), displayIndex === numberOfMonths - 1 && navLayout === \"after\" && !props.hideNavigation && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Nav, {\n            \"data-animated-nav\": props.animate ? \"true\" : undefined,\n            className: classNames[UI.Nav],\n            style: styles?.[UI.Nav],\n            \"aria-label\": labelNav(),\n            onPreviousClick: handlePreviousClick,\n            onNextClick: handleNextClick,\n            previousMonth: previousMonth,\n            nextMonth: nextMonth\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.MonthGrid, {\n            role: \"grid\",\n            \"aria-multiselectable\": mode === \"multiple\" || mode === \"range\",\n            \"aria-label\": labelGrid(calendarMonth.date, dateLib.options, dateLib) || undefined,\n            className: classNames[UI.MonthGrid],\n            style: styles?.[UI.MonthGrid]\n        }, !props.hideWeekdays && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Weekdays, {\n            \"data-animated-weekdays\": props.animate ? \"true\" : undefined,\n            className: classNames[UI.Weekdays],\n            style: styles?.[UI.Weekdays]\n        }, showWeekNumber && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.WeekNumberHeader, {\n            \"aria-label\": labelWeekNumberHeader(dateLib.options),\n            className: classNames[UI.WeekNumberHeader],\n            style: styles?.[UI.WeekNumberHeader],\n            scope: \"col\"\n        }, formatWeekNumberHeader()), weekdays.map((weekday)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Weekday, {\n                \"aria-label\": labelWeekday(weekday, dateLib.options, dateLib),\n                className: classNames[UI.Weekday],\n                key: String(weekday),\n                style: styles?.[UI.Weekday],\n                scope: \"col\"\n            }, formatWeekdayName(weekday, dateLib.options, dateLib)))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Weeks, {\n            \"data-animated-weeks\": props.animate ? \"true\" : undefined,\n            className: classNames[UI.Weeks],\n            style: styles?.[UI.Weeks]\n        }, calendarMonth.weeks.map((week)=>{\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Week, {\n                className: classNames[UI.Week],\n                key: week.weekNumber,\n                style: styles?.[UI.Week],\n                week: week\n            }, showWeekNumber && // biome-ignore lint/a11y/useSemanticElements: react component\n            /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.WeekNumber, {\n                week: week,\n                style: styles?.[UI.WeekNumber],\n                \"aria-label\": labelWeekNumber(week.weekNumber, {\n                    locale\n                }),\n                className: classNames[UI.WeekNumber],\n                scope: \"row\",\n                role: \"rowheader\"\n            }, formatWeekNumber(week.weekNumber, dateLib)), week.days.map((day)=>{\n                const { date } = day;\n                const modifiers = getModifiers(day);\n                modifiers[DayFlag.focused] = !modifiers.hidden && Boolean(focused?.isEqualTo(day));\n                modifiers[SelectionState.selected] = isSelected?.(date) || modifiers.selected;\n                if (isDateRange(selectedValue)) {\n                    // add range modifiers\n                    const { from, to } = selectedValue;\n                    modifiers[SelectionState.range_start] = Boolean(from && to && dateLib.isSameDay(date, from));\n                    modifiers[SelectionState.range_end] = Boolean(from && to && dateLib.isSameDay(date, to));\n                    modifiers[SelectionState.range_middle] = rangeIncludesDate(selectedValue, date, true, dateLib);\n                }\n                const style = getStyleForModifiers(modifiers, styles, props.modifiersStyles);\n                const className = getClassNamesForModifiers(modifiers, classNames, props.modifiersClassNames);\n                const ariaLabel = !isInteractive && !modifiers.hidden ? labelGridcell(date, modifiers, dateLib.options, dateLib) : undefined;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Day, {\n                    key: `${dateLib.format(date, \"yyyy-MM-dd\")}_${dateLib.format(day.displayMonth, \"yyyy-MM\")}`,\n                    day: day,\n                    modifiers: modifiers,\n                    className: className.join(\" \"),\n                    style: style,\n                    role: \"gridcell\",\n                    \"aria-selected\": modifiers.selected || undefined,\n                    \"aria-label\": ariaLabel,\n                    \"data-day\": dateLib.format(date, \"yyyy-MM-dd\"),\n                    \"data-month\": day.outside ? dateLib.format(date, \"yyyy-MM\") : undefined,\n                    \"data-selected\": modifiers.selected || undefined,\n                    \"data-disabled\": modifiers.disabled || undefined,\n                    \"data-hidden\": modifiers.hidden || undefined,\n                    \"data-outside\": day.outside || undefined,\n                    \"data-focused\": modifiers.focused || undefined,\n                    \"data-today\": modifiers.today || undefined\n                }, !modifiers.hidden && isInteractive ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.DayButton, {\n                    className: classNames[UI.DayButton],\n                    style: styles?.[UI.DayButton],\n                    type: \"button\",\n                    day: day,\n                    modifiers: modifiers,\n                    disabled: modifiers.disabled || undefined,\n                    tabIndex: isFocusTarget(day) ? 0 : -1,\n                    \"aria-label\": labelDayButton(date, modifiers, dateLib.options, dateLib),\n                    onClick: handleDayClick(day, modifiers),\n                    onBlur: handleDayBlur(day, modifiers),\n                    onFocus: handleDayFocus(day, modifiers),\n                    onKeyDown: handleDayKeyDown(day, modifiers),\n                    onMouseEnter: handleDayMouseEnter(day, modifiers),\n                    onMouseLeave: handleDayMouseLeave(day, modifiers)\n                }, formatDay(date, dateLib.options, dateLib)) : !modifiers.hidden && formatDay(day.date, dateLib.options, dateLib));\n            }));\n        }))));\n    })), props.footer && // biome-ignore lint/a11y/useSemanticElements: react component\n    /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(components.Footer, {\n        className: classNames[UI.Footer],\n        style: styles?.[UI.Footer],\n        role: \"status\",\n        \"aria-live\": \"polite\"\n    }, props.footer)));\n}\nfunction Calendar({ className, classNames, showOutsideDays = true, ...props }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(DayPicker, {\n        showOutsideDays: showOutsideDays,\n        className: cn(\"p-3 schengen-calendar\", className),\n        classNames: {\n            months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n            month: \"space-y-4\",\n            caption: \"flex justify-center pt-1 relative items-center\",\n            caption_label: \"text-sm font-medium\",\n            nav: \"space-x-1 flex items-center\",\n            nav_button: cn(buttonVariants({\n                variant: \"outline\",\n                size: \"icon\"\n            }), \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 mobile-touch-target\"),\n            nav_button_previous: \"absolute left-1\",\n            nav_button_next: \"absolute right-1\",\n            table: \"w-full border-collapse space-y-1\",\n            head_row: \"flex\",\n            head_cell: \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem] sm:w-9\",\n            row: \"flex w-full mt-2\",\n            cell: cn(\"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-middle)]:rounded-none\", \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"),\n            day: cn(buttonVariants({\n                variant: \"ghost\",\n                size: \"icon\"\n            }), \"h-8 w-8 p-0 font-normal aria-selected:opacity-100 sm:h-9 sm:w-9 mobile-calendar-day\"),\n            day_range_start: \"day-range-start\",\n            day_range_end: \"day-range-end\",\n            day_selected: \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground schengen-selected-date\",\n            day_today: \"bg-accent text-accent-foreground font-semibold\",\n            day_outside: \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n            day_disabled: \"text-muted-foreground opacity-50 cursor-not-allowed\",\n            day_range_middle: \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n            day_hidden: \"invisible\",\n            ...classNames\n        },\n        components: {\n            IconLeft: ({ ...props })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(ChevronLeft, {\n                    className: \"h-4 w-4\"\n                }),\n            IconRight: ({ ...props })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(ChevronRight, {\n                    className: \"h-4 w-4\"\n                })\n        },\n        ...props\n    });\n}\nCalendar.displayName = \"Calendar\";\nconst Card = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ref: ref,\n        className: cn(\"rounded-xl border bg-card text-card-foreground shadow schengen-shadow\", className),\n        ...props\n    }));\nCard.displayName = \"Card\";\nconst CardHeader = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ref: ref,\n        className: cn(\"flex flex-col space-y-1.5 p-6\", className),\n        ...props\n    }));\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"h3\", {\n        ref: ref,\n        className: cn(\"font-semibold leading-none tracking-tight\", className),\n        ...props\n    }));\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"p\", {\n        ref: ref,\n        className: cn(\"text-sm text-muted-foreground\", className),\n        ...props\n    }));\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ref: ref,\n        className: cn(\"p-6 pt-0\", className),\n        ...props\n    }));\nCardContent.displayName = \"CardContent\";\nconst CardFooter = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        ref: ref,\n        className: cn(\"flex items-center p-6 pt-0\", className),\n        ...props\n    }));\nCardFooter.displayName = \"CardFooter\";\nconst Input = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, type, leftIcon, rightIcon, error = false, helperText, ...props }, ref)=>{\n    const inputId = react__WEBPACK_IMPORTED_MODULE_1__.useId();\n    const helperTextId = `${inputId}-helper`;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"w-full\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"relative\"\n    }, leftIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\n    }, leftIcon), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"input\", {\n        type: type,\n        className: cn(\"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors\", \"file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground\", \"placeholder:text-muted-foreground\", \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/50 focus-visible:ring-offset-2\", \"disabled:cursor-not-allowed disabled:opacity-50\", leftIcon && \"pl-10\", rightIcon && \"pr-10\", error && \"border-red-500 focus-visible:ring-red-500/50\", \"min-h-[44px] md:min-h-[36px]\", className),\n        ref: ref,\n        \"aria-describedby\": helperText ? helperTextId : undefined,\n        \"aria-invalid\": error,\n        ...props\n    }), rightIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\n    }, rightIcon)), helperText && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"p\", {\n        id: helperTextId,\n        className: cn(\"mt-1 text-xs\", error ? \"text-red-500\" : \"text-gray-500\")\n    }, helperText));\n});\nInput.displayName = \"Input\";\n// src/primitive.tsx\nvar NODES = [\n    \"a\",\n    \"button\",\n    \"div\",\n    \"form\",\n    \"h2\",\n    \"h3\",\n    \"img\",\n    \"input\",\n    \"label\",\n    \"li\",\n    \"nav\",\n    \"ol\",\n    \"p\",\n    \"select\",\n    \"span\",\n    \"svg\",\n    \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node)=>{\n    const Slot = createSlot(`Primitive.${node}`);\n    const Node = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef)=>{\n        const { asChild, ...primitiveProps } = props;\n        const Comp = asChild ? Slot : node;\n        if (false) {}\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, {\n            ...primitiveProps,\n            ref: forwardedRef\n        });\n    });\n    Node.displayName = `Primitive.${node}`;\n    return {\n        ...primitive,\n        [node]: Node\n    };\n}, {});\nvar NAME = \"Label\";\nvar Label$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Primitive.label, {\n        ...props,\n        ref: forwardedRef,\n        onMouseDown: (event)=>{\n            const target = event.target;\n            if (target.closest(\"button, input, select, textarea\")) return;\n            props.onMouseDown?.(event);\n            if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n        }\n    });\n});\nLabel$1.displayName = NAME;\nvar Root = Label$1;\nconst labelVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_3__.cva)(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\", {\n    variants: {\n        variant: {\n            default: \"\",\n            required: \"after:content-['*'] after:ml-0.5 after:text-red-500\",\n            optional: \"after:content-['(optional)'] after:ml-1 after:text-gray-400 after:font-normal after:text-xs\"\n        },\n        size: {\n            default: \"text-sm\",\n            sm: \"text-xs\",\n            lg: \"text-base\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Label = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, size, ...props }, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Root, {\n        ref: ref,\n        className: cn(labelVariants({\n            variant,\n            size\n        }), className),\n        ...props\n    }));\nLabel.displayName = Root.displayName;\nconst badgeVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_3__.cva)(\"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\", {\n    variants: {\n        variant: {\n            default: \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n            secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            destructive: \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n            outline: \"text-foreground\",\n            success: \"border-transparent bg-green-500 text-white shadow hover:bg-green-500/80\",\n            warning: \"border-transparent bg-amber-500 text-white shadow hover:bg-amber-500/80\",\n            info: \"border-transparent bg-blue-500 text-white shadow hover:bg-blue-500/80\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\"\n    }\n});\nfunction Badge({ className, variant, ...props }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: cn(badgeVariants({\n            variant\n        }), className),\n        ...props\n    });\n}\nfunction Header({ onLoginClick, onSignupClick, className = \"\" }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"header\", {\n        className: `w-full border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 ${className}`\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"container mx-auto px-4 sm:px-6 lg:px-8\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"flex h-16 items-center justify-between\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"flex items-center space-x-2\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"flex h-8 w-8 items-center justify-center rounded-lg bg-primary\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(MapPin, {\n        className: \"h-5 w-5 text-primary-foreground\"\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"flex flex-col\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        className: \"text-lg font-bold text-foreground leading-none\"\n    }, \"Schengen Calculator\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n        className: \"text-xs text-muted-foreground leading-none\"\n    }, \"90/180 Day Rule Checker\"))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"nav\", {\n        className: \"hidden md:flex items-center space-x-6\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"a\", {\n        href: \"#calculator\",\n        className: \"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n    }, \"Calculator\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"a\", {\n        href: \"#about\",\n        className: \"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n    }, \"About 90/180 Rule\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"a\", {\n        href: \"#help\",\n        className: \"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n    }, \"Help\")), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"flex items-center space-x-3\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Button$1, {\n        variant: \"ghost\",\n        size: \"sm\",\n        onClick: onLoginClick,\n        className: \"hidden sm:inline-flex\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(User, {\n        className: \"h-4 w-4 mr-2\"\n    }), \"Log In\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Button$1, {\n        variant: \"default\",\n        size: \"sm\",\n        onClick: onSignupClick,\n        className: \"schengen-brand-gradient\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(UserPlus, {\n        className: \"h-4 w-4 mr-2\"\n    }), \"Sign Up\"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Button$1, {\n        variant: \"ghost\",\n        size: \"sm\",\n        className: \"md:hidden\",\n        \"aria-label\": \"Open menu\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", {\n        className: \"h-6 w-6\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: 2,\n        d: \"M4 6h16M4 12h16M4 18h16\"\n    })))))));\n}\nfunction CircularProgress({ value, max = 90, size = 120, strokeWidth = 8, progressColor = \"#10b981\", backgroundColor = \"#e5e7eb\", textColor = \"#374151\", className, label, showPercentage = false, animationDuration = 1000 }) {\n    // Calculate progress percentage\n    const percentage = Math.min(Math.max(value / max * 100, 0), 100);\n    // Calculate circle properties\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const offset = circumference - percentage / 100 * circumference;\n    // Display value\n    const displayValue = showPercentage ? `${Math.round(percentage)}%` : Math.round(value).toString();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: cn(\"relative inline-flex items-center justify-center\", className)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", {\n        width: size,\n        height: size,\n        className: \"transform -rotate-90\",\n        \"aria-labelledby\": \"circular-progress-title\",\n        role: \"progressbar\",\n        \"aria-valuenow\": value,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": max\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"title\", {\n        id: \"circular-progress-title\"\n    }, label ? `${label}: ${displayValue}` : `Progress: ${displayValue}`), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"circle\", {\n        cx: size / 2,\n        cy: size / 2,\n        r: radius,\n        stroke: backgroundColor,\n        strokeWidth: strokeWidth,\n        fill: \"transparent\",\n        className: \"opacity-30\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"circle\", {\n        cx: size / 2,\n        cy: size / 2,\n        r: radius,\n        stroke: progressColor,\n        strokeWidth: strokeWidth,\n        fill: \"transparent\",\n        strokeDasharray: circumference,\n        strokeDashoffset: offset,\n        strokeLinecap: \"round\",\n        className: \"transition-all duration-1000 ease-out\",\n        style: {\n            animationDuration: `${animationDuration}ms`\n        }\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"absolute inset-0 flex flex-col items-center justify-center\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"text-3xl font-bold tabular-nums\",\n        style: {\n            color: textColor\n        }\n    }, displayValue), label && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n        className: \"text-sm font-medium mt-1\",\n        style: {\n            color: textColor\n        }\n    }, label)));\n}\nfunction CalendarModal({ isOpen, onClose, onDateRangeSelect, initialRange, disabledDates = [], occupiedDateInfo = [], minDate, maxDate, className }) {\n    const [currentMonth, setCurrentMonth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Date());\n    const [selectedRange, setSelectedRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialRange || {\n        startDate: null,\n        endDate: null\n    });\n    const [selectingEnd, setSelectingEnd] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Reset when modal opens/closes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CalendarModal.useEffect\": ()=>{\n            if (isOpen) {\n                setSelectedRange(initialRange || {\n                    startDate: null,\n                    endDate: null\n                });\n                setSelectingEnd(false);\n            }\n        }\n    }[\"CalendarModal.useEffect\"], [\n        isOpen,\n        initialRange\n    ]);\n    // Handle date click\n    const handleDateClick = (date)=>{\n        // Check if date is disabled\n        if (isDateDisabled(date)) return;\n        // Handle occupied date click - show helpful message\n        if (isDateOccupied(date)) {\n            const occupiedInfo = getOccupiedDateInfo(date);\n            if (occupiedInfo) {\n                // You could add a toast notification here in the future\n                console.log(`Cannot select ${(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_17__.format)(date, 'MMM dd')} - already used by ${occupiedInfo.country} trip`);\n            }\n            return;\n        }\n        if (!selectedRange.startDate || selectingEnd) {\n            // Select start date or reset and select new start date\n            if (selectingEnd && selectedRange.startDate && date < selectedRange.startDate) {\n                // If clicking before start date while selecting end, reset\n                setSelectedRange({\n                    startDate: date,\n                    endDate: null\n                });\n                setSelectingEnd(false);\n            } else if (!selectedRange.startDate) {\n                // First selection - start date\n                setSelectedRange({\n                    startDate: date,\n                    endDate: null\n                });\n                setSelectingEnd(true);\n            } else {\n                // Selecting end date\n                setSelectedRange({\n                    ...selectedRange,\n                    endDate: date\n                });\n                setSelectingEnd(false);\n            }\n        } else {\n            // Start date exists, this is end date selection\n            if (date >= selectedRange.startDate) {\n                setSelectedRange({\n                    ...selectedRange,\n                    endDate: date\n                });\n                setSelectingEnd(false);\n            } else {\n                // If clicked date is before start, make it the new start\n                setSelectedRange({\n                    startDate: date,\n                    endDate: null\n                });\n                setSelectingEnd(true);\n            }\n        }\n    };\n    // Check if date is disabled\n    const isDateDisabled = (date)=>{\n        if (minDate && date < minDate) return true;\n        if (maxDate && date > maxDate) return true;\n        return disabledDates.some((disabledDate)=>(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(date, disabledDate));\n    };\n    // Check if date is occupied by an existing trip\n    const getOccupiedDateInfo = (date)=>{\n        return occupiedDateInfo.find((info)=>(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(info.date, date)) || null;\n    };\n    // Check if date is occupied\n    const isDateOccupied = (date)=>{\n        return getOccupiedDateInfo(date) !== null;\n    };\n    // Check if date is in selected range\n    const isDateInRange = (date)=>{\n        if (!selectedRange.startDate) return false;\n        if (!selectedRange.endDate) return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(date, selectedRange.startDate);\n        return date >= selectedRange.startDate && date <= selectedRange.endDate;\n    };\n    // Check if date is range boundary\n    const isRangeStart = (date)=>{\n        return selectedRange.startDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(date, selectedRange.startDate);\n    };\n    const isRangeEnd = (date)=>{\n        return selectedRange.endDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_25__.isSameDay)(date, selectedRange.endDate);\n    };\n    // Handle clear\n    const handleClear = ()=>{\n        setSelectedRange({\n            startDate: null,\n            endDate: null\n        });\n        setSelectingEnd(false);\n    };\n    // Handle done\n    const handleDone = ()=>{\n        onDateRangeSelect(selectedRange);\n        onClose();\n    };\n    // Navigation functions\n    const goToPrevMonth = ()=>setCurrentMonth((prev)=>(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_37__.subMonths)(prev, 1));\n    const goToNextMonth = ()=>setCurrentMonth((prev)=>(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_7__.addMonths)(prev, 1));\n    // Render calendar month\n    const renderMonth = (monthDate)=>{\n        const monthStart = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_34__.startOfMonth)(monthDate);\n        const monthEnd = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_14__.endOfMonth)(monthDate);\n        // Get all days in the month\n        const monthDays = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_38__.eachDayOfInterval)({\n            start: monthStart,\n            end: monthEnd\n        });\n        // Add padding days from previous month\n        const startPadding = monthStart.getDay();\n        const paddingDays = [];\n        for(let i = startPadding - 1; i >= 0; i--){\n            const paddingDate = new Date(monthStart);\n            paddingDate.setDate(paddingDate.getDate() - (i + 1));\n            paddingDays.push(paddingDate);\n        }\n        // Add padding days from next month\n        const endPadding = 6 - monthEnd.getDay();\n        const endPaddingDays = [];\n        for(let i = 1; i <= endPadding; i++){\n            const paddingDate = new Date(monthEnd);\n            paddingDate.setDate(paddingDate.getDate() + i);\n            endPaddingDays.push(paddingDate);\n        }\n        const allDays = [\n            ...paddingDays,\n            ...monthDays,\n            ...endPaddingDays\n        ];\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n            className: \"flex-1\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n            className: \"text-center font-semibold text-lg mb-4\"\n        }, (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_17__.format)(monthDate, 'MMMM yyyy')), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n            className: \"grid grid-cols-7 gap-1 mb-2\"\n        }, [\n            'Su',\n            'Mo',\n            'Tu',\n            'We',\n            'Th',\n            'Fr',\n            'Sa'\n        ].map((day)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n                key: day,\n                className: \"text-center text-sm font-medium text-gray-500 p-2\"\n            }, day))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n            className: \"grid grid-cols-7 gap-1\"\n        }, allDays.map((date, index)=>{\n            const isCurrentMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_26__.isSameMonth)(date, monthDate);\n            const disabled = isDateDisabled(date);\n            const occupied = isDateOccupied(date);\n            const occupiedInfo = getOccupiedDateInfo(date);\n            const inRange = isDateInRange(date);\n            const rangeStart = isRangeStart(date);\n            const rangeEnd = isRangeEnd(date);\n            const today = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_eachDayOfInterval_eachMonthOfInterval_endOfISOWeek_endOfMonth_endOfWeek_endOfYear_format_getISOWeek_getMonth_getWeek_getYear_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_isToday_max_min_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subMonths_date_fns__WEBPACK_IMPORTED_MODULE_39__.isToday)(date);\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"button\", {\n                key: index,\n                onClick: ()=>handleDateClick(date),\n                disabled: disabled || !isCurrentMonth || occupied,\n                title: occupied && occupiedInfo ? `Already used by ${occupiedInfo.country} trip` : undefined,\n                className: cn(\"h-10 w-10 text-sm font-medium rounded-lg transition-colors relative\", \"hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-primary/50\", {\n                    // Current month styling\n                    \"text-gray-900\": isCurrentMonth && !disabled && !occupied,\n                    \"text-gray-400\": !isCurrentMonth,\n                    // Disabled styling\n                    \"text-gray-300 cursor-not-allowed\": disabled,\n                    // Occupied styling (CLAUDE.md requirement: grey + strikethrough)\n                    \"bg-gray-200 text-gray-600 cursor-not-allowed opacity-60\": occupied && isCurrentMonth,\n                    // Today styling\n                    \"bg-blue-100 text-blue-900\": today && !inRange && !occupied && isCurrentMonth,\n                    // Range styling\n                    \"bg-primary/20\": inRange && !rangeStart && !rangeEnd && !occupied,\n                    \"bg-primary text-white\": (rangeStart || rangeEnd) && !occupied,\n                    // Hover effects\n                    \"hover:bg-primary/10\": !disabled && !inRange && !occupied && isCurrentMonth,\n                    \"hover:bg-primary/90\": (rangeStart || rangeEnd) && !disabled && !occupied\n                })\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", {\n                className: occupied ? \"line-through\" : \"\"\n            }, date.getDate()));\n        })));\n    };\n    if (!isOpen) return null;\n    return  false ? /*#__PURE__*/ 0 : null;\n}\n/**\n * Date Overlap Prevention System\n * CRITICAL: Prevents users from selecting dates that conflict with existing trips\n * Requirement: A person cannot be in two different locations simultaneously\n */ class DateOverlapValidator {\n    /**\n   * CRITICAL: Validates if new date range conflicts with existing trips\n   * Must be 100% accurate for EU Schengen compliance\n   */ static validateDateRange(newRange, existingTrips, excludeTripId) {\n        if (!newRange.startDate || !newRange.endDate) {\n            return {\n                isValid: true,\n                conflicts: [],\n                message: 'Dates are available',\n                conflictDates: []\n            };\n        }\n        // Filter out the trip being edited (if any)\n        const tripsToCheck = existingTrips.filter((trip)=>trip.id !== excludeTripId && trip.startDate && trip.endDate);\n        const conflicts = tripsToCheck.filter((trip)=>this.rangesOverlap(newRange, {\n                startDate: trip.startDate,\n                endDate: trip.endDate\n            }));\n        const conflictDates = conflicts.length > 0 ? this.getOverlapDates(newRange, conflicts) : [];\n        return {\n            isValid: conflicts.length === 0,\n            conflicts: conflicts,\n            message: conflicts.length > 0 ? `Dates overlap with existing trip: ${conflicts[0].country}` : 'Dates are available',\n            conflictDates\n        };\n    }\n    /**\n   * Returns array of dates that should be disabled in date picker\n   * These dates MUST be visually greyed out with strikethrough\n   */ static getDisabledDates(existingTrips, excludeTripId) {\n        const disabledDates = [];\n        const tripsToCheck = existingTrips.filter((trip)=>trip.id !== excludeTripId && trip.startDate && trip.endDate);\n        tripsToCheck.forEach((trip)=>{\n            if (!trip.startDate || !trip.endDate) return;\n            let currentDate = new Date(trip.startDate);\n            const endDate = new Date(trip.endDate);\n            while(currentDate <= endDate){\n                disabledDates.push(new Date(currentDate));\n                currentDate.setDate(currentDate.getDate() + 1);\n            }\n        });\n        return disabledDates;\n    }\n    /**\n   * Returns detailed information about occupied dates for tooltips\n   */ static getOccupiedDateInfo(existingTrips, excludeTripId) {\n        const occupiedInfo = [];\n        const tripsToCheck = existingTrips.filter((trip)=>trip.id !== excludeTripId && trip.startDate && trip.endDate);\n        tripsToCheck.forEach((trip)=>{\n            if (!trip.startDate || !trip.endDate) return;\n            let currentDate = new Date(trip.startDate);\n            const endDate = new Date(trip.endDate);\n            while(currentDate <= endDate){\n                occupiedInfo.push({\n                    date: new Date(currentDate),\n                    tripId: trip.id,\n                    country: trip.country,\n                    tripName: `${trip.country} Trip`\n                });\n                currentDate.setDate(currentDate.getDate() + 1);\n            }\n        });\n        return occupiedInfo;\n    }\n    /**\n   * Check if two date ranges overlap\n   */ static rangesOverlap(range1, range2) {\n        if (!range1.startDate || !range1.endDate || !range2.startDate || !range2.endDate) {\n            return false;\n        }\n        // Convert to timestamps for accurate comparison\n        const start1 = range1.startDate.getTime();\n        const end1 = range1.endDate.getTime();\n        const start2 = range2.startDate.getTime();\n        const end2 = range2.endDate.getTime();\n        // Check for overlap: ranges overlap if start1 <= end2 AND end1 >= start2\n        return start1 <= end2 && end1 >= start2;\n    }\n    /**\n   * Get specific dates where overlap occurs\n   */ static getOverlapDates(newRange, conflicts) {\n        if (!newRange.startDate || !newRange.endDate) return [];\n        const overlapDates = [];\n        const newStart = new Date(newRange.startDate);\n        const newEnd = new Date(newRange.endDate);\n        let currentDate = new Date(newStart);\n        while(currentDate <= newEnd){\n            // Check if this date is occupied by any conflicting trip\n            const isOccupied = conflicts.some((trip)=>{\n                if (!trip.startDate || !trip.endDate) return false;\n                const tripStart = new Date(trip.startDate);\n                const tripEnd = new Date(trip.endDate);\n                return currentDate >= tripStart && currentDate <= tripEnd;\n            });\n            if (isOccupied) {\n                overlapDates.push(new Date(currentDate));\n            }\n            currentDate.setDate(currentDate.getDate() + 1);\n        }\n        return overlapDates;\n    }\n    /**\n   * Helper to format date for user messages\n   */ static formatDateForMessage(date) {\n        return date.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n        });\n    }\n    /**\n   * Get user-friendly error message for date conflicts\n   */ static getConflictMessage(conflicts, conflictDates) {\n        if (conflicts.length === 0) return 'Dates are available';\n        if (conflicts.length === 1) {\n            const conflict = conflicts[0];\n            const startStr = conflict.startDate ? this.formatDateForMessage(conflict.startDate) : 'Unknown';\n            const endStr = conflict.endDate ? this.formatDateForMessage(conflict.endDate) : 'Unknown';\n            return `Cannot select these dates. You already have a trip to ${conflict.country} from ${startStr} to ${endStr}.`;\n        }\n        return `Cannot select these dates. You have ${conflicts.length} overlapping trips.`;\n    }\n}\nfunction useDateOverlapPrevention({ existingTrips, excludeTripId }) {\n    const validateDateRange = (range)=>{\n        return DateOverlapValidator.validateDateRange(range, existingTrips, excludeTripId);\n    };\n    const getDisabledDates = ()=>{\n        return DateOverlapValidator.getDisabledDates(existingTrips, excludeTripId);\n    };\n    const getOccupiedDateInfo = ()=>{\n        return DateOverlapValidator.getOccupiedDateInfo(existingTrips, excludeTripId);\n    };\n    const isDateOccupied = (date)=>{\n        const disabledDates = getDisabledDates();\n        return disabledDates.some((disabledDate)=>disabledDate.toDateString() === date.toDateString());\n    };\n    return {\n        validateDateRange,\n        getDisabledDates,\n        getOccupiedDateInfo,\n        isDateOccupied\n    };\n}\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../ui/dist/index.esm.js\n");

/***/ }),

/***/ "(ssr)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HomePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_RobustSchengenCalculator_getCountriesForSelect_schengen_calculator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=RobustSchengenCalculator,getCountriesForSelect!=!@schengen/calculator */ \"(ssr)/__barrel_optimize__?names=RobustSchengenCalculator,getCountriesForSelect!=!../calculator/dist/index.esm.js\");\n/* harmony import */ var _barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Button,CalendarModal,DateOverlapValidator,useDateOverlapPrevention!=!@schengen/ui */ \"(ssr)/__barrel_optimize__?names=Button,CalendarModal,DateOverlapValidator,useDateOverlapPrevention!=!../ui/dist/index.esm.js\");\n/* harmony import */ var _barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Calendar,ChevronRight!=!lucide-react */ \"(ssr)/../../node_modules/lucide-react/dist/esm/icons/chevron-right.js\");\n/* harmony import */ var _barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Calendar,ChevronRight!=!lucide-react */ \"(ssr)/../../node_modules/lucide-react/dist/esm/icons/calendar.js\");\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"(ssr)/./node_modules/date-fns/format.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\nconst schengenCountries = [\n    {\n        code: \"AT\",\n        name: \"Austria\",\n        flag: \"🇦🇹\"\n    },\n    {\n        code: \"BE\",\n        name: \"Belgium\",\n        flag: \"🇧🇪\"\n    },\n    {\n        code: \"BG\",\n        name: \"Bulgaria\",\n        flag: \"🇧🇬\"\n    },\n    {\n        code: \"HR\",\n        name: \"Croatia\",\n        flag: \"🇭🇷\"\n    },\n    {\n        code: \"CY\",\n        name: \"Cyprus\",\n        flag: \"🇨🇾\"\n    },\n    {\n        code: \"CZ\",\n        name: \"Czech Republic\",\n        flag: \"🇨🇿\"\n    },\n    {\n        code: \"DK\",\n        name: \"Denmark\",\n        flag: \"🇩🇰\"\n    },\n    {\n        code: \"EE\",\n        name: \"Estonia\",\n        flag: \"🇪🇪\"\n    },\n    {\n        code: \"FI\",\n        name: \"Finland\",\n        flag: \"🇫🇮\"\n    },\n    {\n        code: \"FR\",\n        name: \"France\",\n        flag: \"🇫🇷\"\n    },\n    {\n        code: \"DE\",\n        name: \"Germany\",\n        flag: \"🇩🇪\"\n    },\n    {\n        code: \"GR\",\n        name: \"Greece\",\n        flag: \"🇬🇷\"\n    },\n    {\n        code: \"HU\",\n        name: \"Hungary\",\n        flag: \"🇭🇺\"\n    },\n    {\n        code: \"IS\",\n        name: \"Iceland\",\n        flag: \"🇮🇸\"\n    },\n    {\n        code: \"IT\",\n        name: \"Italy\",\n        flag: \"🇮🇹\"\n    },\n    {\n        code: \"LV\",\n        name: \"Latvia\",\n        flag: \"🇱🇻\"\n    },\n    {\n        code: \"LI\",\n        name: \"Liechtenstein\",\n        flag: \"🇱🇮\"\n    },\n    {\n        code: \"LT\",\n        name: \"Lithuania\",\n        flag: \"🇱🇹\"\n    },\n    {\n        code: \"LU\",\n        name: \"Luxembourg\",\n        flag: \"🇱🇺\"\n    },\n    {\n        code: \"MT\",\n        name: \"Malta\",\n        flag: \"🇲🇹\"\n    },\n    {\n        code: \"NL\",\n        name: \"Netherlands\",\n        flag: \"🇳🇱\"\n    },\n    {\n        code: \"NO\",\n        name: \"Norway\",\n        flag: \"🇳🇴\"\n    },\n    {\n        code: \"PL\",\n        name: \"Poland\",\n        flag: \"🇵🇱\"\n    },\n    {\n        code: \"PT\",\n        name: \"Portugal\",\n        flag: \"🇵🇹\"\n    },\n    {\n        code: \"RO\",\n        name: \"Romania\",\n        flag: \"🇷🇴\"\n    },\n    {\n        code: \"SK\",\n        name: \"Slovakia\",\n        flag: \"🇸🇰\"\n    },\n    {\n        code: \"SI\",\n        name: \"Slovenia\",\n        flag: \"🇸🇮\"\n    },\n    {\n        code: \"ES\",\n        name: \"Spain\",\n        flag: \"🇪🇸\"\n    },\n    {\n        code: \"SE\",\n        name: \"Sweden\",\n        flag: \"🇸🇪\"\n    },\n    {\n        code: \"CH\",\n        name: \"Switzerland\",\n        flag: \"🇨🇭\"\n    }\n];\n// Animated Counter Component\nfunction AnimatedCounter({ value, duration = 500 }) {\n    const [displayValue, setDisplayValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(value);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AnimatedCounter.useEffect\": ()=>{\n            if (displayValue === value) return;\n            const startValue = displayValue;\n            const difference = value - startValue;\n            const startTime = Date.now();\n            const animate = {\n                \"AnimatedCounter.useEffect.animate\": ()=>{\n                    const elapsed = Date.now() - startTime;\n                    const progress = Math.min(elapsed / duration, 1);\n                    // Easing function for smooth animation\n                    const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n                    const currentValue = Math.round(startValue + difference * easeOutQuart);\n                    setDisplayValue(currentValue);\n                    if (progress < 1) {\n                        requestAnimationFrame(animate);\n                    }\n                }\n            }[\"AnimatedCounter.useEffect.animate\"];\n            requestAnimationFrame(animate);\n        }\n    }[\"AnimatedCounter.useEffect\"], [\n        value,\n        duration,\n        displayValue\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n        children: displayValue\n    }, void 0, false, {\n        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n        lineNumber: 85,\n        columnNumber: 10\n    }, this);\n}\n// Progress Circle Component\nfunction ProgressCircle({ daysRemaining, size = 80 }) {\n    const [animatedProgress, setAnimatedProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const maxDays = 90;\n    const percentage = Math.max(0, Math.min(100, daysRemaining / maxDays * 100));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProgressCircle.useEffect\": ()=>{\n            const startProgress = animatedProgress;\n            const targetProgress = percentage;\n            const startTime = Date.now();\n            const duration = 800;\n            const animate = {\n                \"ProgressCircle.useEffect.animate\": ()=>{\n                    const elapsed = Date.now() - startTime;\n                    const progress = Math.min(elapsed / duration, 1);\n                    // Easing function for smooth animation\n                    const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n                    const currentProgress = startProgress + (targetProgress - startProgress) * easeOutQuart;\n                    setAnimatedProgress(currentProgress);\n                    if (progress < 1) {\n                        requestAnimationFrame(animate);\n                    }\n                }\n            }[\"ProgressCircle.useEffect.animate\"];\n            requestAnimationFrame(animate);\n        }\n    }[\"ProgressCircle.useEffect\"], [\n        percentage\n    ]);\n    const radius = (size - 12) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const strokeDashoffset = circumference - animatedProgress / 100 * circumference;\n    // Color logic based on days remaining\n    const getColor = ()=>{\n        if (daysRemaining > 60) return \"#10B981\" // Green\n        ;\n        if (daysRemaining > 30) return \"#F59E0B\" // Yellow/Orange\n        ;\n        if (daysRemaining > 10) return \"#EF4444\" // Red\n        ;\n        return \"#DC2626\" // Dark Red\n        ;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative flex items-center justify-center\",\n            style: {\n                width: size,\n                height: size\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: size,\n                    height: size,\n                    className: \"transform -rotate-90\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                            cx: size / 2,\n                            cy: size / 2,\n                            r: radius,\n                            stroke: \"#E5E7EB\",\n                            strokeWidth: \"6\",\n                            fill: \"transparent\"\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                            lineNumber: 135,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                            cx: size / 2,\n                            cy: size / 2,\n                            r: radius,\n                            stroke: getColor(),\n                            strokeWidth: \"6\",\n                            fill: \"transparent\",\n                            strokeLinecap: \"round\",\n                            strokeDasharray: circumference,\n                            strokeDashoffset: strokeDashoffset,\n                            className: \"transition-all duration-500 ease-out\"\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                            lineNumber: 137,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                    lineNumber: 133,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 flex items-center justify-center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: `font-bold ${size > 60 ? \"text-xl\" : \"text-lg\"}`,\n                        style: {\n                            color: getColor()\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnimatedCounter, {\n                            value: daysRemaining\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                            lineNumber: 154,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                        lineNumber: 153,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                    lineNumber: 152,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n            lineNumber: 132,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n        lineNumber: 131,\n        columnNumber: 5\n    }, this);\n}\nfunction HomePage() {\n    const [entries, setEntries] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"1\",\n            country: \"\",\n            startDate: null,\n            endDate: null,\n            days: 0,\n            daysInLast180: 0,\n            daysRemaining: 90,\n            activeColumn: \"country\"\n        }\n    ]);\n    const [isCalendarOpen, setIsCalendarOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedEntryId, setSelectedEntryId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Get countries for dropdown\n    const countryOptions = (0,_barrel_optimize_names_RobustSchengenCalculator_getCountriesForSelect_schengen_calculator__WEBPACK_IMPORTED_MODULE_2__.getCountriesForSelect)();\n    // Recalculate all entries whenever entries change\n    const recalculateEntries = (updatedEntries)=>{\n        // First, ensure all entries have correct days calculation\n        const entriesWithDays = updatedEntries.map((entry)=>{\n            let calculatedDays = 0;\n            if (entry.startDate && entry.endDate) {\n                calculatedDays = Math.ceil((entry.endDate.getTime() - entry.startDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n            }\n            return {\n                ...entry,\n                days: calculatedDays\n            };\n        });\n        // Convert entries to Trip format for the calculator\n        const tripsForCalculation = entriesWithDays.filter((entry)=>entry.country && entry.startDate && entry.endDate).map((entry)=>({\n                id: entry.id,\n                country: entry.country,\n                startDate: entry.startDate,\n                endDate: entry.endDate,\n                days: entry.days\n            }));\n        // Calculate overall compliance using all valid trips\n        const compliance = tripsForCalculation.length > 0 ? _barrel_optimize_names_RobustSchengenCalculator_getCountriesForSelect_schengen_calculator__WEBPACK_IMPORTED_MODULE_2__.RobustSchengenCalculator.calculateExactCompliance(tripsForCalculation, new Date()) : {\n            totalDaysUsed: 0,\n            daysRemaining: 90,\n            isCompliant: true\n        };\n        // Update each entry with calculated values\n        const entriesWithCalculations = entriesWithDays.map((entry, index)=>{\n            // Determine active column based on completion state\n            let activeColumn = \"country\";\n            if (entry.country && !entry.startDate) {\n                activeColumn = \"dates\";\n            } else if (entry.country && entry.startDate && entry.endDate) {\n                activeColumn = \"complete\";\n            } else if (!entry.country) {\n                activeColumn = \"country\";\n            }\n            // Calculate cumulative days up to this row (including this row)\n            const tripsUpToThisRow = entriesWithDays.slice(0, index + 1).filter((e)=>e.country && e.startDate && e.endDate).map((e)=>({\n                    id: e.id,\n                    country: e.country,\n                    startDate: e.startDate,\n                    endDate: e.endDate,\n                    days: e.days\n                }));\n            const cumulativeCompliance = tripsUpToThisRow.length > 0 ? _barrel_optimize_names_RobustSchengenCalculator_getCountriesForSelect_schengen_calculator__WEBPACK_IMPORTED_MODULE_2__.RobustSchengenCalculator.calculateExactCompliance(tripsUpToThisRow, new Date()) : {\n                totalDaysUsed: 0,\n                daysRemaining: 90,\n                isCompliant: true\n            };\n            return {\n                ...entry,\n                daysInLast180: cumulativeCompliance.totalDaysUsed,\n                daysRemaining: cumulativeCompliance.daysRemaining,\n                activeColumn\n            };\n        });\n        return entriesWithCalculations;\n    };\n    const addEntry = ()=>{\n        const newEntry = {\n            id: Date.now().toString(),\n            country: \"\",\n            startDate: null,\n            endDate: null,\n            days: 0,\n            daysInLast180: 0,\n            daysRemaining: 90,\n            activeColumn: \"country\"\n        };\n        const updatedEntries = [\n            ...entries,\n            newEntry\n        ];\n        setEntries(recalculateEntries(updatedEntries));\n    };\n    const updateEntry = (id, field, value)=>{\n        const updatedEntries = entries.map((entry)=>{\n            if (entry.id === id) {\n                const updatedEntry = {\n                    ...entry,\n                    [field]: value\n                };\n                // Calculate days when both dates are selected\n                if (field === \"startDate\" || field === \"endDate\") {\n                    if (updatedEntry.startDate && updatedEntry.endDate) {\n                        updatedEntry.days = Math.ceil((updatedEntry.endDate.getTime() - updatedEntry.startDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n                    } else {\n                        updatedEntry.days = 0;\n                    }\n                }\n                return updatedEntry;\n            }\n            return entry;\n        });\n        setEntries(recalculateEntries(updatedEntries));\n    };\n    const updateDateRange = (id, dateRange)=>{\n        const updatedEntries = entries.map((entry)=>{\n            if (entry.id === id) {\n                const updatedEntry = {\n                    ...entry,\n                    startDate: dateRange.startDate || null,\n                    endDate: dateRange.endDate || null\n                };\n                // Calculate days when both dates are selected\n                if (updatedEntry.startDate && updatedEntry.endDate) {\n                    updatedEntry.days = Math.ceil((updatedEntry.endDate.getTime() - updatedEntry.startDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n                } else {\n                    updatedEntry.days = 0;\n                }\n                return updatedEntry;\n            }\n            return entry;\n        });\n        setEntries(recalculateEntries(updatedEntries));\n    };\n    const getColumnBorderStyles = (entry, columnType)=>{\n        const isActive = entry.activeColumn === columnType;\n        const isCompleted = entry.activeColumn === \"dates\" && columnType === \"country\" || entry.activeColumn === \"complete\" && (columnType === \"country\" || columnType === \"dates\");\n        const isNext = entry.activeColumn === \"country\" && columnType === \"dates\" && entry.country || entry.activeColumn === \"dates\" && columnType === \"results\";\n        if (isActive) {\n            return \"border-2 border-blue-500 bg-blue-50\";\n        } else if (isCompleted) {\n            return \"border-2 border-green-300 bg-green-50\";\n        } else if (isNext) {\n            return \"border-2 border-orange-300 bg-orange-50\";\n        } else {\n            return \"border border-gray-200 bg-gray-50\";\n        }\n    };\n    const handleOpenCalendar = (entryId)=>{\n        setSelectedEntryId(entryId);\n        setIsCalendarOpen(true);\n    };\n    const handleCloseCalendar = ()=>{\n        setIsCalendarOpen(false);\n        setSelectedEntryId(\"\");\n    };\n    const handleDateRangeSelect = (range)=>{\n        if (!selectedEntryId) return;\n        // Validate date range for conflicts before updating\n        const validation = _barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.DateOverlapValidator.validateDateRange(range, tripsForValidation, selectedEntryId);\n        if (!validation.isValid) {\n            // Log helpful message (in the future, could show a toast notification)\n            console.warn('Date conflict detected:', validation.message);\n            console.log('Conflicting trips:', validation.conflicts.map((c)=>`${c.country} (${c.startDate?.toDateString()} - ${c.endDate?.toDateString()})`));\n            // Don't update the range if there's a conflict\n            return;\n        }\n        // Range is valid, proceed with update\n        updateDateRange(selectedEntryId, range);\n    };\n    // Calculate totals for display\n    const totalDays = entries.reduce((sum, entry)=>sum + entry.days, 0);\n    const tripsForCalculation = entries.filter((entry)=>entry.country && entry.startDate && entry.endDate).map((entry)=>({\n            id: entry.id,\n            country: entry.country,\n            startDate: entry.startDate,\n            endDate: entry.endDate,\n            days: entry.days\n        }));\n    const compliance = tripsForCalculation.length > 0 ? _barrel_optimize_names_RobustSchengenCalculator_getCountriesForSelect_schengen_calculator__WEBPACK_IMPORTED_MODULE_2__.RobustSchengenCalculator.calculateExactCompliance(tripsForCalculation, new Date()) : {\n        totalDaysUsed: 0,\n        daysRemaining: 90,\n        isCompliant: true\n    };\n    // Date overlap prevention: Convert entries to TripEntry format for validation\n    const tripsForValidation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"HomePage.useMemo[tripsForValidation]\": ()=>{\n            return entries.map({\n                \"HomePage.useMemo[tripsForValidation]\": (entry)=>({\n                        id: entry.id,\n                        country: entry.country,\n                        startDate: entry.startDate,\n                        endDate: entry.endDate,\n                        days: entry.days\n                    })\n            }[\"HomePage.useMemo[tripsForValidation]\"]);\n        }\n    }[\"HomePage.useMemo[tripsForValidation]\"], [\n        entries\n    ]);\n    // Get date overlap prevention data for the currently selected entry\n    const currentEntryId = selectedEntryId;\n    const { getDisabledDates, getOccupiedDateInfo } = (0,_barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.useDateOverlapPrevention)({\n        existingTrips: tripsForValidation,\n        excludeTripId: currentEntryId // Exclude current entry when editing\n    });\n    // Get disabled dates and occupied date info for the calendar\n    const disabledDates = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"HomePage.useMemo[disabledDates]\": ()=>getDisabledDates()\n    }[\"HomePage.useMemo[disabledDates]\"], [\n        getDisabledDates\n    ]);\n    const occupiedDateInfo = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"HomePage.useMemo[occupiedDateInfo]\": ()=>getOccupiedDateInfo()\n    }[\"HomePage.useMemo[occupiedDateInfo]\"], [\n        getOccupiedDateInfo\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen font-['Onest',sans-serif]\",\n        style: {\n            backgroundColor: \"#F4F2ED\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: \"py-8 md:py-16 px-4 sm:px-6 lg:px-8\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-4xl mx-auto text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-4 md:mb-6 leading-tight\",\n                                children: [\n                                    \"Plan Smarter\",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 411,\n                                        columnNumber: 15\n                                    }, this),\n                                    \"Travel Easier\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                lineNumber: 409,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                            lineNumber: 408,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-base sm:text-lg md:text-xl text-gray-600 max-w-3xl mx-auto px-4\",\n                                children: \"Know Where You Can Go — Instantly See Visa Rules, Book Trips, and Travel Confidently.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                lineNumber: 416,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                            lineNumber: 415,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                    lineNumber: 407,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                lineNumber: 406,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                className: \"pb-16 px-4 sm:px-6 lg:px-8\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-7xl mx-auto\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"hidden md:grid gap-4 p-6 bg-gray-50 border-b\",\n                                style: {\n                                    gridTemplateColumns: \"1fr 2fr 1.2fr 1.5fr 1fr\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"font-semibold text-gray-900\",\n                                            children: \"Country\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                            lineNumber: 433,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 432,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"font-semibold text-gray-900\",\n                                            children: \"Date Range\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                            lineNumber: 436,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 435,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"font-semibold text-gray-900\",\n                                                children: \"This Trip\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 439,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-xs text-gray-500\",\n                                                children: \"Days\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 440,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 438,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"font-semibold text-gray-900 text-sm\",\n                                                children: \"Total Used\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 443,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-xs text-gray-500\",\n                                                children: \"Last 180 days\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 444,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 442,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"font-semibold text-gray-900\",\n                                                children: \"Remaining\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 447,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-xs text-gray-500\",\n                                                children: \"Out of 90\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 448,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 446,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                lineNumber: 428,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"md:hidden p-4 bg-gray-50 border-b\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-semibold text-gray-900 text-center\",\n                                        children: \"Schengen Visa Calculator\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 454,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-xs text-gray-500 text-center mt-1\",\n                                        children: \"Track your 90/180 day rule compliance\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 455,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                lineNumber: 453,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"p-6 space-y-8\",\n                                children: [\n                                    entries.map((entry, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"relative\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex items-center justify-center mb-4 space-x-2 relative z-20\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `w-3 h-3 rounded-full transition-colors duration-300 ${entry.activeColumn === \"country\" ? \"bg-blue-500\" : entry.country ? \"bg-green-500\" : \"bg-gray-300\"}`\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 464,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-4 h-4 text-gray-400\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 473,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `w-3 h-3 rounded-full transition-colors duration-300 ${entry.activeColumn === \"dates\" ? \"bg-blue-500\" : entry.startDate && entry.endDate ? \"bg-green-500\" : entry.country ? \"bg-orange-400\" : \"bg-gray-300\"}`\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 474,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-4 h-4 text-gray-400\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 485,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `w-3 h-3 rounded-full transition-colors duration-300 ${entry.activeColumn === \"complete\" ? \"bg-green-500\" : \"bg-gray-300\"}`\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 486,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                    lineNumber: 463,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"hidden md:grid gap-6 items-center\",\n                                                    style: {\n                                                        gridTemplateColumns: \"1fr 2fr 1.2fr 1.5fr 1fr\"\n                                                    },\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"country\")}`,\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"relative\",\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                                            value: entry.country,\n                                                                            onChange: (e)=>updateEntry(entry.id, \"country\", e.target.value),\n                                                                            className: \"w-full bg-white border-0 shadow-sm h-12 text-center rounded-md px-3 py-2 text-sm font-medium text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 appearance-none cursor-pointer hover:bg-white\",\n                                                                            children: [\n                                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                                    value: \"\",\n                                                                                    disabled: true,\n                                                                                    children: \"\\uD83C\\uDDEA\\uD83C\\uDDFA Select Country\"\n                                                                                }, void 0, false, {\n                                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                    lineNumber: 503,\n                                                                                    columnNumber: 27\n                                                                                }, this),\n                                                                                schengenCountries.map((country)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                                        value: country.code,\n                                                                                        className: \"text-gray-900 font-medium\",\n                                                                                        children: [\n                                                                                            country.flag,\n                                                                                            \" \",\n                                                                                            country.name\n                                                                                        ]\n                                                                                    }, country.code, true, {\n                                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                        lineNumber: 505,\n                                                                                        columnNumber: 29\n                                                                                    }, this))\n                                                                            ]\n                                                                        }, void 0, true, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 498,\n                                                                            columnNumber: 37\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                            className: \"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                                className: \"w-4 h-4 text-gray-400\",\n                                                                                fill: \"none\",\n                                                                                stroke: \"currentColor\",\n                                                                                viewBox: \"0 0 24 24\",\n                                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                                    strokeLinecap: \"round\",\n                                                                                    strokeLinejoin: \"round\",\n                                                                                    strokeWidth: 2,\n                                                                                    d: \"M19 9l-7 7-7-7\"\n                                                                                }, void 0, false, {\n                                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                    lineNumber: 512,\n                                                                                    columnNumber: 29\n                                                                                }, this)\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 511,\n                                                                                columnNumber: 27\n                                                                            }, this)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 510,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 497,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                entry.activeColumn === \"country\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"text-xs text-blue-600 mt-2 text-center font-medium relative z-10\",\n                                                                    children: \"Select a country to continue\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 517,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 496,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"dates\")}`,\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                                    variant: \"outline\",\n                                                                    className: \"w-full justify-center items-center text-center font-normal bg-white h-12 text-sm px-4 border-0 shadow-sm disabled:opacity-50 disabled:cursor-not-allowed flex hover:bg-white\",\n                                                                    disabled: !entry.country,\n                                                                    onClick: ()=>handleOpenCalendar(entry.id),\n                                                                    children: entry.startDate && entry.endDate ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                        className: \"flex items-center justify-center\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800\",\n                                                                                children: `${(0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_5__.format)(entry.startDate, \"MMM dd\")} - ${(0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_5__.format)(entry.endDate, \"MMM dd\")}`\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 533,\n                                                                                columnNumber: 29\n                                                                            }, this),\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                                                className: \"ml-2 h-4 w-4 flex-shrink-0 text-blue-600\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 536,\n                                                                                columnNumber: 29\n                                                                            }, this)\n                                                                        ]\n                                                                    }, void 0, true, {\n                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                        lineNumber: 532,\n                                                                        columnNumber: 27\n                                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                        className: \"flex items-center justify-center\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                                                className: \"mr-2 h-4 w-4 flex-shrink-0 text-blue-600\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 540,\n                                                                                columnNumber: 29\n                                                                            }, this),\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800\",\n                                                                                children: !entry.country ? \"Select country first\" : \"Select dates\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 541,\n                                                                                columnNumber: 29\n                                                                            }, this)\n                                                                        ]\n                                                                    }, void 0, true, {\n                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                        lineNumber: 539,\n                                                                        columnNumber: 27\n                                                                    }, this)\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 525,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                entry.activeColumn === \"dates\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"text-xs text-blue-600 mt-2 text-center font-medium relative z-10\",\n                                                                    children: !entry.country ? \"Select a country first\" : \"Select your travel dates\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 548,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 524,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"results\")}`,\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"bg-white rounded-lg p-3 font-semibold text-base text-center border-0 shadow-sm h-12 flex items-center justify-center relative z-10\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                    className: \"font-medium text-gray-800 text-sm\",\n                                                                    children: entry.days > 0 ? `${entry.days} days` : \"Select dates first\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 557,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                lineNumber: 556,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 555,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"results\")}`,\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"bg-white rounded-lg p-3 font-semibold text-base text-center border-0 shadow-sm h-12 flex items-center justify-center relative z-10\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                    className: \"font-medium text-gray-800 text-sm\",\n                                                                    children: entry.daysInLast180 > 0 ? `${entry.daysInLast180} days` : \"—\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 565,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                lineNumber: 564,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 563,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"rounded-lg p-2\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"flex items-center justify-center h-20\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProgressCircle, {\n                                                                    daysRemaining: entry.daysRemaining,\n                                                                    size: 80\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 574,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                lineNumber: 573,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 572,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                    lineNumber: 494,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"md:hidden space-y-4\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"country\")}`,\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                                                                    children: \"Country\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 583,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"relative\",\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                                            value: entry.country,\n                                                                            onChange: (e)=>updateEntry(entry.id, \"country\", e.target.value),\n                                                                            className: \"w-full bg-white border-0 shadow-sm h-12 text-center rounded-md px-3 py-2 text-sm font-medium text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 appearance-none cursor-pointer hover:bg-white\",\n                                                                            children: [\n                                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                                    value: \"\",\n                                                                                    disabled: true,\n                                                                                    children: \"\\uD83C\\uDDEA\\uD83C\\uDDFA Select Country\"\n                                                                                }, void 0, false, {\n                                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                    lineNumber: 590,\n                                                                                    columnNumber: 27\n                                                                                }, this),\n                                                                                schengenCountries.map((country)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                                        value: country.code,\n                                                                                        className: \"text-gray-900 font-medium\",\n                                                                                        children: [\n                                                                                            country.flag,\n                                                                                            \" \",\n                                                                                            country.name\n                                                                                        ]\n                                                                                    }, country.code, true, {\n                                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                        lineNumber: 592,\n                                                                                        columnNumber: 29\n                                                                                    }, this))\n                                                                            ]\n                                                                        }, void 0, true, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 585,\n                                                                            columnNumber: 25\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                            className: \"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                                className: \"w-4 h-4 text-gray-400\",\n                                                                                fill: \"none\",\n                                                                                stroke: \"currentColor\",\n                                                                                viewBox: \"0 0 24 24\",\n                                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                                    strokeLinecap: \"round\",\n                                                                                    strokeLinejoin: \"round\",\n                                                                                    strokeWidth: 2,\n                                                                                    d: \"M19 9l-7 7-7-7\"\n                                                                                }, void 0, false, {\n                                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                    lineNumber: 599,\n                                                                                    columnNumber: 29\n                                                                                }, this)\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 598,\n                                                                                columnNumber: 27\n                                                                            }, this)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 597,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 584,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                entry.activeColumn === \"country\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"text-xs text-blue-600 mt-2 text-center font-medium\",\n                                                                    children: \"Select a country to continue\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 604,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 582,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: `rounded-lg p-4 ${getColumnBorderStyles(entry, \"dates\")}`,\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                                                                    children: \"Travel Dates\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 612,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                                    variant: \"outline\",\n                                                                    className: \"w-full justify-center items-center text-center font-normal bg-white h-12 text-sm px-4 border-0 shadow-sm disabled:opacity-50 disabled:cursor-not-allowed flex hover:bg-white\",\n                                                                    disabled: !entry.country,\n                                                                    onClick: ()=>handleOpenCalendar(entry.id),\n                                                                    children: entry.startDate && entry.endDate ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                        className: \"flex items-center justify-center\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800\",\n                                                                                children: `${(0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_5__.format)(entry.startDate, \"MMM dd\")} - ${(0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_5__.format)(entry.endDate, \"MMM dd\")}`\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 621,\n                                                                                columnNumber: 29\n                                                                            }, this),\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                                                className: \"ml-2 h-4 w-4 flex-shrink-0 text-blue-600\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 624,\n                                                                                columnNumber: 29\n                                                                            }, this)\n                                                                        ]\n                                                                    }, void 0, true, {\n                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                        lineNumber: 620,\n                                                                        columnNumber: 27\n                                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                        className: \"flex items-center justify-center\",\n                                                                        children: [\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Calendar_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                                                className: \"mr-2 h-4 w-4 flex-shrink-0 text-blue-600\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 628,\n                                                                                columnNumber: 29\n                                                                            }, this),\n                                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800\",\n                                                                                children: !entry.country ? \"Select country first\" : \"Select dates\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 629,\n                                                                                columnNumber: 29\n                                                                            }, this)\n                                                                        ]\n                                                                    }, void 0, true, {\n                                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                        lineNumber: 627,\n                                                                        columnNumber: 27\n                                                                    }, this)\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 613,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                entry.activeColumn === \"dates\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"text-xs text-blue-600 mt-2 text-center font-medium\",\n                                                                    children: !entry.country ? \"Select a country first\" : \"Select your travel dates\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 636,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 611,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"grid grid-cols-3 gap-4\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: `rounded-lg p-3 ${getColumnBorderStyles(entry, \"results\")}`,\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                                            className: \"block text-xs font-medium text-gray-500 mb-1 text-center\",\n                                                                            children: \"This Trip\"\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 646,\n                                                                            columnNumber: 25\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                            className: \"bg-white rounded-lg p-2 font-semibold text-sm text-center border-0 shadow-sm h-10 flex items-center justify-center\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800 text-sm\",\n                                                                                children: entry.days > 0 ? `${entry.days} days` : \"Select dates first\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 648,\n                                                                                columnNumber: 27\n                                                                            }, this)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 647,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 645,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: `rounded-lg p-3 ${getColumnBorderStyles(entry, \"results\")}`,\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                                            className: \"block text-xs font-medium text-gray-500 mb-1 text-center\",\n                                                                            children: \"Total Used\"\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 656,\n                                                                            columnNumber: 25\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                            className: \"bg-white rounded-lg p-2 font-semibold text-sm text-center border-0 shadow-sm h-10 flex items-center justify-center\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                                className: \"font-medium text-gray-800 text-sm\",\n                                                                                children: entry.daysInLast180 > 0 ? `${entry.daysInLast180} days` : \"—\"\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 658,\n                                                                                columnNumber: 27\n                                                                            }, this)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 657,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 655,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"rounded-lg p-3\",\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                                            className: \"block text-xs font-medium text-gray-500 mb-1 text-center\",\n                                                                            children: \"Remaining\"\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 666,\n                                                                            columnNumber: 25\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                            className: \"flex items-center justify-center h-10\",\n                                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProgressCircle, {\n                                                                                daysRemaining: entry.daysRemaining,\n                                                                                size: 40\n                                                                            }, void 0, false, {\n                                                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                                lineNumber: 668,\n                                                                                columnNumber: 27\n                                                                            }, this)\n                                                                        }, void 0, false, {\n                                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                            lineNumber: 667,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, void 0, true, {\n                                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                                    lineNumber: 665,\n                                                                    columnNumber: 23\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                            lineNumber: 643,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                    lineNumber: 580,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, entry.id, true, {\n                                            fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                            lineNumber: 461,\n                                            columnNumber: 17\n                                        }, this)),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex justify-center pt-4 space-x-4\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                onClick: addEntry,\n                                                className: \"flex items-center justify-center gap-2 hover:bg-gray-50 transition-colors duration-200 bg-white rounded-full px-6 py-2 border border-gray-300 cursor-pointer\",\n                                                style: {\n                                                    fontFamily: 'inherit'\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"font-medium text-gray-800 text-sm\",\n                                                        children: \"+\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                        lineNumber: 683,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"font-medium text-gray-800 text-sm\",\n                                                        children: \"Add Another Trip\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                        lineNumber: 684,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 678,\n                                                columnNumber: 17\n                                            }, this),\n                                            totalDays > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                className: \"flex items-center space-x-2 text-white px-6 py-2 rounded-full hover:opacity-90 font-medium\",\n                                                style: {\n                                                    backgroundColor: \"#FA9937\"\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: \"Save Progress\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                    lineNumber: 692,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                                lineNumber: 688,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                        lineNumber: 677,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                                lineNumber: 459,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                        lineNumber: 426,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                    lineNumber: 425,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                lineNumber: 424,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_CalendarModal_DateOverlapValidator_useDateOverlapPrevention_schengen_ui__WEBPACK_IMPORTED_MODULE_3__.CalendarModal, {\n                isOpen: isCalendarOpen,\n                onClose: handleCloseCalendar,\n                onDateRangeSelect: handleDateRangeSelect,\n                initialRange: {\n                    startDate: null,\n                    endDate: null\n                },\n                disabledDates: disabledDates,\n                occupiedDateInfo: occupiedDateInfo\n            }, void 0, false, {\n                fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n                lineNumber: 702,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/troysamuels/SCHENGEN VISA CALCULATOR/schengenvisacalculator/packages/app/src/app/page.tsx\",\n        lineNumber: 404,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/page.tsx\n");

/***/ }),

/***/ "(ssr)/__barrel_optimize__?names=Button,CalendarModal,DateOverlapValidator,useDateOverlapPrevention!=!../ui/dist/index.esm.js":
/*!******************************************************************************************************************************!*\
  !*** __barrel_optimize__?names=Button,CalendarModal,DateOverlapValidator,useDateOverlapPrevention!=!../ui/dist/index.esm.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Badge: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Badge),
/* harmony export */   Button: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Button),
/* harmony export */   Calendar: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Calendar),
/* harmony export */   CalendarModal: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CalendarModal),
/* harmony export */   Card: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Card),
/* harmony export */   CardContent: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CardContent),
/* harmony export */   CardDescription: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CardDescription),
/* harmony export */   CardFooter: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CardFooter),
/* harmony export */   CardHeader: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CardHeader),
/* harmony export */   CardTitle: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CardTitle),
/* harmony export */   CircularProgress: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.CircularProgress),
/* harmony export */   DateOverlapValidator: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.DateOverlapValidator),
/* harmony export */   Header: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Header),
/* harmony export */   Input: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Input),
/* harmony export */   Label: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.Label),
/* harmony export */   addDays: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.addDays),
/* harmony export */   badgeVariants: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.badgeVariants),
/* harmony export */   buttonVariants: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.buttonVariants),
/* harmony export */   cn: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.cn),
/* harmony export */   daysBetween: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.daysBetween),
/* harmony export */   debounce: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.debounce),
/* harmony export */   endOfDay: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.endOfDay),
/* harmony export */   formatDateKey: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.formatDateKey),
/* harmony export */   formatDateRange: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.formatDateRange),
/* harmony export */   formatDisplayDate: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.formatDisplayDate),
/* harmony export */   generateId: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.generateId),
/* harmony export */   getDateRange: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getDateRange),
/* harmony export */   isDateInRange: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isDateInRange),
/* harmony export */   isFutureDate: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isFutureDate),
/* harmony export */   isMobile: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isMobile),
/* harmony export */   isPastDate: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isPastDate),
/* harmony export */   isSameDay: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isSameDay),
/* harmony export */   isToday: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isToday),
/* harmony export */   isTouchDevice: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice),
/* harmony export */   labelVariants: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.labelVariants),
/* harmony export */   startOfDay: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.startOfDay),
/* harmony export */   subtractDays: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.subtractDays),
/* harmony export */   throttle: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.throttle),
/* harmony export */   useDateOverlapPrevention: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.useDateOverlapPrevention)
/* harmony export */ });
/* harmony import */ var _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_ui_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ui/dist/index.esm.js */ "(ssr)/../ui/dist/index.esm.js");



/***/ }),

/***/ "(ssr)/__barrel_optimize__?names=RobustSchengenCalculator,getCountriesForSelect!=!../calculator/dist/index.esm.js":
/*!******************************************************************************************************************!*\
  !*** __barrel_optimize__?names=RobustSchengenCalculator,getCountriesForSelect!=!../calculator/dist/index.esm.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DateOverlapValidator: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.DateOverlapValidator),
/* harmony export */   RobustSchengenCalculator: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.RobustSchengenCalculator),
/* harmony export */   SCHENGEN_COUNTRIES: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.SCHENGEN_COUNTRIES),
/* harmony export */   SCHENGEN_COUNTRIES_COUNT: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.SCHENGEN_COUNTRIES_COUNT),
/* harmony export */   getCountriesForSelect: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getCountriesForSelect),
/* harmony export */   getCountryByCode: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getCountryByCode),
/* harmony export */   getCountryByName: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getCountryByName),
/* harmony export */   getEUMemberCountries: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getEUMemberCountries),
/* harmony export */   getNonEUSchengenCountries: () => (/* reexport safe */ _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__.getNonEUSchengenCountries)
/* harmony export */ });
/* harmony import */ var _Users_troysamuels_SCHENGEN_VISA_CALCULATOR_schengenvisacalculator_packages_calculator_dist_index_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../calculator/dist/index.esm.js */ "(ssr)/../calculator/dist/index.esm.js");



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/date-fns","vendor-chunks/@opentelemetry","vendor-chunks/lucide-react","vendor-chunks/next-themes","vendor-chunks/tailwind-merge","vendor-chunks/clsx","vendor-chunks/class-variance-authority"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftroysamuels%2FSCHENGEN%20VISA%20CALCULATOR%2Fschengenvisacalculator%2Fpackages%2Fapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();