{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// Payments module\nexport const PaymentProvider = {\n  init: () => {},\n}\n\nexport enum SubscriptionTier {\n  FREE = 'free',\n  PREMIUM = 'premium',\n  PRO = 'pro',\n  BUSINESS = 'business'\n}\n\nexport interface SubscriptionTierData {\n  id: string\n  name: string\n  price: number\n  features: string[]\n}\n\nexport const SUBSCRIPTION_TIERS: SubscriptionTierData[] = [\n  { id: 'free', name: 'Free', price: 0, features: ['basic_calculator'] },\n  { id: 'premium', name: 'Premium', price: 9.99, features: ['basic_calculator', 'unlimited_lists', 'pdf_export'] },\n  { id: 'pro', name: 'Pro', price: 19.99, features: ['basic_calculator', 'unlimited_lists', 'pdf_export', 'api_access'] },\n]\n\nexport function checkFeatureAccess(userTier: string, feature: string): boolean {\n  const tier = SUBSCRIPTION_TIERS.find(t => t.id === userTier)\n  return tier ? tier.features.includes(feature) : false\n}\n\nexport function getTierComparison(currentTier: string, targetTier: string) {\n  const current = SUBSCRIPTION_TIERS.find(t => t.id === currentTier)\n  const target = SUBSCRIPTION_TIERS.find(t => t.id === targetTier)\n  \n  if (!current || !target) return null\n  \n  return {\n    current,\n    target,\n    savings: target.price - current.price,\n    newFeatures: target.features.filter(f => !current.features.includes(f))\n  }\n}\n\nexport function formatPrice(price: number): string {\n  return price === 0 ? 'Free' : `$${price}/month`\n}\n\n// Stripe types stub\nexport interface StripeSession {\n  id: string\n  url: string\n}\n\nexport interface CreateCheckoutSessionRequest {\n  priceId: string\n  userId: string\n  successUrl: string\n  cancelUrl: string\n}\n\n// Stub functions for Stripe integration\nexport async function createCheckoutSession(request: CreateCheckoutSessionRequest): Promise<StripeSession> {\n  throw new Error('Stripe integration not implemented')\n}\n\nexport async function getSubscriptionStatus(userId: string): Promise<string> {\n  return 'free'\n}\n\n// Additional types and functions for payment modal\nexport enum BillingCycle {\n  MONTHLY = 'monthly',\n  YEARLY = 'yearly'\n}\n\nexport function calculateYearlySavings(monthlyPrice: number): number {\n  const yearlyPrice = monthlyPrice * 10 // 20% discount\n  const monthlyCost = monthlyPrice * 12\n  return monthlyCost - yearlyPrice\n}\n\nexport function getStripe() {\n  // Stripe instance placeholder\n  return null\n}\n\nexport function getTierFeatures(tierId: string): string[] {\n  const tier = SUBSCRIPTION_TIERS.find(t => t.id === tierId)\n  return tier ? tier.features : []\n}\n\nexport const TIER_PRICING = {\n  free: { monthly: 0, yearly: 0 },\n  premium: { monthly: 9.99, yearly: 99 },\n  pro: { monthly: 19.99, yearly: 199 },\n  business: { monthly: 49.99, yearly: 499 }\n}"],"names":["PaymentProvider","init","SubscriptionTier","SUBSCRIPTION_TIERS","id","name","price","features","checkFeatureAccess","userTier","feature","tier","find","t","includes","getTierComparison","currentTier","targetTier","current","target","savings","newFeatures","filter","f","formatPrice","createCheckoutSession","request","Error","getSubscriptionStatus","userId","BillingCycle","calculateYearlySavings","monthlyPrice","yearlyPrice","monthlyCost","getStripe","getTierFeatures","tierId","TIER_PRICING","free","monthly","yearly","premium","pro","business"],"mappings":"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"}