name: Schengen Calculator Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test-accuracy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run fast test suite
      run: pnpm run test
      
    - name: Upload fast test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-fast-node-${{ matrix.node-version }}
        path: "*.log"
        
    - name: Run full test suite
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: pnpm run test:full
      
    - name: Upload full test results
      uses: actions/upload-artifact@v4
      if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        name: test-results-full-node-${{ matrix.node-version }}
        path: "*.log"


  eu-compliance-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run EU compliance validation
      run: |
        pnpm run test:eu > eu-compliance-report.txt
        cat eu-compliance-report.txt
        
    - name: Check EU compliance status
      run: |
        if grep -q "❌" eu-compliance-report.txt; then
          echo "EU compliance tests failed"
          exit 1
        else
          echo "EU compliance tests passed"
        fi
        
    - name: Upload EU compliance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: eu-compliance-report
        path: eu-compliance-report.txt

  edge-case-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run edge case tests
      run: |
        pnpm run test:edge > edge-case-report.txt
        cat edge-case-report.txt
        
    - name: Check edge case status
      run: |
        if grep -q "❌" edge-case-report.txt; then
          echo "Edge case tests failed"
          exit 1
        else
          echo "Edge case tests passed"
        fi
        
    - name: Upload edge case report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: edge-case-report
        path: edge-case-report.txt

  performance-benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run performance benchmarks
      run: |
        pnpm run benchmark 2>&1 | tee performance-log.txt
        
    - name: Analyze performance results
      run: |
        echo "Performance Analysis:"
        grep -E "(Performance:|ms)" performance-log.txt || echo "No performance data found"
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: |
          performance-results.json
          performance-log.txt

  regression-testing:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run regression tests
      run: |
        echo "Running regression tests against main branch..."
        pnpm run test:comprehensive > regression-results.txt
        
    - name: Compare with baseline
      run: |
        echo "Regression test results:"
        cat regression-results.txt
        
    - name: Upload regression results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-results
        path: regression-results.txt

  test-summary:
    runs-on: ubuntu-latest
    needs: [test-accuracy, eu-compliance-check, edge-case-validation, performance-benchmark]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate test summary
      run: |
        echo "# 🧪 Schengen Calculator Test Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Results" >> test-summary.md
        echo "" >> test-summary.md
        
        # Check EU compliance
        if [ -f eu-compliance-report/eu-compliance-report.txt ]; then
          if grep -q "✅ All EU official test cases passed" eu-compliance-report/eu-compliance-report.txt; then
            echo "- ✅ EU Compliance: PASSED" >> test-summary.md
          else
            echo "- ❌ EU Compliance: FAILED" >> test-summary.md
          fi
        fi
        
        # Check edge cases
        if [ -f edge-case-report/edge-case-report.txt ]; then
          if grep -q "✅ ALL EDGE CASES HANDLED CORRECTLY" edge-case-report/edge-case-report.txt; then
            echo "- ✅ Edge Cases: PASSED" >> test-summary.md
          else
            echo "- ❌ Edge Cases: FAILED" >> test-summary.md
          fi
        fi
        
        # Add performance info
        if [ -f performance-results/performance-log.txt ]; then
          echo "- 🚀 Performance: Tests completed successfully" >> test-summary.md
        fi
        
        echo "" >> test-summary.md
        echo "Generated on: $(date -u)" >> test-summary.md
        
        cat test-summary.md
        
    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md

    - name: Comment test results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const summary = fs.readFileSync('test-summary.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          } catch (error) {
            console.log('Could not read test summary:', error.message);
          }